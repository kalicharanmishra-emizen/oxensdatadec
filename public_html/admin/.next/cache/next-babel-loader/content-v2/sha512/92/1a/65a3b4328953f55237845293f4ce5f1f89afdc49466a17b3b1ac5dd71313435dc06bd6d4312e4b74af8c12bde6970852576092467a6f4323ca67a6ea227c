{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst settingSlice = createSlice({\n  name: \"Setting\",\n  initialState: {\n    main: {\n      driverWaitTime: 0,\n      serviceFee: 0,\n      maxServiceFee: 0,\n      deliveryDistance: 0,\n      minDeliveryCharge: 0,\n      deliveryExtraFee: 0,\n      fixLimitDeliveryDistance: 0,\n      deliveryExtraFeeUnit: 0,\n      vatCharge: 0,\n      fixDriverDistance: 0,\n      minDriverPayFirst: 0,\n      extraDriverPaySecond: 0,\n      deliveryExtraPayUnit: 0,\n      deliveryExtraPay: 0,\n      taxPay: 0\n    },\n    order: {\n      isLoading: true,\n      data: []\n    },\n    orderDetail: {\n      vehicleType: '',\n      maxDistance: '',\n      packageLimit: []\n    }\n  },\n  reducers: {\n    setMainSetting: (state, action) => {\n      state.main = action.payload;\n    },\n    setOrderList: (state, action) => {\n      state.order = {\n        isLoading: false,\n        data: action.payload\n      };\n    },\n    setOrderDetail: (state, action) => {\n      state.orderDetail = action.payload;\n    },\n    unSetOrderDetail: (state, action) => {\n      state.orderDetail = {\n        vehicleType: '',\n        maxDistance: '',\n        packageLimit: []\n      };\n    }\n  }\n});\nexport default settingSlice.reducer;\nconst {\n  setMainSetting,\n  setOrderList,\n  setOrderDetail,\n  unSetOrderDetail\n} = settingSlice.actions;\nexport const getMainSetting = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/main/list', {});\n    dispatch(setMainSetting(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const updateMainSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/main/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getOrderSettingList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/order/list', {});\n    dispatch(unSetOrderDetail());\n    dispatch(setOrderList(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getOrderSettingDetail = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/order/detail', value);\n    dispatch(setOrderDetail(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const updateOrderSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/order/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}