{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from \"../Helper/helper\";\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    typeList: [{\n      value: \"empty\",\n      label: \"Select Type\"\n    }],\n    categoryList: [],\n    categoryDetails: null\n  },\n  reducers: {\n    typeLinting: (state, action) => {\n      action.payload.data.map(data => {\n        state.typeList.push({\n          value: data._id,\n          label: data.title\n        });\n      });\n    },\n    setCategoryList: (state, action) => {\n      state.categoryList = action.payload.data;\n    },\n    setCategoryDetail: (state, action) => {\n      state.categoryDetails = action.payload.data;\n    },\n    unSetCategoryDetail: (state, action) => {\n      state.categoryDetails = null;\n    }\n  }\n});\nconst {\n  typeLinting,\n  setCategoryList,\n  setCategoryDetail,\n  unSetCategoryDetail\n} = categorySlice.actions;\nexport default categorySlice.reducer;\nexport const getApiType = () => async dispatch => {\n  try {\n    const res = await callApi('post', '/category/type/list');\n    dispatch(typeLinting(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const createCategory = value => async dispatch => {\n  try {\n    const res = await callApi('post', '/category/create', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getCategoryList = () => async dispatch => {\n  try {\n    const res = await callApi('post', '/category/list', {});\n    dispatch(setCategoryList(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getCategoryDetails = value => async dispatch => {\n  try {\n    const res = await callApi('post', '/category/detail', value);\n    dispatch(setCategoryDetail(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const removeCategoryDetails = () => async dispatch => {\n  dispatch(unSetCategoryDetail());\n};\nexport const updateCategory = value => async dispatch => {\n  try {\n    const res = await callApi('post', '/category/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/categorySlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","categorySlice","name","initialState","typeList","value","label","categoryList","categoryDetails","reducers","typeLinting","state","action","payload","data","map","push","_id","title","setCategoryList","setCategoryDetail","unSetCategoryDetail","actions","reducer","getApiType","dispatch","res","e","createCategory","getCategoryList","getCategoryDetails","removeCategoryDetails","updateCategory"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from \"../Helper/helper\";\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst categorySlice = createSlice({\n    name:'category',\n    initialState: {\n        typeList:[\n            {\n                value:\"empty\",\n                label:\"Select Type\"\n            }\n        ],\n        categoryList:[],\n        categoryDetails:null\n    },\n    reducers:{\n        typeLinting:(state,action)=>{\n            action.payload.data.map(data=>{\n                state.typeList.push(\n                    {\n                        value:data._id,\n                        label:data.title\n                    }\n                )    \n            })\n        },\n        setCategoryList:(state,action)=>{\n            state.categoryList = action.payload.data\n        },\n        setCategoryDetail:(state,action)=>{\n            state.categoryDetails = action.payload.data\n        },\n        unSetCategoryDetail:(state,action)=>{\n            state.categoryDetails = null\n        },\n    }\n})\nconst {typeLinting,setCategoryList,setCategoryDetail,unSetCategoryDetail} = categorySlice.actions\nexport default categorySlice.reducer\n\nexport const getApiType = () => async dispatch => {\n    try {\n        const res = await callApi('post','/category/type/list')\n        dispatch(typeLinting(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const createCategory = (value) => async dispatch => {\n    try {\n        const res = await callApi('post','/category/create',value)\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const getCategoryList = () => async dispatch => {\n    try {\n        const res = await callApi('post','/category/list',{})\n        dispatch(setCategoryList(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const getCategoryDetails = (value) => async dispatch => {\n    try {\n        const res = await callApi('post','/category/detail',value)\n        dispatch(setCategoryDetail(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const removeCategoryDetails = () => async dispatch => {\n        dispatch(unSetCategoryDetail())\n}\nexport const updateCategory = (value) => async dispatch => {\n    try {\n        const res = await callApi('post','/category/update',value)\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}