{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nexport default function FromInputSelect(props) {\n  var _useState = useState(''),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  var _useState2 = useState(''),\n      validation = _useState2[0],\n      setValidation = _useState2[1]; // const [submitValidate, setsubmitValidate] = useState(false)\n\n\n  var _useState3 = useState(null),\n      defaultOption = _useState3[0],\n      setDefaultOption = _useState3[1];\n\n  var isDefault = props.isDefault;\n  useEffect(function () {\n    if (typeof props.defValue === 'string') {\n      setFormData(props.defValue);\n      setDefaultOption(props.options.find(function (data) {\n        return data.value === props.defValue;\n      }));\n    } else {\n      var optiondata = [];\n      props.defValue.map(function (data) {\n        optiondata.push(data.value);\n      });\n      setFormData(optiondata);\n      setDefaultOption(props.defValue);\n    }\n\n    if (props.validation.required) {\n      if (props.defValue != '' && props.defValue != null && props.defValue != 'empty' && props.defValue.length != undefined && props.defValue.length > 0) {\n        setValidation(null);\n      }\n    } else {\n      setValidation(null);\n    }\n  }, [props.defValue]);\n\n  var validateData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (props.validation.required) {\n                if (value != null && value != 'empty' && value.length != undefined && value.length > 0) {\n                  setValidation(null);\n                } else {\n                  setValidation('This field is required');\n                }\n              }\n\n              if (props.validation.limit != null) {\n                if (value.length > props.validation.limit) {\n                  setValidation(\"Select not more than \".concat(props.validation.limit, \" option\"));\n                } else {\n                  setValidation(null);\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function validateData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var optiondata;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(e.length === undefined)) {\n                _context2.next = 6;\n                break;\n              }\n\n              setFormData(e.value);\n              _context2.next = 4;\n              return validateData(e.value);\n\n            case 4:\n              _context2.next = 11;\n              break;\n\n            case 6:\n              optiondata = [];\n              e.map(function (data) {\n                optiondata.push(data.value);\n              });\n              setFormData(optiondata);\n              _context2.next = 11;\n              return validateData(optiondata);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChange(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (validation !== '') {\n      var rowReturnData = {\n        key: props.name,\n        error: validation,\n        data: formData\n      };\n      props.getValue(rowReturnData);\n    }\n  }, [validation, formData]);\n  useEffect(function () {\n    if (props.submitValidate) {\n      validateData(formData);\n    } // setsubmitValidate(props.submitValidate)\n\n  }, [props.submitValidate]); // useEffect(() => {\n  //     if (submitValidate) {\n  //         validateData(formData)\n  //     }\n  // }, [submitValidate])\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [defaultOption ? /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(Select, {\n        instanceId: props.id,\n        isDisabled: isDefault,\n        onChange: handleChange,\n        isMulti: props.isMulti,\n        options: props.options,\n        defaultValue: defaultOption\n      })\n    }) : /*#__PURE__*/_jsx(Select, {\n      instanceId: props.id,\n      isDisabled: isDefault,\n      onChange: handleChange,\n      isMulti: props.isMulti,\n      options: props.options\n    }), validation ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"validation-error-custome\",\n      children: validation\n    }) : '']\n  });\n}","map":null,"metadata":{},"sourceType":"module"}