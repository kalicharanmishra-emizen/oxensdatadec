{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Badge, Col, FormGroup, Row, Table } from 'reactstrap';\nimport PaginationServer from '../Pagination/PaginationServer';\nimport { getDriverJobs } from '../../reducers/driverSlice';\nimport Loader from '../ApiLoader/loader';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getDiverJobColor, getDiverJobTitle } from '../../Helper/helper';\n\nconst Jobs = ({\n  activeTab,\n  driverId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  const {\n    0: jobsList,\n    1: setDriverList\n  } = useState([]);\n  const {\n    0: paginationData,\n    1: setPaginationData\n  } = useState({});\n  const {\n    0: filterData,\n    1: setFilterData\n  } = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const getJobsList = useSelector(state => state.driverSlice.driverJob);\n\n  const pageChange = data => {\n    setLoader(true);\n    dispatch(getDriverJobs({\n      page: data,\n      driverId: driverId\n    }, filterData));\n  };\n\n  const handelFilter = type => {\n    if (type === 'reset') {\n      setFilterData({\n        startDate: '',\n        endDate: ''\n      });\n      dispatch(getDriverJobs({\n        page: 1,\n        driverId: driverId\n      }, {}));\n    } else {\n      dispatch(getDriverJobs({\n        page: 1,\n        driverId: driverId\n      }, filterData));\n    }\n  };\n\n  useEffect(() => {\n    if (activeTab) {\n      setLoader(true);\n      dispatch(getDriverJobs({\n        page: 1,\n        driverId: driverId\n      }, filterData));\n    }\n  }, [activeTab]);\n  useEffect(() => {\n    if (getJobsList) {\n      let pagData = {\n        totalDocs: getJobsList.totalDocs,\n        limit: getJobsList.limit,\n        page: getJobsList.page,\n        totalPages: getJobsList.totalPages,\n        hasPrevPage: getJobsList.hasPrevPage,\n        hasNextPage: getJobsList.hasNextPage,\n        prevPage: getJobsList.prevPage,\n        nextPage: getJobsList.nextPage\n      };\n      setPaginationData(pagData);\n      setDriverList(getJobsList.docs);\n      setLoader(false);\n    }\n  }, [getJobsList]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxs(Col, {\n      xl: \"12\",\n      children: [/*#__PURE__*/_jsx(\"h6\", {\n        children: \"Filter\"\n      }), /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Date From\"\n            }), /*#__PURE__*/_jsx(DatePicker, {\n              className: \"form-control\",\n              selected: filterData.startDate != '' ? new Date(filterData.startDate) : null,\n              maxDate: filterData.endDate != '' ? new Date(filterData.endDate) : null,\n              onChange: date => {\n                filterData.startDate = moment(date).format('YYYY-MM-DD');\n                setFilterData(_objectSpread({}, filterData));\n              }\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Date To\"\n            }), /*#__PURE__*/_jsx(DatePicker, {\n              className: \"form-control\",\n              selected: filterData.endDate != '' ? new Date(filterData.endDate) : null,\n              minDate: filterData.startDate != '' ? new Date(filterData.startDate) : null,\n              onChange: date => {\n                filterData.endDate = moment(date).format('YYYY-MM-DD');\n                setFilterData(_objectSpread({}, filterData));\n              }\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(Col, {\n          md: \"4\",\n          className: \"mt-md-4 mt-0\",\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            onClick: () => handelFilter('filter'),\n            children: \"Filter\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info\",\n            onClick: () => handelFilter('reset'),\n            children: \"Reset\"\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(Col, {\n      xl: \"12\",\n      children: /*#__PURE__*/_jsxs(Table, {\n        children: [/*#__PURE__*/_jsx(\"thead\", {\n          children: /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"td\", {\n              children: \"#\"\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: \"Is First\"\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: \"Status\"\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: \"Store\"\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: \"Order Number\"\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: \"CreatedAt\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"tbody\", {\n          children: loader ? /*#__PURE__*/_jsx(\"tr\", {\n            children: /*#__PURE__*/_jsx(\"td\", {\n              colSpan: \"6\",\n              children: /*#__PURE__*/_jsx(Loader, {})\n            })\n          }) : jobsList.length == 0 ? /*#__PURE__*/_jsx(\"tr\", {\n            children: /*#__PURE__*/_jsx(\"td\", {\n              colSpan: \"6\",\n              children: \"No Data Found\"\n            })\n          }) : jobsList.map((item, key) => /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsxs(\"td\", {\n              children: [\" \", paginationData.page + key, \" \"]\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsx(Badge, {\n                color: item.isFirst ? 'success' : 'danger',\n                children: item.isFirst ? 'True' : 'False'\n              })\n            }), /*#__PURE__*/_jsx(\"td\", {\n              children: /*#__PURE__*/_jsx(Badge, {\n                color: getDiverJobColor(item.status),\n                children: getDiverJobTitle(item.status)\n              })\n            }), /*#__PURE__*/_jsxs(\"td\", {\n              children: [\" \", item.storeDetail.name, \" \"]\n            }), /*#__PURE__*/_jsxs(\"td\", {\n              children: [\" \", item.orderDetail.orderNumber, \" \"]\n            }), /*#__PURE__*/_jsxs(\"td\", {\n              children: [\" \", moment(item.createdAt).format('MMMM Do YYYY, h:mm:ss a'), \" \"]\n            })]\n          }, item._id))\n        }), /*#__PURE__*/_jsx(\"tfoot\", {\n          children: /*#__PURE__*/_jsx(\"tr\", {\n            children: /*#__PURE__*/_jsx(\"td\", {\n              colSpan: 6,\n              className: \"text-right\",\n              children: paginationData ? /*#__PURE__*/_jsx(PaginationServer, {\n                data: paginationData,\n                pagFun: pageChange\n              }) : null\n            })\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default Jobs;","map":null,"metadata":{},"sourceType":"module"}