{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst driverSlice = createSlice({\n  name: \"Driver\",\n  initialState: {\n    driverList: null,\n    driverDetail: {\n      isLoading: true,\n      data: {}\n    },\n    driverIncome: null,\n    driverJob: null\n  },\n  reducers: {\n    listing: (state, action) => {\n      state.driverList = action.payload;\n    },\n    setDriverDetail: (state, action) => {\n      state.driverDetail = {\n        isLoading: false,\n        data: action.payload\n      };\n    },\n    unSetDriverDetail: (state, action) => {\n      state.driverDetail = {\n        isLoading: true,\n        data: {}\n      };\n    },\n    setDriverIncome: (state, action) => {\n      state.driverIncome = action.payload;\n    },\n    unSetDriverIncome: (state, action) => {\n      state.driverIncome = null;\n    },\n    setDriverJobs: (state, action) => {\n      state.driverJob = action.payload;\n    },\n    unSetDriverJobs: (state, action) => {\n      state.driverJob = null;\n    }\n  }\n});\nexport default driverSlice.reducer;\nconst {\n  listing,\n  setDriverDetail,\n  unSetDriverDetail,\n  setDriverIncome,\n  unSetDriverIncome,\n  setDriverJobs,\n  unSetDriverJobs\n} = driverSlice.actions;\nexport const getList = (page = 1) => async dispatch => {\n  try {\n    const res = await callApi('post', `/driver/list?page=${page}`, {});\n    dispatch(unSetDriverDetail());\n    dispatch(listing(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getDetail = value => async dispatch => {\n  try {\n    const res = await callApi('post', `/driver/detail`, value);\n    dispatch(setDriverDetail(res.data.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getDriverIncome = (value, filter) => async dispatch => {\n  try {\n    let tempVal = Object.assign({}, value, filter);\n    const res = await callApi('post', `/driver/driverIncome`, tempVal);\n    dispatch(unSetDriverJobs());\n    dispatch(setDriverIncome(res.data.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getDriverJobs = (value, filter) => async dispatch => {\n  try {\n    let tempVal = Object.assign({}, value, filter);\n    const res = await callApi('post', `/driver/driverJobs`, tempVal);\n    dispatch(unSetDriverIncome());\n    dispatch(setDriverJobs(res.data.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/driverSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","driverSlice","name","initialState","driverList","driverDetail","isLoading","data","driverIncome","driverJob","reducers","listing","state","action","payload","setDriverDetail","unSetDriverDetail","setDriverIncome","unSetDriverIncome","setDriverJobs","unSetDriverJobs","reducer","actions","getList","page","dispatch","res","e","getDetail","value","getDriverIncome","filter","tempVal","Object","assign","getDriverJobs"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst driverSlice = createSlice({\n    name:\"Driver\",\n    initialState:{\n        driverList:null,\n        driverDetail:{\n            isLoading:true,\n            data:{}\n        },\n        driverIncome:null,\n        driverJob:null\n    },\n    reducers:{\n        listing:(state,action)=>{\n            state.driverList=action.payload\n        },\n        setDriverDetail:(state,action)=>{\n            state.driverDetail = {\n                isLoading:false,\n                data: action.payload\n            }\n        },\n        unSetDriverDetail:(state,action)=>{\n            state.driverDetail = {\n                isLoading:true,\n                data: {}\n            }\n        },\n        setDriverIncome:(state,action) => {\n            state.driverIncome = action.payload\n        },\n        unSetDriverIncome:(state,action) => {\n            state.driverIncome = null\n        },\n        setDriverJobs:(state,action) => {\n            state.driverJob = action.payload\n        },\n        unSetDriverJobs:(state,action) => {\n            state.driverJob = null\n        }\n    }\n})\nexport default driverSlice.reducer\nconst { listing, setDriverDetail, unSetDriverDetail, setDriverIncome, unSetDriverIncome, setDriverJobs, unSetDriverJobs } = driverSlice.actions\n\nexport const getList = (page=1) => async dispatch =>{\n    try {\n        const res = await callApi('post',`/driver/list?page=${page}`,{})\n        dispatch(unSetDriverDetail())\n        dispatch(listing(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const getDetail = (value) => async dispatch =>{\n    try {\n        const res = await callApi('post',`/driver/detail`,value)\n        dispatch(setDriverDetail(res.data.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const getDriverIncome = (value,filter) => async dispatch => {\n    try {\n        let tempVal = Object.assign({},value,filter)\n        const res = await callApi('post',`/driver/driverIncome`,tempVal)\n        dispatch(unSetDriverJobs())\n        dispatch(setDriverIncome(res.data.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const getDriverJobs = (value,filter) => async dispatch => {\n    try {\n        let tempVal = Object.assign({},value,filter)\n        const res = await callApi('post',`/driver/driverJobs`,tempVal)\n        dispatch(unSetDriverIncome())\n        dispatch(setDriverJobs(res.data.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}"]},"metadata":{},"sourceType":"module"}