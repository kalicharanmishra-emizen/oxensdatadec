{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { FormFeedback, Input } from \"reactstrap\";\nexport default function InputCom(props) {\n  const {\n    0: formData,\n    1: setFormData\n  } = useState('');\n  const {\n    0: validation,\n    1: setValidation\n  } = useState(''); // const [submitValidate, setsubmitValidate] = useState(false)\n\n  let isDefault = false;\n\n  if ('isDefault' in props) {\n    isDefault = props.isDefault;\n  }\n\n  const handleChange = async e => {\n    props.getValue(props.name, e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Input, {\n      className: \"form-control-alternative\",\n      type: props.type,\n      name: props.name,\n      min: props !== null && props !== void 0 && props.min ? props === null || props === void 0 ? void 0 : props.min : \"\",\n      max: props !== null && props !== void 0 && props.max ? props === null || props === void 0 ? void 0 : props.max : \"\",\n      placeholder: props.placeholder,\n      value: props.defValue,\n      disabled: isDefault,\n      onChange: handleChange,\n      invalid: props.error ? true : false\n    }), /*#__PURE__*/_jsx(FormFeedback, {\n      children: props.error\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}