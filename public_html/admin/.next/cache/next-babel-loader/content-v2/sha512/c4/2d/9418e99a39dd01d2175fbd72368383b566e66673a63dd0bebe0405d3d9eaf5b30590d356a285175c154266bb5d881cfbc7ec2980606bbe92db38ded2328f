{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/Form/LocationCom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MapWrapper from \"../../components/Map/MapWrapper\";\nimport AutoPicker from \"../../components/Map/AutoPicker\";\nimport { Modal, ModalBody } from 'reactstrap';\nexport default function LocationCom(props) {\n  _s();\n\n  var _useState = useState(false),\n      mapToggle = _useState[0],\n      setMapToggle = _useState[1];\n\n  var _useState2 = useState({\n    address: \"\",\n    lat: \"\",\n    lng: \"\"\n  }),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  useEffect(function () {\n    setLocation({\n      address: props.defValue.address ? props.defValue.address : '',\n      lat: props.defValue.lat ? props.defValue.lat : '',\n      lng: props.defValue.lng ? props.defValue.lng : ''\n    });\n  }, [props.defValue]);\n\n  var getLocation = function getLocation(location) {\n    props.getValue('location', {\n      address: location.formatted_address,\n      lat: location.geometry.location.lat(),\n      lng: location.geometry.location.lng()\n    });\n  };\n\n  var toggleMap = function toggleMap() {\n    setMapToggle(!mapToggle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      role: \"botton\",\n      onClick: toggleMap,\n      className: \"custom-input\",\n      children: location.address != \"\" ? location.address : \"Store Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"validation-error-custome\",\n      children: props.error ? props.error.address : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }, this) : '', /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"location-modal\",\n      isOpen: mapToggle,\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(MapWrapper, {\n          getLocation: getLocation,\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AutoPicker, {\n          toggleMap: toggleMap,\n          getLocation: getLocation,\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LocationCom, \"gqBwxcFBmZq1hcJcBFWOc/V1w6c=\");\n\n_c = LocationCom;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationCom\");","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/Form/LocationCom.js"],"names":["React","useEffect","useState","MapWrapper","AutoPicker","Modal","ModalBody","LocationCom","props","mapToggle","setMapToggle","address","lat","lng","location","setLocation","defValue","getLocation","getValue","formatted_address","geometry","toggleMap","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA,kBACNN,QAAQ,CAAC,KAAD,CADF;AAAA,MAChCO,SADgC;AAAA,MACtBC,YADsB;;AAAA,mBAERR,QAAQ,CAAC;AACpCS,IAAAA,OAAO,EAAC,EAD4B;AAEpCC,IAAAA,GAAG,EAAC,EAFgC;AAGpCC,IAAAA,GAAG,EAAC;AAHgC,GAAD,CAFA;AAAA,MAEhCC,QAFgC;AAAA,MAEvBC,WAFuB;;AAOvCd,EAAAA,SAAS,CAAC,YAAI;AACVc,IAAAA,WAAW,CAAC;AACRJ,MAAAA,OAAO,EAACH,KAAK,CAACQ,QAAN,CAAeL,OAAf,GAAuBH,KAAK,CAACQ,QAAN,CAAeL,OAAtC,GAA8C,EAD9C;AAERC,MAAAA,GAAG,EAACJ,KAAK,CAACQ,QAAN,CAAeJ,GAAf,GAAmBJ,KAAK,CAACQ,QAAN,CAAeJ,GAAlC,GAAsC,EAFlC;AAGRC,MAAAA,GAAG,EAACL,KAAK,CAACQ,QAAN,CAAeH,GAAf,GAAmBL,KAAK,CAACQ,QAAN,CAAeH,GAAlC,GAAsC;AAHlC,KAAD,CAAX;AAKH,GANQ,EAMP,CAACL,KAAK,CAACQ,QAAP,CANO,CAAT;;AAOA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACH,QAAD,EAAa;AACzBN,IAAAA,KAAK,CAACU,QAAN,CAAe,UAAf,EAA0B;AACtBP,MAAAA,OAAO,EAACG,QAAQ,CAACK,iBADK;AAEtBP,MAAAA,GAAG,EAACE,QAAQ,CAACM,QAAT,CAAkBN,QAAlB,CAA2BF,GAA3B,EAFkB;AAGtBC,MAAAA,GAAG,EAACC,QAAQ,CAACM,QAAT,CAAkBN,QAAlB,CAA2BD,GAA3B;AAHkB,KAA1B;AAKP,GAND;;AAOA,MAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAK;AACnBX,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAEY,SAA7B;AAAwC,MAAA,SAAS,EAAC,cAAlD;AAAA,gBAAkEP,QAAQ,CAACH,OAAT,IAAkB,EAAlB,GAAqBG,QAAQ,CAACH,OAA9B,GAAsC;AAAxG;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKH,KAAK,CAACc,KAAN,gBAAY;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBAA2Cd,KAAK,CAACc,KAAN,GAAYd,KAAK,CAACc,KAAN,CAAYX,OAAxB,GAAgC;AAA3E;AAAA;AAAA;AAAA;AAAA,YAAZ,GAAiG,EAFtG,eAGI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,gBAAjB;AACI,MAAA,MAAM,EAAEF,SADZ;AAAA,6BAGI,QAAC,SAAD;AAAA,gCACI,QAAC,UAAD;AACI,UAAA,WAAW,EAAEQ,WADjB;AAEI,UAAA,QAAQ,EAAEH;AAFd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,UAAD;AACI,UAAA,SAAS,EAAEO,SADf;AAEI,UAAA,WAAW,EAAEJ,WAFjB;AAGI,UAAA,QAAQ,EAAEH;AAHd;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAqBH;;GA7CuBP,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport MapWrapper from \"../../components/Map/MapWrapper\";\nimport AutoPicker from \"../../components/Map/AutoPicker\";\nimport { Modal, ModalBody } from 'reactstrap';\nexport default function LocationCom(props) {\n    const [mapToggle,setMapToggle] = useState(false)\n    const [location,setLocation] = useState({\n        address:\"\",\n        lat:\"\",\n        lng:\"\"\n    })\n    useEffect(()=>{\n        setLocation({\n            address:props.defValue.address?props.defValue.address:'',\n            lat:props.defValue.lat?props.defValue.lat:'',\n            lng:props.defValue.lng?props.defValue.lng:''\n        })\n    },[props.defValue])\n    const getLocation = (location) =>{\n            props.getValue('location',{\n                address:location.formatted_address,\n                lat:location.geometry.location.lat(),\n                lng:location.geometry.location.lng()\n            })\n    }\n    const toggleMap = () =>{\n        setMapToggle(!mapToggle)\n    }\n    return (\n        <>\n            <span role=\"botton\" onClick={toggleMap} className=\"custom-input\">{location.address!=\"\"?location.address:\"Store Location\"}</span>\n            {props.error?<div className=\"validation-error-custome\">{props.error?props.error.address:\"\"}</div>:''}\n            <Modal className=\"location-modal\"\n                isOpen={mapToggle}\n            >\n                <ModalBody>\n                    <MapWrapper\n                        getLocation={getLocation}\n                        location={location}\n                    />\n                    <AutoPicker\n                        toggleMap={toggleMap}\n                        getLocation={getLocation}\n                        location={location}\n                    />\n                </ModalBody>\n            </Modal>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}