{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nvar requestSlice = createSlice({\n  name: \"request\",\n  initialState: {\n    contact: [],\n    career: [],\n    becomeStore: []\n  },\n  reducers: {\n    contactList: function contactList(state, action) {\n      state.contact = action.payload.data;\n    },\n    careerList: function careerList(state, action) {\n      state.career = action.payload.data;\n    },\n    becomeStoreList: function becomeStoreList(state, action) {\n      state.becomeStore = action.payload.data;\n    }\n  }\n});\nexport default requestSlice.reducer;\nvar _requestSlice$actions = requestSlice.actions,\n    contactList = _requestSlice$actions.contactList,\n    careerList = _requestSlice$actions.careerList,\n    becomeStoreList = _requestSlice$actions.becomeStoreList;\nexport var getContactList = function getContactList() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return callApi('post', '/request/contact', {});\n\n            case 3:\n              res = _context.sent;\n              dispatch(contactList(res.data));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              apiFail(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getCareerList = function getCareerList() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return callApi('post', '/request/career', {});\n\n            case 3:\n              res = _context2.sent;\n              dispatch(careerList(res.data));\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              apiFail(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var getBecomeStoreList = function getBecomeStoreList() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return callApi('post', '/request/becomestore', {});\n\n            case 3:\n              res = _context3.sent;\n              dispatch(becomeStoreList(res.data));\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              apiFail(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/requestSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","requestSlice","name","initialState","contact","career","becomeStore","reducers","contactList","state","action","payload","data","careerList","becomeStoreList","reducer","actions","getContactList","dispatch","res","getCareerList","getBecomeStoreList"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAASC,OAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;AACA,IAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,OAAO,EAAC,EADC;AAETC,IAAAA,MAAM,EAAC,EAFE;AAGTC,IAAAA,WAAW,EAAC;AAHH,GAFgB;AAO7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,WAAW,EAAC,qBAACC,KAAD,EAAOC,MAAP,EAAiB;AACzBD,MAAAA,KAAK,CAACL,OAAN,GAAcM,MAAM,CAACC,OAAP,CAAeC,IAA7B;AACH,KAHI;AAILC,IAAAA,UAAU,EAAC,oBAACJ,KAAD,EAAOC,MAAP,EAAiB;AACxBD,MAAAA,KAAK,CAACJ,MAAN,GAAaK,MAAM,CAACC,OAAP,CAAeC,IAA5B;AACH,KANI;AAOLE,IAAAA,eAAe,EAAC,yBAACL,KAAD,EAAOC,MAAP,EAAiB;AAC7BD,MAAAA,KAAK,CAACH,WAAN,GAAkBI,MAAM,CAACC,OAAP,CAAeC,IAAjC;AACH;AATI;AAPoB,CAAD,CAAhC;AAmBA,eAAeX,YAAY,CAACc,OAA5B;4BACiDd,YAAY,CAACe,O;IAAvDR,W,yBAAAA,W;IAAYK,U,yBAAAA,U;IAAWC,e,yBAAAA,e;AAC9B,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEZpB,OAAO,CAAC,MAAD,EAAQ,kBAAR,EAA2B,EAA3B,CAFK;;AAAA;AAExBqB,cAAAA,GAFwB;AAG5BD,cAAAA,QAAQ,CAACV,WAAW,CAACW,GAAG,CAACP,IAAL,CAAZ,CAAR;AAH4B;AAAA;;AAAA;AAAA;AAAA;AAK5Bb,cAAAA,OAAO,aAAP;;AAL4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAQP,OAAO,IAAMqB,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA,yEAAM,kBAAMF,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEXpB,OAAO,CAAC,MAAD,EAAQ,iBAAR,EAA0B,EAA1B,CAFI;;AAAA;AAEvBqB,cAAAA,GAFuB;AAG3BD,cAAAA,QAAQ,CAACL,UAAU,CAACM,GAAG,CAACP,IAAL,CAAX,CAAR;AAH2B;AAAA;;AAAA;AAAA;AAAA;AAK3Bb,cAAAA,OAAO,cAAP;;AAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAQP,OAAO,IAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA,yEAAM,kBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEhBpB,OAAO,CAAC,MAAD,EAAQ,sBAAR,EAA+B,EAA/B,CAFS;;AAAA;AAE5BqB,cAAAA,GAF4B;AAGhCD,cAAAA,QAAQ,CAACJ,eAAe,CAACK,GAAG,CAACP,IAAL,CAAhB,CAAR;AAHgC;AAAA;;AAAA;AAAA;AAAA;AAKhCb,cAAAA,OAAO,cAAP;;AALgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst requestSlice = createSlice({\n    name:\"request\",\n    initialState:{\n        contact:[],\n        career:[],\n        becomeStore:[]\n    },\n    reducers:{\n        contactList:(state,action) =>{\n            state.contact=action.payload.data\n        },\n        careerList:(state,action) =>{\n            state.career=action.payload.data\n        },\n        becomeStoreList:(state,action) =>{\n            state.becomeStore=action.payload.data\n        }\n    }\n})\nexport default requestSlice.reducer\nconst {contactList,careerList,becomeStoreList} = requestSlice.actions\nexport const getContactList = () => async dispatch => {\n    try {\n        let res = await callApi('post','/request/contact',{})\n        dispatch(contactList(res.data))\n    } catch (error) {\n        apiFail(error)\n    }\n}\nexport const getCareerList = () => async dispatch => {\n    try {\n        let res = await callApi('post','/request/career',{})\n        dispatch(careerList(res.data))\n    } catch (error) {\n        apiFail(error)\n    }\n}\nexport const getBecomeStoreList = () => async dispatch => {\n    try {\n        let res = await callApi('post','/request/becomestore',{})\n        dispatch(becomeStoreList(res.data))\n    } catch (error) {\n        apiFail(error)\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}