{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/setting/main.js\";\nimport Admin from 'layouts/Admin';\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Container, Form, FormGroup, Row, Table } from \"reactstrap\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMainSetting, updateMainSetting } from '../../reducers/settingSlice';\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport InputCom from \"components/Form/InputCom\";\nimport NProgress from 'nprogress';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from \"react-toastify\";\n\nfunction Index() {\n  const dispatch = useDispatch();\n  const setting = useSelector(state => state.settingSlice.main);\n  const apiError = useSelector(state => state.mainSlice.failed);\n  const apiSuccess = useSelector(state => state.mainSlice.success);\n  const {\n    0: alert,\n    1: setAlert\n  } = useState({\n    status: false,\n    message: '',\n    type: ''\n  });\n  useEffect(() => {\n    dispatch(getMainSetting());\n  }, []);\n  const validationSchema = Yup.object().shape({\n    driverWaitTime: Yup.number().typeError('Time must be a number').required('Driver pickup time is required').min(1, 'Time must be greater than 1').integer('Time must be a integer'),\n    deliveryDis: Yup.number().typeError('distance be a number').required('Delivery distance is required').min(1, 'distance must be greater than 1').integer('distance must be a integer'),\n    serviceFee: Yup.number().typeError('Service fee must be a number').required('Service fee is required').min(1, 'Service fee must be greater than 1').max(100, 'Service fee must be less than 100').integer('Time must be a integer'),\n    maxServiceFee: Yup.number().typeError('Max service fee must be a number').required('Max service fee is required').min(1, 'Max service fee must be greater than 1').integer('Max service fee must be a integer'),\n    deliveryDistance: Yup.number().typeError('Delivery distance must be a number').required('Delivery distance is required').min(1, 'Delivery distance must be greater than 1'),\n    minDeliveryCharge: Yup.number().typeError('Min delivery charge must be a number').required('Min delivery charge is required').positive('Must be a positive number'),\n    deliveryExtraFee: Yup.number().typeError('Delivery extra fee must be a number').required('Delivery extra fee is required').positive('Must be a positive number'),\n    fixLimitDeliveryDistance: Yup.number().typeError('Min delivery distance must be a number').required('Min delivery distance is required').positive('Must be a positive number'),\n    deliveryExtraFeeUnit: Yup.number().typeError('Delivery extra fee unit must be a number').required('Delivery extra fee unit is required').positive('Must be a positive number'),\n    vatCharge: Yup.number().typeError('Vat charge must be a number').required('Vat charge is required').min(1, 'Vat charge must be greater than 1').integer('Vat charge must be a integer'),\n    fixDriverDistance: Yup.number().typeError('Fixed driver distance must be a number').required('Fixed driver distance is required').positive('Must be a positive number'),\n    minDriverPayFirst: Yup.number().typeError('Delivery pay must be a number').required('Delivery pay is required').positive('Must be a positive number'),\n    extraDriverPaySecond: Yup.number().typeError('Second delivery pay must be a number').required('Second delivery pay is required').positive('Must be a positive number'),\n    deliveryExtraPayUnit: Yup.number().typeError('Delivery extra pay unit must be a number').required('Delivery extra pay unit is required').positive('Must be a positive number'),\n    deliveryExtraPay: Yup.number().typeError('Delivery extra pay must be a number').required('Delivery extra pay is required').positive('Must be a positive number'),\n    taxPay: Yup.number().typeError('Tax must be a number').required('Tax is required').min(1, 'Tax must be greater than 1').max(100, 'Tax must be less than 100').positive('Must be a positive number')\n  });\n\n  const formSubmitHandal = formData => {\n    // console.log('final data',formData);\n    NProgress.start();\n    dispatch(updateMainSetting(formData));\n  };\n\n  useEffect(() => {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        setAlert({\n          status: true,\n          message: apiSuccess.message,\n          type: 'success'\n        });\n        NProgress.done();\n        dispatch(unSetApiSucc());\n        setTimeout(() => {\n          setAlert({\n            status: false,\n            message: '',\n            type: ''\n          }); //   dispatch(unSetApiSucc())\n        }, 3000);\n      }\n\n      if (apiError) {\n        if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n          setAlert({\n            status: true,\n            message: apiError.message,\n            type: 'error'\n          });\n          dispatch(unSetApiFail());\n          NProgress.done();\n          setTimeout(() => {\n            setAlert({\n              status: false,\n              message: '',\n              type: ''\n            });\n          }, 3000);\n        }\n      }\n    }\n  }, [apiSuccess, apiError]);\n\n  if (alert.status) {\n    toast(alert.message, {\n      type: alert.type\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Main Setting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                enableReinitialize: true,\n                initialValues: setting,\n                validationSchema: validationSchema,\n                validateOnChange: false,\n                validateOnBlur: false,\n                onSubmit: values => formSubmitHandal(values),\n                children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: formikProps.handleSubmit,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pl-lg-4\",\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      className: \"align-items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"6\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Driver Pickup Time (Min)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 178,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                            type: \"text\",\n                            name: \"driverWaitTime\",\n                            placeholder: \"Driver Pickup Time\",\n                            getValue: formikProps.setFieldValue,\n                            defValue: formikProps.values.driverWaitTime,\n                            error: formikProps.errors.driverWaitTime\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 179,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"6\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Delivery distance \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                            type: \"text\",\n                            name: \"deliveryDis\",\n                            placeholder: \"Driver Pickup Time\",\n                            getValue: formikProps.setFieldValue,\n                            defValue: formikProps.values.deliveryDis,\n                            error: formikProps.errors.deliveryDis\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 192,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"4\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-control-label\",\n                            children: \" Service Fee (%)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 204,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                            type: \"text\",\n                            name: \"serviceFee\",\n                            placeholder: \"Service Fee\",\n                            getValue: formikProps.setFieldValue,\n                            defValue: formikProps.values.serviceFee,\n                            error: formikProps.errors.serviceFee\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 205,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"4\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Max Service Fee (\\xA3)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 217,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                            type: \"text\",\n                            name: \"maxServiceFee\",\n                            placeholder: \"Max Service Fee\",\n                            getValue: formikProps.setFieldValue,\n                            defValue: formikProps.values.maxServiceFee,\n                            error: formikProps.errors.maxServiceFee\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 218,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"4\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"TAX in % (\\xA3)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 230,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                            type: \"text\",\n                            name: \"taxPay\",\n                            placeholder: \"Tax in %\",\n                            getValue: formikProps.setFieldValue,\n                            defValue: formikProps.values.taxPay,\n                            error: formikProps.errors.taxPay\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 231,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Vat Charge (%)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 243,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                            type: \"text\",\n                            name: \"vatCharge\",\n                            placeholder: \"Vat Charge\",\n                            getValue: formikProps.setFieldValue,\n                            defValue: formikProps.values.vatCharge,\n                            error: formikProps.errors.vatCharge\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"12\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          children: [\"Delivery Fee Settings User\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 257,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 255,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Fix limit delivery distance (Miles) \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 262,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"fixLimitDeliveryDistance\",\n                                placeholder: \"Fix limit delivery distance\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.fixLimitDeliveryDistance,\n                                error: formikProps.errors.fixLimitDeliveryDistance\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 263,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 261,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 260,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Max Delivery Distance (Miles) \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 275,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryDistance\",\n                                placeholder: \"Delivery Distance\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.deliveryDistance,\n                                error: formikProps.errors.deliveryDistance\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 276,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 274,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 273,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Min Delivery Fee (\\xA3)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 288,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"minDeliveryCharge\",\n                                placeholder: \"Min Delivery Fee\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.minDeliveryCharge,\n                                error: formikProps.errors.minDeliveryCharge\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 289,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 287,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 286,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Extra Delivery Fee Unit (Miles)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 301,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryExtraFeeUnit\",\n                                placeholder: \"Extra Delivery Fee Unit\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.deliveryExtraFeeUnit,\n                                error: formikProps.errors.deliveryExtraFeeUnit\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 302,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 300,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 299,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Extra Delivery Fee (\\xA3)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 314,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryExtraFee\",\n                                placeholder: \"Extra Delivery Fee\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.deliveryExtraFee,\n                                error: formikProps.errors.deliveryExtraFee\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 315,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 313,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"12\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          children: [\"Driver Earning Settings\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 330,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Fix Driver Distance For First Order (Miles)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 335,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"fixDriverDistance\",\n                                placeholder: \"Fix Driver Distance For First Order\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.fixDriverDistance,\n                                error: formikProps.errors.fixDriverDistance\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 338,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 334,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 333,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \" Min driver pay for first order (\\xA3) \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 350,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"minDriverPayFirst\",\n                                placeholder: \"Min Driver Pay For First Order\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.minDriverPayFirst,\n                                error: formikProps.errors.minDriverPayFirst\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 351,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 349,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 348,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Extra Pay For Every Second Order (\\xA3)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 363,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"extraDriverPaySecond\",\n                                placeholder: \"Extra Pay For Every Second Order\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.extraDriverPaySecond,\n                                error: formikProps.errors.extraDriverPaySecond\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 364,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 362,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 361,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Extra Delivery Pay Unit (Miles)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 376,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryExtraPayUnit\",\n                                placeholder: \"Extra Delivery Pay Unit\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.deliveryExtraPayUnit,\n                                error: formikProps.errors.deliveryExtraPayUnit\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 377,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 375,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 374,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Extra Delivery Pay (\\xA3)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 389,\n                                columnNumber: 53\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryExtraPay\",\n                                placeholder: \"Extra Delivery Pay\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.deliveryExtraPay,\n                                error: formikProps.errors.deliveryExtraPay\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 390,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 388,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 332,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"12\",\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          className: \"float-right\",\n                          color: \"primary\",\n                          type: \"submit\",\n                          children: \"Save\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 405,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          className: \"float-right mr-2\",\n                          color: \"secondary\",\n                          type: \"button\",\n                          onClick: e => {\n                            e.preventDefault();\n                            router.back();\n                          },\n                          children: \"Back\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 412,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              className: \"py-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nIndex.layout = Admin;\nexport default Index;","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/setting/main.js"],"names":["Admin","UserHeader","Button","Card","CardBody","CardFooter","CardHeader","Col","Container","Form","FormGroup","Row","Table","useEffect","useState","useDispatch","useSelector","getMainSetting","updateMainSetting","unSetApiFail","unSetApiSucc","InputCom","NProgress","Formik","Yup","toast","Index","dispatch","setting","state","settingSlice","main","apiError","mainSlice","failed","apiSuccess","success","alert","setAlert","status","message","type","validationSchema","object","shape","driverWaitTime","number","typeError","required","min","integer","deliveryDis","serviceFee","max","maxServiceFee","deliveryDistance","minDeliveryCharge","positive","deliveryExtraFee","fixLimitDeliveryDistance","deliveryExtraFeeUnit","vatCharge","fixDriverDistance","minDriverPayFirst","extraDriverPaySecond","deliveryExtraPayUnit","deliveryExtraPay","taxPay","formSubmitHandal","formData","start","statusCode","done","setTimeout","values","formikProps","handleSubmit","setFieldValue","errors","e","preventDefault","router","back","layout"],"mappings":"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","sourcesContent":["import Admin from 'layouts/Admin'\nimport UserHeader from \"components/Headers/UserHeader\"\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Container, Form,FormGroup,Row, Table} from \"reactstrap\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMainSetting, updateMainSetting } from '../../reducers/settingSlice';\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport InputCom from \"components/Form/InputCom\";\nimport NProgress from 'nprogress';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from \"react-toastify\";\nfunction Index() {\n    const dispatch = useDispatch()\n    const setting = useSelector(state=>state.settingSlice.main);\n    const apiError = useSelector(state=> state.mainSlice.failed)\n    const apiSuccess = useSelector(state=> state.mainSlice.success)\n    const [alert,setAlert]=useState({\n        status:false,\n        message:'',\n        type:''\n    })\n    useEffect(() => {\n        dispatch(getMainSetting());    \n    }, []);\n    const validationSchema = Yup.object().shape({\n        driverWaitTime:Yup.number()\n            .typeError('Time must be a number')\n            .required('Driver pickup time is required')\n            .min(1,'Time must be greater than 1')\n            .integer('Time must be a integer'),\n        deliveryDis:Yup.number()\n            .typeError('distance be a number')\n            .required('Delivery distance is required')\n            .min(1,'distance must be greater than 1')\n            .integer('distance must be a integer'),\n        serviceFee:Yup.number()\n            .typeError('Service fee must be a number')\n            .required('Service fee is required')\n            .min(1,'Service fee must be greater than 1')\n            .max(100,'Service fee must be less than 100')\n            .integer('Time must be a integer'),\n        maxServiceFee:Yup.number()\n            .typeError('Max service fee must be a number')\n            .required('Max service fee is required')\n            .min(1,'Max service fee must be greater than 1')\n            .integer('Max service fee must be a integer'),\n        deliveryDistance:Yup.number()\n            .typeError('Delivery distance must be a number')\n            .required('Delivery distance is required')\n            .min(1,'Delivery distance must be greater than 1'),\n        minDeliveryCharge:Yup.number()\n            .typeError('Min delivery charge must be a number')\n            .required('Min delivery charge is required')\n            .positive('Must be a positive number'),\n        deliveryExtraFee:Yup.number()\n            .typeError('Delivery extra fee must be a number')\n            .required('Delivery extra fee is required')\n            .positive('Must be a positive number'),\n        fixLimitDeliveryDistance:Yup.number()\n            .typeError('Min delivery distance must be a number')\n            .required('Min delivery distance is required')\n            .positive('Must be a positive number'),\n        deliveryExtraFeeUnit:Yup.number()\n            .typeError('Delivery extra fee unit must be a number')\n            .required('Delivery extra fee unit is required')\n            .positive('Must be a positive number'),\n        vatCharge:Yup.number()\n            .typeError('Vat charge must be a number')\n            .required('Vat charge is required')\n            .min(1,'Vat charge must be greater than 1')\n            .integer('Vat charge must be a integer'),\n        fixDriverDistance:Yup.number()\n            .typeError('Fixed driver distance must be a number')\n            .required('Fixed driver distance is required')\n            .positive('Must be a positive number'),\n        minDriverPayFirst:Yup.number()\n            .typeError('Delivery pay must be a number')\n            .required('Delivery pay is required')\n            .positive('Must be a positive number'),\n        extraDriverPaySecond:Yup.number()\n            .typeError('Second delivery pay must be a number')\n            .required('Second delivery pay is required')\n            .positive('Must be a positive number'),\n        deliveryExtraPayUnit:Yup.number()\n            .typeError('Delivery extra pay unit must be a number')\n            .required('Delivery extra pay unit is required')\n            .positive('Must be a positive number'),\n        deliveryExtraPay:Yup.number()\n            .typeError('Delivery extra pay must be a number')\n            .required('Delivery extra pay is required')\n            .positive('Must be a positive number'),\n        taxPay:Yup.number()\n            .typeError('Tax must be a number')\n            .required('Tax is required')\n            .min(1,'Tax must be greater than 1')\n            .max(100,'Tax must be less than 100')\n            .positive('Must be a positive number')\n    })\n    const formSubmitHandal = (formData) => {\n        // console.log('final data',formData);\n        NProgress.start()\n        dispatch(updateMainSetting(formData))\n    }\n    useEffect(() => {\n        if (apiSuccess) {\n            if(apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300){\n                setAlert({\n                    status:true,\n                    message:apiSuccess.message,\n                    type:'success'\n                })\n                NProgress.done()\n                dispatch(unSetApiSucc())\n                setTimeout(() => {\n                    setAlert({\n                        status:false,\n                        message:'',\n                        type:''\n                    })\n                //   dispatch(unSetApiSucc())\n                }, 3000);\n            }\n            if (apiError) {\n                if(apiError.statusCode >= 400 && apiError.statusCode <= 500){\n                    setAlert({\n                        status:true,\n                        message:apiError.message,\n                        type:'error'\n                    })\n                    dispatch(unSetApiFail())\n                    NProgress.done()\n                    setTimeout(() => {\n                        setAlert({\n                            status:false,\n                            message:'',\n                            type:''\n                        })\n                    }, 3000);\n                }\n            }\n        }\n    }, [apiSuccess,apiError])\n    if (alert.status) {\n        toast(alert.message,{\n          type:alert.type\n        });\n    }\n    return (\n        <>\n            <UserHeader/>\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <Col className=\"order-xl-1\" xl='12'>\n                    <Card className=\"bg-secondary shadow\">\n                        <CardHeader className=\"bg-white border-0\">\n                            <Row className=\"align-items-center\">\n                                <Col xs=\"12\">\n                                    <h3 className=\"mb-0\">Main Setting</h3>\n                                </Col>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <Formik\n                                enableReinitialize\n                                initialValues={setting}\n                                validationSchema={validationSchema}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                onSubmit={ values =>formSubmitHandal(values)}\n                            >\n                            {(formikProps)=>(\n                                <Form onSubmit={formikProps.handleSubmit}>\n                                <div className=\"pl-lg-4\">\n                                    <Row className=\"align-items-center\">\n                                    <Col lg=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">Driver Pickup Time (Min)</label>\n                                            <InputCom\n                                                type=\"text\"\n                                                name=\"driverWaitTime\"\n                                                placeholder=\"Driver Pickup Time\"\n                                                getValue={formikProps.setFieldValue}\n                                                defValue={formikProps.values.driverWaitTime}\n                                                error={formikProps.errors.driverWaitTime}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">Delivery distance </label>\n                                            <InputCom\n                                                type=\"text\"\n                                                name=\"deliveryDis\"\n                                                placeholder=\"Driver Pickup Time\"\n                                                getValue={formikProps.setFieldValue}\n                                                defValue={formikProps.values.deliveryDis}\n                                                error={formikProps.errors.deliveryDis}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"4\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\"> Service Fee (%)</label>\n                                            <InputCom\n                                                type=\"text\"\n                                                name=\"serviceFee\"\n                                                placeholder=\"Service Fee\"\n                                                getValue={formikProps.setFieldValue}\n                                                defValue={formikProps.values.serviceFee}\n                                                error={formikProps.errors.serviceFee}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"4\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">Max Service Fee (£)</label>\n                                            <InputCom\n                                                type=\"text\"\n                                                name=\"maxServiceFee\"\n                                                placeholder=\"Max Service Fee\"\n                                                getValue={formikProps.setFieldValue}\n                                                defValue={formikProps.values.maxServiceFee}\n                                                error={formikProps.errors.maxServiceFee}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"4\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">TAX in % (£)</label>\n                                            <InputCom\n                                                type=\"text\"\n                                                name=\"taxPay\"\n                                                placeholder=\"Tax in %\"\n                                                getValue={formikProps.setFieldValue}\n                                                defValue={formikProps.values.taxPay}\n                                                error={formikProps.errors.taxPay}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"12\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">Vat Charge (%)</label>\n                                            <InputCom\n                                                type=\"text\"\n                                                name=\"vatCharge\"\n                                                placeholder=\"Vat Charge\"\n                                                getValue={formikProps.setFieldValue}\n                                                defValue={formikProps.values.vatCharge}\n                                                error={formikProps.errors.vatCharge}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"12\">\n                                        <h4>\n                                            Delivery Fee Settings User\n                                            <hr/>\n                                        </h4>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Fix limit delivery distance (Miles) </label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"fixLimitDeliveryDistance\"\n                                                        placeholder=\"Fix limit delivery distance\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.fixLimitDeliveryDistance}\n                                                        error={formikProps.errors.fixLimitDeliveryDistance}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Max Delivery Distance (Miles) </label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"deliveryDistance\"\n                                                        placeholder=\"Delivery Distance\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.deliveryDistance}\n                                                        error={formikProps.errors.deliveryDistance}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Min Delivery Fee (£)</label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"minDeliveryCharge\"\n                                                        placeholder=\"Min Delivery Fee\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.minDeliveryCharge}\n                                                        error={formikProps.errors.minDeliveryCharge}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Extra Delivery Fee Unit (Miles)</label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"deliveryExtraFeeUnit\"\n                                                        placeholder=\"Extra Delivery Fee Unit\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.deliveryExtraFeeUnit}\n                                                        error={formikProps.errors.deliveryExtraFeeUnit}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Extra Delivery Fee (£)</label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"deliveryExtraFee\"\n                                                        placeholder=\"Extra Delivery Fee\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.deliveryExtraFee}\n                                                        error={formikProps.errors.deliveryExtraFee}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col lg=\"12\">\n                                        <h4>\n                                            Driver Earning Settings\n                                            <hr/> \n                                        </h4>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">\n                                                        Fix Driver Distance For First Order (Miles)\n                                                    </label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"fixDriverDistance\"\n                                                        placeholder=\"Fix Driver Distance For First Order\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.fixDriverDistance}\n                                                        error={formikProps.errors.fixDriverDistance}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\"> Min driver pay for first order (£) </label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"minDriverPayFirst\"\n                                                        placeholder=\"Min Driver Pay For First Order\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.minDriverPayFirst}\n                                                        error={formikProps.errors.minDriverPayFirst}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Extra Pay For Every Second Order (£)</label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"extraDriverPaySecond\"\n                                                        placeholder=\"Extra Pay For Every Second Order\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.extraDriverPaySecond}\n                                                        error={formikProps.errors.extraDriverPaySecond}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Extra Delivery Pay Unit (Miles)</label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"deliveryExtraPayUnit\"\n                                                        placeholder=\"Extra Delivery Pay Unit\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.deliveryExtraPayUnit}\n                                                        error={formikProps.errors.deliveryExtraPayUnit}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label className=\"form-control-label\">Extra Delivery Pay (£)</label>\n                                                    <InputCom\n                                                        type=\"text\"\n                                                        name=\"deliveryExtraPay\"\n                                                        placeholder=\"Extra Delivery Pay\"\n                                                        getValue={formikProps.setFieldValue}\n                                                        defValue={formikProps.values.deliveryExtraPay}\n                                                        error={formikProps.errors.deliveryExtraPay}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    </Row>\n                                    <Row>\n                                    <Col lg=\"12\">\n                                    <Button\n                                        className=\"float-right\"\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                    >\n                                        Save\n                                    </Button>\n                                    <Button\n                                        className=\"float-right mr-2\"\n                                        color=\"secondary\"\n                                        type=\"button\"\n                                        onClick={\n                                            (e)=>{\n                                                e.preventDefault()\n                                                router.back()\n                                            }\n                                        }\n                                    >\n                                        Back\n                                    </Button>\n                                    </Col>\n                                    </Row>\n                                </div>\n                                </Form>\n                            )}\n                            </Formik>\n                        </CardBody>\n                        <CardFooter className=\"py-4\">\n                               \n                        </CardFooter>\n                    </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\nIndex.layout = Admin\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}