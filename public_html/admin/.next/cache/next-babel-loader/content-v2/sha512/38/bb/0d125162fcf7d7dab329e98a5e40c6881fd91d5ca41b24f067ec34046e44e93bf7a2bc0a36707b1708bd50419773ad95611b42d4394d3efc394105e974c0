{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { logout } from 'reducers/authSlice';\nconst mainSlice = createSlice({\n  name: 'mainSlice',\n  initialState: {\n    success: null,\n    failed: null\n  },\n  reducers: {\n    apiFailed: (state, action) => {\n      state.failed = action.payload;\n    },\n    unsetApiFailed: (state, action) => {\n      state.failed = null;\n    },\n    apiSucceed: (state, action) => {\n      state.success = action.payload;\n    },\n    unsetApiSucceed: (state, action) => {\n      state.success = null;\n    }\n  }\n});\nconst {\n  apiFailed,\n  unsetApiFailed,\n  apiSucceed,\n  unsetApiSucceed\n} = mainSlice.actions;\nexport default mainSlice.reducer;\nexport const apiSuccess = value => async dispatch => {\n  dispatch(apiSucceed(value));\n};\nexport const apiFail = value => async dispatch => {\n  if (value.statusCode == 419) {\n    dispatch(logout());\n  } else {\n    dispatch(apiFailed(value));\n  }\n};\nexport const unSetApiFail = () => async dispatch => {\n  dispatch(unsetApiFailed());\n};\nexport const unSetApiSucc = () => async dispatch => {\n  dispatch(unsetApiSucceed());\n};","map":null,"metadata":{},"sourceType":"module"}