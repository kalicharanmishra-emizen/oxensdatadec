{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Admin from \"layouts/Admin\";\nimport UserHeader from 'components/Headers/UserHeader';\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Row } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport { unSetApiSucc, unSetApiFail } from \"reducers/mainSlice\";\nimport { updateCustomeVarient, VarientDependent, detailCustomizeVarient } from \"reducers/menuSlice\";\nimport { Formik, FieldArray } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Edit() {\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var _router$query = router.query,\n      store = _router$query.store,\n      item = _router$query.item,\n      customize = _router$query.customize,\n      varient = _router$query.varient,\n      vareintId = _router$query.vareintId;\n\n  var _useState = useState([]),\n      selectDependent = _useState[0],\n      setSelectDependent = _useState[1];\n\n  var _useState2 = useState([]),\n      depPrice = _useState2[0],\n      setDepPrice = _useState2[1];\n\n  var _useState3 = useState({}),\n      depPricesList = _useState3[0],\n      setDepPricesList = _useState3[1];\n\n  var _useState4 = useState({}),\n      depValSchema = _useState4[0],\n      setDepValSchema = _useState4[1];\n\n  var _useState5 = useState(true),\n      loader = _useState5[0],\n      setLoader = _useState5[1];\n\n  var apiError = useSelector(function (state) {\n    return state.mainSlice.failed;\n  });\n  var apiSuccess = useSelector(function (state) {\n    return state.mainSlice.success;\n  });\n  var variantDapendancyDetails = useSelector(function (state) {\n    return state.menuSlice.variantDapendancyDetails;\n  });\n  var costomDetailsVariant = useSelector(function (state) {\n    return state.menuSlice.costomDetailsVariant;\n  });\n\n  var _useState6 = useState([]),\n      dependentList = _useState6[0],\n      setDependentList = _useState6[1];\n  /* form submit handel start */\n\n\n  var formSubmit = {\n    showDep: variantDapendancyDetails ? variantDapendancyDetails.is_dependent : false,\n    title: costomDetailsVariant ? costomDetailsVariant.title : '',\n    isDefault: costomDetailsVariant ? costomDetailsVariant.isDefault ? \"1\" : \"0\" : '0',\n    price: costomDetailsVariant ? costomDetailsVariant.price : \"\",\n    dependent_varient: selectDependent,\n    dependent_price_temp: depPricesList\n  };\n  var validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required!'),\n    isDefault: Yup.string().required('Title is required!'),\n    price: Yup.number().typeError('Price must be a valid number').when(\"showDep\", {\n      is: false,\n      then: Yup.number().required(\"Price is required!\")\n    }),\n    dependent_varient: Yup.array().when(\"showDep\", {\n      is: true,\n      then: Yup.array().min(1, \"Dependent Varient is required!\")\n    }),\n    dependent_price_temp: Yup.object().when(\"dependent_varient\", {\n      is: function is(dependent_varient) {\n        return dependent_varient.length > 0;\n      },\n      then: Yup.object().shape(depValSchema)\n    })\n  });\n\n  var formSubmitHandal = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var finalData, dependent_price;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log('final data before submit',formData);\n              finalData = {\n                varId: vareintId,\n                customizeId: varient,\n                title: formData.title,\n                isDefault: formData.isDefault,\n                price: formData.price || '0.00'\n              };\n              dependent_price = [];\n              Object.keys(formData.dependent_price_temp).map(function (temp) {\n                var depP = depPrice.find(function (list) {\n                  return list.key == temp;\n                }); // console.log('depP',depP);\n\n                if (depP != undefined) {\n                  dependent_price.push({\n                    varientId: depP.key,\n                    title: depP.title,\n                    price: formData.dependent_price_temp[temp]\n                  });\n                }\n              }); // if (depPrice.length > 0 ) {\n              //     depPrice.map(Dp=>{\n              //         if(`dependent_price_temp[${Dp.key}]` in formSubmit){\n              //             dependent_price.push({\n              //                 varientId:Dp.key,\n              //                 title:Dp.title,\n              //                 price:formSubmit[`dependent_price_temp[${Dp.key}]`]\n              //             })\n              //         }\n              //     })\n              // }\n\n              finalData.dependent_price = dependent_price; // console.log('final data',finalData);\n\n              dispatch(updateCustomeVarient(finalData));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function formSubmitHandal(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /* form submit handel end */\n\n\n  useEffect(function () {\n    if (varient != undefined && vareintId != undefined) {\n      dispatch(VarientDependent({\n        cusId: varient\n      }));\n      dispatch(detailCustomizeVarient({\n        varId: vareintId\n      }));\n      setLoader(false);\n    }\n  }, [varient, vareintId]);\n  useEffect(function () {\n    if (costomDetailsVariant) {\n      var selectDep = [];\n      var priceList = {};\n      costomDetailsVariant.dependent_price.map(function (data) {\n        priceList[data.varientId] = data.price;\n        selectDep.push(data.varientId);\n      });\n      setDepPricesList(priceList);\n      setSelectDependent(selectDep);\n    }\n  }, [costomDetailsVariant]);\n  useEffect(function () {\n    if (variantDapendancyDetails) {\n      if (variantDapendancyDetails.is_dependent) {\n        var depList = [];\n        variantDapendancyDetails.dependent.varients.map(function (data) {\n          depList.push({\n            value: data._id,\n            label: data.title\n          });\n        });\n        setDependentList(depList);\n      }\n    }\n  }, [variantDapendancyDetails]);\n  useEffect(function () {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        toast(apiSuccess.message, {\n          type: 'success',\n          toastId: 12\n        });\n        dispatch(unSetApiSucc());\n        router.push(\"/vendor/\".concat(store, \"/\").concat(item, \"/\").concat(customize, \"/\").concat(varient));\n      }\n    }\n\n    if (apiError) {\n      if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n        toast(apiError.message, {\n          type: 'error'\n        });\n        dispatch(unSetApiFail());\n      }\n    }\n  }, [apiSuccess, apiError]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(UserHeader, {}), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsxs(\"h3\", {\n                    className: \"mb-0\",\n                    children: [variantDapendancyDetails ? variantDapendancyDetails.title : 'Item', \" Custome Variant Edit \"]\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: loader ? null : /*#__PURE__*/_jsx(Formik, {\n                enableReinitialize: true,\n                initialValues: formSubmit,\n                validationSchema: validationSchema,\n                validateOnChange: false,\n                validateOnBlur: false,\n                onSubmit: function onSubmit(values) {\n                  return formSubmitHandal(values);\n                },\n                children: function children(formikProps) {\n                  useEffect(function () {\n                    var selectDependent = formikProps.values.dependent_varient;\n\n                    if (typeof selectDependent === 'object') {\n                      var tempArray = [];\n                      selectDependent.map(function (list) {\n                        depValSchema[list] = Yup.number().typeError('Price must be a valid number').required(\"Price is required\");\n                        tempArray.push({\n                          key: list,\n                          title: dependentList === null || dependentList === void 0 ? void 0 : dependentList.find(function (data) {\n                            return data.value == list;\n                          }).label\n                        });\n                      });\n                      setDepPrice(tempArray);\n                      setDepValSchema(_objectSpread({}, depValSchema));\n                    }\n                  }, [formikProps.values.dependent_varient]);\n                  return /*#__PURE__*/_jsx(Form, {\n                    onSubmit: formikProps.handleSubmit,\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"pl-lg-4\",\n                      children: [/*#__PURE__*/_jsxs(Row, {\n                        className: \"align-items-center\",\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Title\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"title\",\n                              placeholder: \"Enter Title\",\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.title,\n                              error: formikProps.errors.title\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Is Default\"\n                            }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                              name: \"isDefault\",\n                              id: \"isDefault\",\n                              options: [{\n                                value: \"0\",\n                                label: \"No\"\n                              }, {\n                                value: \"1\",\n                                label: \"Yes\"\n                              }],\n                              isDefault: false,\n                              isMulti: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.isDefault,\n                              error: formikProps.errors.isDefault\n                            }) : \"\"]\n                          })\n                        }), variantDapendancyDetails ? !variantDapendancyDetails.is_dependent ? /*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Price\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"price\",\n                              placeholder: \"Enter Price of Variant\",\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.price,\n                              error: formikProps.errors.price\n                            })]\n                          })\n                        }) : /*#__PURE__*/_jsxs(_Fragment, {\n                          children: [/*#__PURE__*/_jsx(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxs(FormGroup, {\n                              children: [/*#__PURE__*/_jsxs(\"label\", {\n                                className: \"form-control-label\",\n                                children: [variantDapendancyDetails.dependent.title, \" Varient's\"]\n                              }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                                name: \"dependent_varient\",\n                                id: \"dependent_varient\",\n                                options: dependentList,\n                                isDefault: false,\n                                isMulti: true,\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.dependent_varient,\n                                error: formikProps.errors.dependent_varient\n                              }) : \"\"]\n                            })\n                          }), /*#__PURE__*/_jsx(Col, {\n                            lg: \"12\",\n                            children: /*#__PURE__*/_jsx(Row, {\n                              children: /*#__PURE__*/_jsx(FieldArray, {\n                                name: \"dependent_price_temp\",\n                                render: function render() {\n                                  return depPrice.map(function (priceList, key) {\n                                    return /*#__PURE__*/_jsx(Col, {\n                                      lg: \"6\",\n                                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                                        children: [/*#__PURE__*/_jsxs(\"label\", {\n                                          className: \"form-control-label\",\n                                          children: [priceList.title, \" Varient Price\"]\n                                        }), /*#__PURE__*/_jsx(InputCom, {\n                                          type: \"text\",\n                                          name: \"dependent_price_temp[\".concat(priceList.key, \"]\"),\n                                          placeholder: \"Enter Price\",\n                                          getValue: formikProps.setFieldValue,\n                                          defValue: formikProps.values.dependent_price_temp[\"\".concat(priceList.key)],\n                                          error: formikProps.errors.dependent_price_temp ? formikProps.errors.dependent_price_temp[\"\".concat(priceList.key)] : null\n                                        })]\n                                      })\n                                    }, key);\n                                  });\n                                }\n                              })\n                            })\n                          })]\n                        }) : '']\n                      }), /*#__PURE__*/_jsx(Row, {\n                        children: /*#__PURE__*/_jsxs(Col, {\n                          lg: \"12\",\n                          children: [/*#__PURE__*/_jsx(Button, {\n                            className: \"float-right\",\n                            color: \"primary\",\n                            type: \"submit\",\n                            children: \"Save\"\n                          }), /*#__PURE__*/_jsx(Button, {\n                            className: \"float-right mr-2\",\n                            color: \"secondary\",\n                            type: \"button\",\n                            onClick: function onClick(e) {\n                              e.preventDefault();\n                              router.back();\n                            },\n                            children: \"Back\"\n                          })]\n                        })\n                      })]\n                    })\n                  });\n                }\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\n\nEdit.layout = Admin;\nexport default Edit;","map":null,"metadata":{},"sourceType":"module"}