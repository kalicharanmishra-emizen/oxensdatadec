{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst requestSlice = createSlice({\n  name: \"request\",\n  initialState: {\n    contact: [],\n    career: [],\n    becomeStore: []\n  },\n  reducers: {\n    contactList: (state, action) => {\n      state.contact = action.payload.data;\n    },\n    careerList: (state, action) => {\n      state.career = action.payload.data;\n    },\n    becomeStoreList: (state, action) => {\n      state.becomeStore = action.payload.data;\n    }\n  }\n});\nexport default requestSlice.reducer;\nconst {\n  contactList,\n  careerList,\n  becomeStoreList\n} = requestSlice.actions;\nexport const getContactList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/request/contact', {});\n    dispatch(contactList(res.data));\n  } catch (error) {\n    apiFail(error);\n  }\n};\nexport const getCareerList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/request/career', {});\n    dispatch(careerList(res.data));\n  } catch (error) {\n    apiFail(error);\n  }\n};\nexport const getBecomeStoreList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/request/becomestore', {});\n    dispatch(becomeStoreList(res.data));\n  } catch (error) {\n    apiFail(error);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}