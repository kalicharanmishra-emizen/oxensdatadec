{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Row } from \"reactstrap\";\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getOrderSettingDetail, updateOrderSetting } from 'reducers/settingSlice';\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport Admin from 'layouts/Admin';\nimport nprogress from 'nprogress';\nimport { toast } from \"react-toastify\";\nimport { useRouter } from 'next/router';\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Edit() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState(true),\n      loader = _useState[0],\n      setLoader = _useState[1];\n\n  var detail = useSelector(function (state) {\n    return state.settingSlice.orderDetail;\n  });\n  var apiError = useSelector(function (state) {\n    return state.mainSlice.failed;\n  });\n  var apiSuccess = useSelector(function (state) {\n    return state.mainSlice.success;\n  });\n\n  var _useState2 = useState({\n    status: false,\n    message: '',\n    type: ''\n  }),\n      alert = _useState2[0],\n      setAlert = _useState2[1];\n\n  useEffect(function () {\n    if (id != undefined) {\n      dispatch(getOrderSettingDetail({\n        id: id\n      }));\n      setLoader(false);\n    }\n  }, [id]);\n  /* form submit handel  start */\n\n  var formSubmit = {\n    vehicleType: detail.vehicleType,\n    maxDistance: detail.maxDistance,\n    packageLimit: detail.packageLimit\n  };\n  var validationSchema = Yup.object().shape({\n    maxDistance: Yup.number().typeError('Must be a number').required('Max Distance is required!').min(1, 'Distance must be greater than 1').integer('Distance must be a integer'),\n    packageLimit: Yup.array().min(1, 'Package limit is required')\n  });\n\n  var formSubmitHandal = function formSubmitHandal(formData) {\n    // console.log('final data',formData);\n    formData['id'] = id;\n    nprogress.start();\n    dispatch(updateOrderSetting(formData));\n  };\n  /* form submit handel  end */\n\n\n  if (alert.status) {\n    toast(alert.message, {\n      type: alert.type\n    });\n  }\n\n  useEffect(function () {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        setAlert({\n          status: true,\n          message: apiSuccess.message,\n          type: 'success'\n        });\n        nprogress.done();\n        dispatch(unSetApiSucc());\n        router.push('/setting/order');\n        setTimeout(function () {\n          setAlert({\n            status: false,\n            message: '',\n            type: ''\n          }); //   dispatch(unSetApiSucc())\n        }, 3000);\n      }\n\n      if (apiError) {\n        if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n          setAlert({\n            status: true,\n            message: apiError.message,\n            type: 'error'\n          });\n          dispatch(unSetApiFail());\n          nprogress.done();\n          setTimeout(function () {\n            setAlert({\n              status: false,\n              message: '',\n              type: ''\n            });\n          }, 3000);\n        }\n      }\n    }\n  }, [apiSuccess, apiError]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(UserHeader, {}), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsxs(\"h3\", {\n                    className: \"mb-0\",\n                    children: [\"Order assign setting \", detail.vehicleType]\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(Formik, {\n                enableReinitialize: true,\n                initialValues: formSubmit,\n                validationSchema: validationSchema,\n                validateOnChange: false,\n                validateOnBlur: false,\n                onSubmit: function onSubmit(values) {\n                  return formSubmitHandal(values);\n                },\n                children: function children(formikProps) {\n                  return /*#__PURE__*/_jsx(Form, {\n                    onSubmit: formikProps.handleSubmit,\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"pl-lg-4\",\n                      children: [/*#__PURE__*/_jsxs(Row, {\n                        className: \"align-items-center\",\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Vehicle Type\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"vehicleType\",\n                              placeholder: \"Vehicle Type\",\n                              isDefault: true,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.vehicleType,\n                              error: formikProps.errors.vehicleType\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Max Distance (Miles)\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"maxDistance\",\n                              placeholder: \"Enter Max Distance\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.maxDistance || '',\n                              error: formikProps.errors.maxDistance\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Package Limit Type\"\n                            }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                              name: \"packageLimit\",\n                              id: \"packageLimit\",\n                              options: [{\n                                value: \"small\",\n                                label: \"Small\"\n                              }, {\n                                value: \"medium\",\n                                label: \"Medium\"\n                              }, {\n                                value: \"large\",\n                                label: \"Large\"\n                              }],\n                              isDefault: false,\n                              isMulti: true,\n                              defValue: formikProps.values.packageLimit,\n                              getValue: formikProps.setFieldValue,\n                              error: formikProps.errors.packageLimit\n                            }) : \"\"]\n                          })\n                        })]\n                      }), /*#__PURE__*/_jsx(Row, {\n                        children: /*#__PURE__*/_jsxs(Col, {\n                          lg: \"12\",\n                          children: [/*#__PURE__*/_jsx(Button, {\n                            className: \"float-right\",\n                            color: \"primary\",\n                            type: \"submit\",\n                            children: \"Save\"\n                          }), /*#__PURE__*/_jsx(Button, {\n                            className: \"float-right mr-2\",\n                            color: \"secondary\",\n                            type: \"button\",\n                            onClick: function onClick(e) {\n                              e.preventDefault();\n                              router.back();\n                            },\n                            children: \"Back\"\n                          })]\n                        })\n                      })]\n                    })\n                  });\n                }\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\n\nEdit.layout = Admin;\nexport default Edit;","map":null,"metadata":{},"sourceType":"module"}