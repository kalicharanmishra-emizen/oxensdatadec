{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/Pagination/PaginationClient.js\";\nimport { useEffect, useState } from 'react';\nimport ReactPaginate from 'react-paginate';\nexport default function PaginationClient(props) {\n  const {\n    0: itemsPerPage,\n    1: setitemsPerPage\n  } = useState(0);\n  const {\n    0: items,\n    1: setItem\n  } = useState([]);\n  const {\n    0: pageCount,\n    1: setPageCount\n  } = useState(0);\n  const {\n    0: itemOffset,\n    1: setItemOffset\n  } = useState(0);\n  useEffect(() => {\n    setitemsPerPage(props.itemsPerPage);\n    setItem(props.items);\n  }, [props.itemsPerPage, props.items]);\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage; // console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n\n    props.getCurrentItem({\n      items: items.slice(itemOffset, endOffset),\n      currentOffset: itemOffset\n    });\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, items]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length; // console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      nextLabel: \">\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: itemsPerPage,\n      pageCount: pageCount,\n      previousLabel: \"<\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      breakLabel: \"...\",\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      containerClassName: \"pagination\",\n      activeClassName: \"active\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/Pagination/PaginationClient.js"],"names":["useEffect","useState","ReactPaginate","PaginationClient","props","itemsPerPage","setitemsPerPage","items","setItem","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","getCurrentItem","slice","currentOffset","Math","ceil","length","handlePageClick","event","newOffset","selected"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACU,UAAD;AAAA,OAAaC;AAAb,MAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,eAAe,CAACF,KAAK,CAACC,YAAP,CAAf;AACAG,IAAAA,OAAO,CAACJ,KAAK,CAACG,KAAP,CAAP;AACH,GAHQ,EAGP,CAACH,KAAK,CAACC,YAAP,EAAoBD,KAAK,CAACG,KAA1B,CAHO,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMa,SAAS,GAAGF,UAAU,GAAGN,YAA/B,CAFY,CAGZ;;AACAD,IAAAA,KAAK,CAACU,cAAN,CAAqB;AAACP,MAAAA,KAAK,EAACA,KAAK,CAACQ,KAAN,CAAYJ,UAAZ,EAAwBE,SAAxB,CAAP;AAA0CG,MAAAA,aAAa,EAACL;AAAxD,KAArB;AACAD,IAAAA,YAAY,CAACO,IAAI,CAACC,IAAL,CAAUX,KAAK,CAACY,MAAN,GAAed,YAAzB,CAAD,CAAZ;AACH,GANQ,EAMN,CAACM,UAAD,EAAaN,YAAb,EAA0BE,KAA1B,CANM,CAAT,CAT4C,CAgB5C;;AACA,QAAMa,eAAe,GAAIC,KAAD,IAAW;AAC/B,UAAMC,SAAS,GAAGD,KAAK,CAACE,QAAN,GAAiBlB,YAAjB,GAAgCE,KAAK,CAACY,MAAxD,CAD+B,CAE/B;;AACAP,IAAAA,aAAa,CAACU,SAAD,CAAb;AACH,GAJD;;AAKA,sBACI;AAAA,2BACY,QAAC,aAAD;AACI,MAAA,SAAS,EAAC,GADd;AAEI,MAAA,YAAY,EAAEF,eAFlB;AAGI,MAAA,kBAAkB,EAAEf,YAHxB;AAII,MAAA,SAAS,EAAEI,SAJf;AAKI,MAAA,aAAa,EAAC,GALlB;AAMI,MAAA,aAAa,EAAC,WANlB;AAOI,MAAA,iBAAiB,EAAC,WAPtB;AAQI,MAAA,iBAAiB,EAAC,WARtB;AASI,MAAA,qBAAqB,EAAC,WAT1B;AAUI,MAAA,aAAa,EAAC,WAVlB;AAWI,MAAA,iBAAiB,EAAC,WAXtB;AAYI,MAAA,UAAU,EAAC,KAZf;AAaI,MAAA,cAAc,EAAC,WAbnB;AAcI,MAAA,kBAAkB,EAAC,WAdvB;AAeI,MAAA,kBAAkB,EAAC,YAfvB;AAgBI,MAAA,eAAe,EAAC,QAhBpB;AAiBI,MAAA,qBAAqB,EAAE;AAjB3B;AAAA;AAAA;AAAA;AAAA;AADZ,mBADJ;AAuBH","sourcesContent":["import { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate';\n\nexport default function PaginationClient(props) {\n    const [itemsPerPage, setitemsPerPage] = useState(0)\n    const [items,setItem] = useState([])\n    const [pageCount, setPageCount] = useState(0);\n    const [itemOffset, setItemOffset] = useState(0);\n    useEffect(()=>{\n        setitemsPerPage(props.itemsPerPage)\n        setItem(props.items)\n    },[props.itemsPerPage,props.items])\n    useEffect(() => {\n        // Fetch items from another resources.\n        const endOffset = itemOffset + itemsPerPage;\n        // console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n        props.getCurrentItem({items:items.slice(itemOffset, endOffset),currentOffset:itemOffset});\n        setPageCount(Math.ceil(items.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage,items]);\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n        const newOffset = event.selected * itemsPerPage % items.length;\n        // console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n        setItemOffset(newOffset);\n    };\n    return (\n        <>\n                    <ReactPaginate\n                        nextLabel=\">\"\n                        onPageChange={handlePageClick}\n                        pageRangeDisplayed={itemsPerPage}\n                        pageCount={pageCount}\n                        previousLabel=\"<\"\n                        pageClassName=\"page-item\"\n                        pageLinkClassName=\"page-link\"\n                        previousClassName=\"page-item\"\n                        previousLinkClassName=\"page-link\"\n                        nextClassName=\"page-item\"\n                        nextLinkClassName=\"page-link\"\n                        breakLabel=\"...\"\n                        breakClassName=\"page-item\"\n                        breakLinkClassName=\"page-link\"\n                        containerClassName=\"pagination\"\n                        activeClassName=\"active\"\n                        renderOnZeroPageCount={null}\n                    />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}