{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst menuSlice = createSlice({\n  name: \"menuClice\",\n  initialState: {\n    categoryList: [],\n    categoryDetail: null,\n    items: [],\n    itemDetail: null,\n    custome: [],\n    costomDetails: null,\n    customeVariant: [],\n    costomDetailsVariant: null,\n    variantDapendancyDetails: null\n  },\n  reducers: {\n    menuCategory: (state, action) => {\n      state.categoryList = action.payload.data;\n    },\n    menuCategoryDetail: (state, action) => {\n      state.categoryDetail = action.payload.data;\n    },\n    unSetMenuCategoryDetail: (state, action) => {\n      state.categoryDetail = null;\n    },\n    itemLists: (state, action) => {\n      state.items = action.payload.data;\n    },\n    itemDetail: (state, action) => {\n      state.itemDetail = action.payload.data;\n    },\n    unSetMenuItemDetail: (state, action) => {\n      state.itemDetail = null;\n    },\n    customeList: (state, action) => {\n      state.custome = action.payload.data;\n    },\n    customeDetail: (state, action) => {\n      state.costomDetails = action.payload.data;\n    },\n    unSetCustomDetails: (state, action) => {\n      state.costomDetails = null;\n    },\n    unSetCustome: (state, action) => {\n      state.custome = [];\n    },\n    customeVarientList: (state, action) => {\n      state.customeVariant = action.payload.data;\n    },\n    customeDetailVarient: (state, action) => {\n      state.costomDetailsVariant = action.payload.data;\n    },\n    unSetCustomDetailsVarient: (state, action) => {\n      state.costomDetailsVariant = null;\n    },\n    dependancyDetail: (state, action) => {\n      state.variantDapendancyDetails = action.payload.data;\n    },\n    unSetDependancyDetail: (state, action) => {\n      state.variantDapendancyDetails = null;\n    },\n    unSetCustomeVarient: (state, action) => {\n      state.customeVariant = [];\n    }\n  }\n});\nconst {\n  menuCategory,\n  menuCategoryDetail,\n  unSetMenuCategoryDetail,\n  itemLists,\n  itemDetail,\n  unSetMenuItemDetail,\n  customeList,\n  unSetCustome,\n  customeDetail,\n  unSetCustomDetails,\n  customeVarientList,\n  unSetCustomeVarient,\n  customeDetailVarient,\n  unSetCustomDetailsVarient,\n  dependancyDetail,\n  unSetDependancyDetail\n} = menuSlice.actions;\nexport default menuSlice.reducer;\n/* menu category reducres function start */\n\nexport const getCategoryList = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/category/list', value);\n    dispatch(menuCategory(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getCategoryDetails = value => async dispatch => {\n  try {\n    console.log('get cat detail', value);\n    let res = await callApi('post', '/menu/category/detail', value);\n    dispatch(menuCategoryDetail(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const unSetCategoryDetails = () => async dispatch => {\n  dispatch(unSetMenuCategoryDetail());\n};\nexport const createCategory = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/category/create', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const updateCategory = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/category/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\n/* menu category reducres function end */\n\n/* menu items reducres function start */\n\nexport const getItemsList = (value, page = 1) => async dispatch => {\n  try {\n    let res = await callApi('post', `/menu/item/list?page=${page}`, value);\n    dispatch(itemLists(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const createItems = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/item/create', value, {\n      'Content-Type': 'multipart/form-data'\n    });\n    console.log(\"create menu items spi res\", res.data);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    console.log(\"create menu items spi error\", error);\n    dispatch(apiFail(error));\n  }\n};\nexport const updateItems = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/item/update', value, {\n      'Content-Type': 'multipart/form-data'\n    });\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getItemDetail = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/item/detail', value);\n    dispatch(itemDetail(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const unSetItemDetails = () => async dispatch => {\n  dispatch(unSetMenuItemDetail());\n};\n/* menu items reducres function end */\n\n/* menu items customize reducres function start */\n\nexport const getCustomeList = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/list', value);\n    dispatch(customeList(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const unSetCustomeList = () => async dispatch => {\n  dispatch(unSetCustome());\n};\nexport const createCustome = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/create', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const detailCustomize = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/detail', value);\n    dispatch(customeDetail(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const unSetDetailCustomize = () => async dispatch => {\n  dispatch(unSetCustomDetails());\n};\nexport const updateCustome = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\n/* menu items customize reducres function end */\n\n/* menu items customize Varients reducres function start */\n\nexport const getCustomeVarientList = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/variant/list', value);\n    dispatch(customeVarientList(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const unSetCustomeVarientList = () => async dispatch => {\n  dispatch(unSetCustomeVarient());\n};\nexport const createCustomeVarient = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/variant/create', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const detailCustomizeVarient = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/variant/detail', value);\n    dispatch(customeDetailVarient(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const unSetDetailCustomizeVarient = () => async dispatch => {\n  dispatch(unSetCustomDetailsVarient());\n};\nexport const updateCustomeVarient = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/variant/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const VarientDependent = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/menu/customize/variant/deplist', value);\n    dispatch(dependancyDetail(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\n/* menu items customize Varients reducres function end */","map":null,"metadata":{},"sourceType":"module"}