{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst MapWrapper = props => {\n  const mapRef = useRef(null);\n  const {\n    0: location,\n    1: setLocation\n  } = useState({\n    lat: \"40.748817\",\n    lng: \"-73.985428\"\n  });\n  useEffect(() => {\n    setLocation({\n      lat: props.location.lat != '' ? props.location.lat : \"40.748817\",\n      lng: props.location.lng != '' ? props.location.lng : \"-73.985428\"\n    });\n  }, [props.location]);\n  useEffect(() => {\n    let google = window.google;\n    let map = mapRef.current;\n    let lat = location.lat;\n    let lng = location.lng;\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const geoCode = new google.maps.Geocoder();\n    const mapOptions = {\n      zoom: 16,\n      center: myLatlng,\n      scrollwheel: false,\n      zoomControl: true,\n      fullscreenControl: false,\n      mapTypeControl: false,\n      streetViewControl: false,\n      styles: [{\n        featureType: \"administrative\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#444444\"\n        }]\n      }, {\n        featureType: \"landscape\",\n        elementType: \"all\",\n        stylers: [{\n          color: \"#f2f2f2\"\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"all\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"all\",\n        stylers: [{\n          saturation: -100\n        }, {\n          lightness: 45\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"all\",\n        stylers: [{\n          visibility: \"simplified\"\n        }]\n      }, {\n        featureType: \"road.arterial\",\n        elementType: \"labels.icon\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"transit\",\n        elementType: \"all\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"all\",\n        stylers: [{\n          color: \"#5e72e4\"\n        }, {\n          visibility: \"on\"\n        }]\n      }]\n    };\n    map = new google.maps.Map(map, mapOptions);\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"Light Bootstrap Dashboard PRO React!\"\n    });\n    google.maps.event.addListener(map, 'drag', function () {\n      marker.setPosition(this.getCenter());\n    });\n    google.maps.event.addListener(map, 'dragend', function () {\n      marker.setPosition(this.getCenter()); // set marker position to map center\n\n      geoCode.geocode({\n        latLng: this.getCenter()\n      }, function (responses) {\n        if (responses && responses.length > 0) {\n          props.getLocation(responses[0]);\n        } else {\n          console.log('error map');\n        }\n      });\n    });\n  }, [location]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    // style={{height: '450px'}}\n    className: \"map-canvas\",\n    id: \"map-canvas\",\n    ref: mapRef\n  });\n};\n\nexport default MapWrapper;","map":null,"metadata":{},"sourceType":"module"}