{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Admin from \"layouts/Admin\";\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Row } from \"reactstrap\";\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport StatusChnage from \"components/Form/StatusChnage\";\nimport LocationCom from \"../../components/Form/LocationCom\";\nimport { useEffect, useState } from \"react\";\nimport { createVendor } from \"reducers/vendorSlice\";\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport { getApiType } from \"reducers/categorySlice\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport NProgress from 'nprogress';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Create() {\n  var router = useRouter();\n\n  var _useState = useState(true),\n      loader = _useState[0],\n      setLoader = _useState[1];\n\n  var apiError = useSelector(function (state) {\n    return state.mainSlice.failed;\n  });\n  var apiSuccess = useSelector(function (state) {\n    return state.mainSlice.success;\n  });\n  var typeList = useSelector(function (state) {\n    return state.categorySlice.typeList;\n  });\n  var dispatch = useDispatch();\n  var formSubmit = {\n    typeOf: \"\",\n    deliveryType: \"\",\n    assignPOS: \"\",\n    email: \"\",\n    name: \"\",\n    phone_no: \"\",\n    commission: \"\",\n    hygiene_url: \"\",\n    contact_person_name: \"\",\n    contact_person_email: \"\",\n    contact_person_phone_no: \"\",\n    location: {\n      address: \"\",\n      lat: \"\",\n      lng: \"\"\n    },\n    status: true\n  };\n  var validationSchema = Yup.object().shape({\n    typeOf: Yup.string().required('Vendor type is required!'),\n    deliveryType: Yup.string().required('Delivery type is required!'),\n    assignPOS: Yup.string().required('Assign type is required!'),\n    email: Yup.string().required('Store email required').email(\"Email must be a valid email address\"),\n    name: Yup.string().required('Store name required'),\n    phone_no: Yup.string().required('Store phone no. required').matches(/^[1-9][0-9]{9,13}$/g, 'Phone number is not valid'),\n    commission: Yup.number().typeError('Must be a number').required('Store commission is required!').min(1, 'Commission must be a number between 1 to 100').max(100, 'Commission must be a number between 1 to 100'),\n    hygiene_url: Yup.string().required('Hygiene url is required').url('Must be a valid url'),\n    contact_person_name: Yup.string().required('Contact person name required'),\n    contact_person_email: Yup.string().required('Contact person email required').email('Email must be a valid email address'),\n    contact_person_phone_no: Yup.string().required('Contact person phone no. required').matches(/^[1-9][0-9]{9,13}$/g, 'Phone number is not valid'),\n    location: Yup.object().shape({\n      address: Yup.string().required('Location is required')\n    })\n  });\n\n  var _useState2 = useState({\n    status: false,\n    message: '',\n    type: ''\n  }),\n      alert = _useState2[0],\n      setAlert = _useState2[1];\n  /* form submit handel start */\n\n\n  var formSubmitHandal = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formSubmit) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log('final data',formSubmit);\n              NProgress.start();\n              dispatch(createVendor(formSubmit));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function formSubmitHandal(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /* form submit handel end */\n\n\n  if (alert.status) {\n    toast(alert.message, {\n      type: alert.type\n    });\n  }\n\n  useEffect(function () {\n    if (typeList.length == 1) {\n      dispatch(getApiType());\n    }\n\n    setLoader(false);\n  }, []);\n  useEffect(function () {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        setAlert({\n          status: true,\n          message: apiSuccess.message,\n          type: 'success'\n        });\n        dispatch(unSetApiSucc());\n        NProgress.done();\n        router.push('/vendor');\n        setTimeout(function () {\n          setAlert({\n            status: false,\n            message: '',\n            type: ''\n          });\n        }, 3000);\n      }\n    }\n\n    if (apiError) {\n      if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n        setAlert({\n          status: true,\n          message: apiError.message,\n          type: 'error'\n        });\n        dispatch(unSetApiFail());\n        NProgress.done();\n        setTimeout(function () {\n          setAlert({\n            status: false,\n            message: '',\n            type: ''\n          });\n        }, 3000);\n      }\n    }\n  }, [apiSuccess, apiError]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(UserHeader, {}), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsx(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Create Vendor\"\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(Formik, {\n                initialValues: formSubmit,\n                validationSchema: validationSchema,\n                validateOnChange: false,\n                validateOnBlur: false,\n                onSubmit: function onSubmit(values) {\n                  return formSubmitHandal(values);\n                },\n                children: function children(formikProps) {\n                  var _formikProps$values, _formikProps$values2, _formikProps$errors;\n\n                  return /*#__PURE__*/_jsx(Form, {\n                    onSubmit: formikProps.handleSubmit,\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"pl-lg-4\",\n                      children: [/*#__PURE__*/_jsxs(Row, {\n                        className: \"align-items-center\",\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsx(\"h6\", {\n                            className: \"heading-small text-muted mb-4\",\n                            children: \"Vendor General\"\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Type of Vendor *\"\n                            }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                              name: \"typeOf\",\n                              id: \"typeOf\",\n                              options: typeList,\n                              isDefault: false,\n                              isMulti: false,\n                              defValue: formikProps.values.typeOf,\n                              getValue: formikProps.setFieldValue,\n                              error: formikProps.errors.typeOf\n                            }) : \"\"]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Delivery Type *\"\n                            }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                              name: \"deliveryType\",\n                              id: \"deliveryType\",\n                              options: [{\n                                value: \"0\",\n                                label: \"Oxens\"\n                              }, {\n                                value: \"1\",\n                                label: \"Self\"\n                              }],\n                              isDefault: false,\n                              isMulti: false,\n                              defValue: (formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$values = formikProps.values) === null || _formikProps$values === void 0 ? void 0 : _formikProps$values.deliveryType.toString()) || \"\",\n                              getValue: formikProps.setFieldValue,\n                              error: formikProps.errors.deliveryType\n                            }) : \"\"]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \" Assign POS * \"\n                            }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                              name: \"assignPOS\",\n                              id: \"assignPOS\",\n                              options: [{\n                                value: \"0\",\n                                label: \"Not Assigned\"\n                              }, {\n                                value: \"1\",\n                                label: \"Assigned POS\"\n                              }],\n                              isDefault: false,\n                              isMulti: false,\n                              defValue: (formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$values2 = formikProps.values) === null || _formikProps$values2 === void 0 ? void 0 : _formikProps$values2.assignPOS.toString()) || \"\",\n                              getValue: formikProps.setFieldValue,\n                              error: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$errors = formikProps.errors) === null || _formikProps$errors === void 0 ? void 0 : _formikProps$errors.assignPOS\n                            }) : \"\"]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Name *\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"name\",\n                              placeholder: \"Enter Store Name\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.name,\n                              error: formikProps.errors.name\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsxs(\"label\", {\n                              className: \"form-control-label\",\n                              children: [\"Email * \", /*#__PURE__*/_jsx(\"small\", {\n                                children: \"(This will be login ID)\"\n                              })]\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"email\",\n                              placeholder: \"Enter Store Email\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.email,\n                              error: formikProps.errors.email\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Phone No *\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"phone_no\",\n                              placeholder: \"Enter Phone No.\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.phone_no,\n                              error: formikProps.errors.phone_no\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsxs(\"label\", {\n                              className: \"form-control-label\",\n                              children: [\"Commission % \", /*#__PURE__*/_jsx(\"small\", {\n                                children: \"(Per order) *\"\n                              })]\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"number\",\n                              name: \"commission\",\n                              min: 0,\n                              max: 100,\n                              placeholder: \"Enter Phone No.\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.commission,\n                              error: formikProps.errors.commission\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            inline: true,\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label d-block w-100\",\n                              children: \"Status\"\n                            }), !loader ? /*#__PURE__*/_jsx(StatusChnage, {\n                              defValue: formikProps.values.status,\n                              getValue: formikProps.setFieldValue,\n                              error: formikProps.errors.status\n                            }) : \"\"]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label d-block w-100\",\n                              children: \"Hygiene Url *\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"hygiene_url\",\n                              placeholder: \"Hygiene Url\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.hygiene_url,\n                              error: formikProps.errors.hygiene_url\n                            })]\n                          })\n                        })]\n                      }), /*#__PURE__*/_jsxs(Row, {\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsx(\"h6\", {\n                            className: \"heading-small text-muted mb-4\",\n                            children: \"Vendor Contact Preson\"\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Name *\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"contact_person_name\",\n                              placeholder: \"Enter Name\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.contact_person_name,\n                              error: formikProps.errors.contact_person_name\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Email *\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"contact_person_email\",\n                              placeholder: \"Enter email\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.contact_person_email,\n                              error: formikProps.errors.contact_person_email\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"4\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Phone No *\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"contact_person_phone_no\",\n                              placeholder: \"Enter Phone No.\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.contact_person_phone_no,\n                              error: formikProps.errors.contact_person_phone_no\n                            })]\n                          })\n                        })]\n                      }), /*#__PURE__*/_jsxs(Row, {\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsx(\"h6\", {\n                            className: \"heading-small text-muted mb-4\",\n                            children: \"Vendor Location\"\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Location *\"\n                            }), /*#__PURE__*/_jsx(LocationCom, {\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.location,\n                              error: formikProps.errors.location\n                            })]\n                          })\n                        })]\n                      }), /*#__PURE__*/_jsx(Row, {\n                        children: /*#__PURE__*/_jsxs(Col, {\n                          lg: \"12\",\n                          children: [/*#__PURE__*/_jsx(Button, {\n                            className: \"float-right\",\n                            color: \"primary\",\n                            type: \"submit\",\n                            children: \"Save\"\n                          }), /*#__PURE__*/_jsx(Button, {\n                            className: \"float-right mr-2\",\n                            color: \"secondary\",\n                            type: \"button\",\n                            onClick: function onClick(e) {\n                              e.preventDefault();\n                              router.back();\n                            },\n                            children: \"Back\"\n                          })]\n                        })\n                      })]\n                    })\n                  });\n                }\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\n\nCreate.layout = Admin;\nexport default Create;","map":null,"metadata":{},"sourceType":"module"}