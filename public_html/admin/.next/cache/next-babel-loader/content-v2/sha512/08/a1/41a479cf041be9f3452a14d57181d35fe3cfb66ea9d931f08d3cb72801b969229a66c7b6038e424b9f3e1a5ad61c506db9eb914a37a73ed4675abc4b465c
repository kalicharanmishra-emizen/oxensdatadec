{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst vendorSlice = createSlice({\n  name: \"vendor\",\n  initialState: {\n    vendorList: null,\n    vendorEdit: null\n  },\n  reducers: {\n    listing: (state, action) => {\n      state.vendorList = action.payload;\n    },\n    edit: (state, action) => {\n      state.vendorEdit = action.payload.data;\n    },\n    unSetEdit: (state, action) => {\n      state.vendorEdit = null;\n    }\n  }\n});\nexport default vendorSlice.reducer;\nconst {\n  listing,\n  edit,\n  unSetEdit\n} = vendorSlice.actions;\nexport const getList = (page = 1) => async dispatch => {\n  try {\n    const res = await callApi('post', `/vendor/list?page=${page}`, {});\n    dispatch(listing(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getVendor = userId => async dispatch => {\n  try {\n    const res = await callApi('post', '/vendor/edit', {\n      userId\n    });\n    dispatch(edit(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const createVendor = value => async dispatch => {\n  try {\n    const res = await callApi('post', '/vendor/create', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const updateVendor = value => async dispatch => {\n  try {\n    const res = await callApi('post', '/vendor/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const unSetEditVendor = () => async dispatch => {\n  dispatch(unSetEdit());\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/vendorSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","vendorSlice","name","initialState","vendorList","vendorEdit","reducers","listing","state","action","payload","edit","data","unSetEdit","reducer","actions","getList","page","dispatch","res","e","getVendor","userId","createVendor","value","updateVendor","unSetEditVendor"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst vendorSlice = createSlice({\n    name:\"vendor\",\n    initialState:{\n        vendorList:null,\n        vendorEdit:null,\n    },\n    reducers:{\n        listing:(state,action)=>{\n            state.vendorList=action.payload\n        },\n        edit:(state,action)=>{\n            state.vendorEdit = action.payload.data\n        },\n        unSetEdit:(state,action)=>{\n            state.vendorEdit = null\n        },\n    }\n})\nexport default vendorSlice.reducer\nconst { listing,edit,unSetEdit } = vendorSlice.actions\n\nexport const getList = (page=1) => async dispatch =>{\n    try {\n        const res = await callApi('post',`/vendor/list?page=${page}`,{})\n        dispatch(listing(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const getVendor = (userId) => async dispatch =>{\n    try {\n        const res = await callApi('post','/vendor/edit',{userId})\n        dispatch(edit(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const createVendor = (value) => async dispatch =>{\n    try {\n        const res = await callApi('post','/vendor/create',value)\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const updateVendor = (value) => async dispatch =>{\n    try {\n        const res = await callApi('post','/vendor/update',value)\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const unSetEditVendor = () => async dispatch =>{\n    dispatch(unSetEdit())\n}"]},"metadata":{},"sourceType":"module"}