{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/driver/Income.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Col, FormGroup, Row, Table } from 'reactstrap';\nimport PaginationServer from '../Pagination/PaginationServer';\nimport { getDriverIncome } from '../../reducers/driverSlice';\nimport Loader from '../ApiLoader/loader';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Income = ({\n  activeTab,\n  driverId\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  const {\n    0: incomeList,\n    1: setDriverList\n  } = useState([]);\n  const {\n    0: paginationData,\n    1: setPaginationData\n  } = useState({});\n  const {\n    0: filterData,\n    1: setFilterData\n  } = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const getIncomeList = useSelector(state => state.driverSlice.driverIncome);\n\n  const pageChange = data => {\n    setLoader(true);\n    dispatch(getDriverIncome({\n      page: data,\n      driverId: driverId\n    }, filterData));\n  };\n\n  const handelFilter = type => {\n    if (type === 'reset') {\n      setFilterData({\n        startDate: '',\n        endDate: ''\n      });\n      dispatch(getDriverIncome({\n        page: 1,\n        driverId: driverId\n      }, {}));\n    } else {\n      dispatch(getDriverIncome({\n        page: 1,\n        driverId: driverId\n      }, filterData));\n    }\n  };\n\n  useEffect(() => {\n    if (activeTab) {\n      setLoader(true);\n      dispatch(getDriverIncome({\n        page: 1,\n        driverId: driverId\n      }, filterData));\n    }\n  }, [activeTab]);\n  useEffect(() => {\n    if (getIncomeList) {\n      let pagData = {\n        totalDocs: getIncomeList.totalDocs,\n        limit: getIncomeList.limit,\n        page: getIncomeList.page,\n        totalPages: getIncomeList.totalPages,\n        hasPrevPage: getIncomeList.hasPrevPage,\n        hasNextPage: getIncomeList.hasNextPage,\n        prevPage: getIncomeList.prevPage,\n        nextPage: getIncomeList.nextPage\n      };\n      setPaginationData(pagData);\n      setDriverList(getIncomeList.docs);\n      setLoader(false);\n    }\n  }, [getIncomeList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xl: \"12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"form-control\",\n              selected: filterData.startDate != '' ? new Date(filterData.startDate) : null,\n              maxDate: filterData.endDate != '' ? new Date(filterData.endDate) : null,\n              onChange: date => {\n                filterData.startDate = moment(date).format('YYYY-MM-DD');\n                setFilterData(_objectSpread({}, filterData));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"form-control\",\n              selected: filterData.endDate != '' ? new Date(filterData.endDate) : null,\n              minDate: filterData.startDate != '' ? new Date(filterData.startDate) : null,\n              onChange: date => {\n                filterData.endDate = moment(date).format('YYYY-MM-DD');\n                setFilterData(_objectSpread({}, filterData));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          className: \"mt-md-4 mt-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            onClick: () => handelFilter('filter'),\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info\",\n            onClick: () => handelFilter('reset'),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xl: \"12\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Earning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Tip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Order Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"CreatedAt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: loader ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this) : incomeList.length == 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: \"No Data Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 37\n          }, this) : incomeList.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", paginationData.page + key, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", item.earning, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", item.tip, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", item.storeDetail.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", item.orderDetail.orderNumber, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", moment(item.createdAt).format('MMMM Do YYYY, h:mm:ss a'), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 45\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 6,\n              className: \"text-right\",\n              children: paginationData ? /*#__PURE__*/_jsxDEV(PaginationServer, {\n                data: paginationData,\n                pagFun: pageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Income;","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/driver/Income.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Col","FormGroup","Row","Table","PaginationServer","getDriverIncome","Loader","moment","DatePicker","Income","activeTab","driverId","dispatch","loader","setLoader","incomeList","setDriverList","paginationData","setPaginationData","filterData","setFilterData","startDate","endDate","getIncomeList","state","driverSlice","driverIncome","pageChange","data","page","handelFilter","type","pagData","totalDocs","limit","totalPages","hasPrevPage","hasNextPage","prevPage","nextPage","docs","Date","date","format","length","map","item","key","earning","tip","storeDetail","name","orderDetail","orderNumber","createdAt","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Col, FormGroup, Row, Table } from 'reactstrap'\nimport PaginationServer from '../Pagination/PaginationServer'\nimport { getDriverIncome } from '../../reducers/driverSlice'\nimport Loader from '../ApiLoader/loader'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst Income = ({activeTab,driverId}) => {\n    const dispatch = useDispatch()\n    const [loader, setLoader] = useState(true)\n    const [incomeList, setDriverList] = useState([])\n    const [paginationData, setPaginationData] = useState({})\n    const [filterData,setFilterData] = useState({\n        startDate:'',\n        endDate:''\n    })\n    const getIncomeList = useSelector(state=>state.driverSlice.driverIncome)\n    const pageChange = (data) =>{\n        setLoader(true)\n        dispatch(getDriverIncome({ page:data,driverId:driverId },filterData))\n    }\n    const handelFilter = (type) => {\n        if (type==='reset') {\n            setFilterData({\n                startDate:'',\n                endDate:''\n            })\n            dispatch(getDriverIncome({ page:1,driverId:driverId },{}))\n        }else{\n            dispatch(getDriverIncome({ page:1,driverId:driverId },filterData))\n        }\n    }\n    useEffect(()=>{\n        if (activeTab) {\n            setLoader(true)\n            dispatch(getDriverIncome({ page:1,driverId:driverId },filterData))\n        }\n    },[activeTab])\n    useEffect(()=>{\n        if(getIncomeList){\n            let pagData={\n                totalDocs: getIncomeList.totalDocs,\n                limit: getIncomeList.limit,\n                page: getIncomeList.page,\n                totalPages: getIncomeList.totalPages,\n                hasPrevPage: getIncomeList.hasPrevPage,\n                hasNextPage: getIncomeList.hasNextPage,\n                prevPage: getIncomeList.prevPage,\n                nextPage: getIncomeList.nextPage\n            }\n            setPaginationData(pagData)\n            setDriverList(getIncomeList.docs)\n            setLoader(false)\n        }\n    },[getIncomeList])\n    return (\n        <div className='row'>\n            <Col xl='12'>\n                <h4>Filter</h4>\n                <Row>\n                    <Col md='4' >\n                        <FormGroup>\n                            <label>Date From</label>\n                            <DatePicker\n                                className='form-control'\n                                selected={ filterData.startDate!=''?new Date(filterData.startDate):null }\n                                maxDate={ filterData.endDate!=''? new Date(filterData.endDate):null }\n                                onChange={(date)=>{\n                                    filterData.startDate = moment(date).format('YYYY-MM-DD')\n                                    setFilterData({...filterData})\n                                }}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col md='4'>\n                        <FormGroup>\n                            <label>Date To</label>\n                            <DatePicker\n                                className='form-control'\n                                selected={ filterData.endDate!=''?new Date(filterData.endDate):null }\n                                minDate={ filterData.startDate!=''?new Date(filterData.startDate):null }\n                                onChange={(date)=>{\n                                    filterData.endDate = moment(date).format('YYYY-MM-DD')\n                                    setFilterData({...filterData})\n                                }}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col md='4' className='mt-md-4 mt-0'>\n                        <button \n                            type='button' \n                            className='btn btn-success'\n                            onClick={()=>handelFilter('filter')}\n                        >\n                            Filter\n                        </button>\n                        <button \n                            type='button' \n                            className='btn btn-info'\n                            onClick={()=>handelFilter('reset')}\n                        >\n                            Reset\n                        </button>\n                    </Col>\n                </Row> \n            </Col>\n            <Col xl='12'>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td>#</td>\n                            <td>Earning</td>\n                            <td>Tip</td>\n                            <td>Store</td>\n                            <td>Order Number</td>\n                            <td>CreatedAt</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            loader?\n                                <tr>\n                                    <td colSpan='6'>\n                                        <Loader/>\n                                    </td>\n                                </tr>\n                            :\n                                incomeList.length==0\n                                ?\n                                    <tr>\n                                        <td colSpan='6'>\n                                            No Data Found\n                                        </td>\n                                    </tr>\n                                :\n                                    incomeList.map((item,key)=>(\n                                        <tr key={item._id}>\n                                            <td> { paginationData.page + key } </td>\n                                            <td> { item.earning } </td>\n                                            <td> { item.tip } </td>\n                                            <td> { item.storeDetail.name } </td>\n                                            <td> { item.orderDetail.orderNumber } </td>\n                                            <td> { moment(item.createdAt).format('MMMM Do YYYY, h:mm:ss a') } </td>\n                                        </tr>\n                                    ))\n                        }  \n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colSpan={6} className=\"text-right\">\n                            {\n                                (paginationData)?\n                                    <PaginationServer \n                                        data={paginationData}\n                                        pagFun={pageChange}\n                                    />\n                                :null        \n                            }\n                            </td>\n                        </tr>\n                    </tfoot>\n                </Table>\n            </Col>\n        </div>\n    )\n}\n\nexport default Income"]},"metadata":{},"sourceType":"module"}