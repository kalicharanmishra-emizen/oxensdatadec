{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState, useRef } from 'react';\nexport default function FormCKEditor(props) {\n  const editorRef = useRef();\n  const {\n    0: editorLoaded,\n    1: setEditorLoaded\n  } = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react').CKEditor,\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n  const {\n    0: formData,\n    1: setFormData\n  } = useState('');\n  const {\n    0: validation,\n    1: setValidation\n  } = useState('');\n  const {\n    0: submitValidate,\n    1: setsubmitValidate\n  } = useState(false);\n  useEffect(() => {\n    setFormData(props.defValue);\n\n    if (props.defValue != '') {\n      setValidation(null);\n    }\n  }, [props.defValue]);\n\n  const validateData = async value => {\n    if (!props.validator.required) {\n      setValidation(null);\n    } else {\n      if (value.length == 0) {\n        setValidation(props.validator.message);\n      } else {\n        setValidation(null);\n      }\n    }\n  };\n\n  const handleChange = async (event, editor) => {\n    const data = editor.getData(); // console.log( { event, editor, data } )\n\n    setFormData(data);\n    await validateData(data);\n  };\n\n  useEffect(() => {\n    if (validation !== '') {\n      let rowReturnData = {\n        key: props.name,\n        error: validation,\n        data: formData\n      };\n      props.getValue(rowReturnData);\n    }\n  }, [validation, formData]);\n  useEffect(() => {\n    setsubmitValidate(props.submitValidate);\n  }, [props.submitValidate]);\n  useEffect(() => {\n    if (submitValidate) {\n      validateData(formData);\n    }\n  }, [submitValidate]);\n  return editorLoaded ? /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(CKEditor, {\n      editor: ClassicEditor,\n      data: formData,\n      onChange: handleChange\n    }), validation ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"validation-error-custome\",\n      children: validation\n    }) : '']\n  }) : \"\";\n}","map":null,"metadata":{},"sourceType":"module"}