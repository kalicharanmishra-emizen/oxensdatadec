{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/index.js\";\nimport React, { useState, useEffect } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport classnames from \"classnames\"; // javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1, chartExample2 } from \"variables/charts.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from \"components/Headers/Header.js\";\nimport { getDashboardData } from \"../reducers/cmsSlice\";\nimport { getMonth, yearlyEarningChart } from \"../Helper/helper\";\n\nconst Dashboard = props => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.cmsSlice.dashboardList);\n  const {\n    0: dashboard,\n    1: setDashboard\n  } = useState(\"\");\n  const {\n    0: label,\n    1: setLabel\n  } = useState(\"\");\n  const {\n    0: label2,\n    1: setLabel2\n  } = useState(\"\");\n  const {\n    0: orderData,\n    1: setOrderData\n  } = useState(0);\n  const {\n    0: yearlySale,\n    1: setYearlySale\n  } = useState(0); // const [activeNav, setActiveNav] = React.useState(1);\n  // const [chartExample1Data, setChartExample1Data] = React.useState(\"data1\");\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  const toggleNavs = (e, index) => {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n\n  const getTotalOrderData = () => {\n    var _dashboard$monthlyOrd, _dashboard$monthlyOrd2, _dashboard$monthlyOrd3, _dashboard$monthlyOrd4;\n\n    let temp = [];\n    let temp2 = [];\n    let tempOrderData = [];\n    let tempOrderData2 = [];\n    dashboard === null || dashboard === void 0 ? void 0 : (_dashboard$monthlyOrd = dashboard.monthlyOrders) === null || _dashboard$monthlyOrd === void 0 ? void 0 : (_dashboard$monthlyOrd2 = _dashboard$monthlyOrd.thisYearOrders) === null || _dashboard$monthlyOrd2 === void 0 ? void 0 : _dashboard$monthlyOrd2.map(item => {\n      temp.push(getMonth(item._id));\n      tempOrderData.push(item.monthOrder);\n    });\n    dashboard === null || dashboard === void 0 ? void 0 : (_dashboard$monthlyOrd3 = dashboard.monthlyOrders) === null || _dashboard$monthlyOrd3 === void 0 ? void 0 : (_dashboard$monthlyOrd4 = _dashboard$monthlyOrd3.thisYearSales) === null || _dashboard$monthlyOrd4 === void 0 ? void 0 : _dashboard$monthlyOrd4.map(item => {\n      temp2.push(getMonth(item._id));\n      tempOrderData2.push(Number(item.monthSale.toFixed(2)));\n    });\n    setLabel(temp);\n    setOrderData(tempOrderData);\n    setLabel2(temp2);\n    setYearlySale(tempOrderData2);\n  }; // Colors\n\n\n  var colors = {\n    gray: {\n      100: \"#f6f9fc\",\n      200: \"#e9ecef\",\n      300: \"#dee2e6\",\n      400: \"#ced4da\",\n      500: \"#adb5bd\",\n      600: \"#8898aa\",\n      700: \"#525f7f\",\n      800: \"#32325d\",\n      900: \"#212529\"\n    },\n    theme: {\n      default: \"#172b4d\",\n      primary: \"#5e72e4\",\n      secondary: \"#f4f5f7\",\n      info: \"#11cdef\",\n      success: \"#2dce89\",\n      danger: \"#f5365c\",\n      warning: \"#fb6340\"\n    },\n    black: \"#12263F\",\n    white: \"#FFFFFF\",\n    transparent: \"transparent\"\n  };\n  let monthlySale = {\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }]\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n\n            content += yLabel;\n            return content;\n          }\n        }\n      }\n    },\n    data: {\n      labels: label,\n      datasets: [{\n        label: \"Sales\",\n        data: orderData,\n        maxBarThickness: 10\n      }]\n    }\n  };\n  let thisYearRevenue = {\n    options: {\n      scales: {\n        yAxes: [{\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                return \"£\" + value + \"\";\n              }\n            }\n          }\n        }]\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n\n            content += \"£\" + yLabel + \"\";\n            return content;\n          }\n        }\n      }\n    },\n    data2: canvas => {\n      return {\n        labels: label2,\n        datasets: [{\n          label: \"Performance\",\n          data: yearlySale\n        }]\n      };\n    }\n  };\n  useEffect(() => {\n    dispatch(getDashboardData());\n  }, []);\n  useEffect(() => {\n    if (!data.isLoading) {\n      setDashboard(data.data);\n    }\n\n    getTotalOrderData();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"mb-5 mb-xl-0\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"text-uppercase text-light ls-1 mb-1\",\n                    children: \"Overview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \" mb-0\",\n                    children: \"Sales value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart\",\n                children: /*#__PURE__*/_jsxDEV(Line, {\n                  data: thisYearRevenue.data2,\n                  options: thisYearRevenue.options,\n                  getDatasetAtEvent: e => console.log(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"text-uppercase text-muted ls-1 mb-1\",\n                    children: \"Performance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Total orders\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart\",\n                children: /*#__PURE__*/_jsxDEV(Bar, {\n                  data: monthlySale.data,\n                  options: monthlySale.options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mb-5 mb-xl-0\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"border-0\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Top Saling Restaurent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              className: \"align-items-center table-flush\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"thead-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Store Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Total Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Delivered Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Pending Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Refund Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), data.isLoading ? \"loading....\" : !dashboard ? \"\" : dashboard === null || dashboard === void 0 ? void 0 : dashboard.topSellingStores.map(item => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"row\",\n                    children: item.storeName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.totalCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.deliveredOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.pendingOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.refundOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mb-5 mb-xl-0\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"border-0\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Top Buyers Users\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              className: \"align-items-center table-flush\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"thead-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"User Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Total Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Delivered Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Pending Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Refund Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Total Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), data.isLoading ? \"loading....\" : !dashboard ? \"\" : dashboard === null || dashboard === void 0 ? void 0 : dashboard.topBuyers.map(item => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"row\",\n                    children: item.userName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.totalOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.deliveredOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.pendingOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.refundOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"\\xA3 \", item.deliveredOrdersAmount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nDashboard.layout = Admin;\nexport default Dashboard;","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/index.js"],"names":["React","useState","useEffect","classnames","Chart","Line","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","chartOptions","parseOptions","chartExample1","chartExample2","useDispatch","useSelector","Header","getDashboardData","getMonth","yearlyEarningChart","Dashboard","props","dispatch","data","state","cmsSlice","dashboardList","dashboard","setDashboard","label","setLabel","label2","setLabel2","orderData","setOrderData","yearlySale","setYearlySale","window","toggleNavs","e","index","preventDefault","setActiveNav","setChartExample1Data","getTotalOrderData","temp","temp2","tempOrderData","tempOrderData2","monthlyOrders","thisYearOrders","map","item","push","_id","monthOrder","thisYearSales","Number","monthSale","toFixed","colors","gray","theme","default","primary","secondary","info","success","danger","warning","black","white","transparent","monthlySale","options","scales","yAxes","ticks","callback","value","tooltips","callbacks","datasets","datasetIndex","yLabel","content","length","labels","maxBarThickness","thisYearRevenue","gridLines","color","zeroLineColor","data2","canvas","isLoading","console","log","topSellingStores","storeName","totalCount","deliveredOrders","pendingOrders","refundOrders","topBuyers","userName","totalOrders","deliveredOrdersAmount","layout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CACA;;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B,C,CACA;;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,GAPF,EAQEC,QARF,EASEC,KATF,EAUEC,SAVF,EAWEC,GAXF,EAYEC,GAZF,QAaO,YAbP,C,CAcA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CACA;;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,QAKO,qBALP;AAMA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,kBAA7C;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACC,QAAN,CAAeC,aAAvB,CAAxB;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BrC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACsC,KAAD;AAAA,OAAQC;AAAR,MAAoBvC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACwC,MAAD;AAAA,OAASC;AAAT,MAAsBzC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAC0C,SAAD;AAAA,OAAYC;AAAZ,MAA4B3C,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAAC4C,UAAD;AAAA,OAAaC;AAAb,MAA8B7C,QAAQ,CAAC,CAAD,CAA5C,CAP2B,CAQ3B;AACA;;AAEA,MAAI8C,MAAM,CAAC3C,KAAX,EAAkB;AAChBiB,IAAAA,YAAY,CAACjB,KAAD,EAAQgB,YAAY,EAApB,CAAZ;AACD;;AAED,QAAM4B,UAAU,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/BD,IAAAA,CAAC,CAACE,cAAF;AACAC,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACAG,IAAAA,oBAAoB,CAAC,SAASH,KAAV,CAApB;AACD,GAJD;;AAMA,QAAMI,iBAAiB,GAAG,MAAM;AAAA;;AAE9B,QAAIC,IAAI,GAAC,EAAT;AACA,QAAIC,KAAK,GAAC,EAAV;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,cAAc,GAAG,EAArB;AAEArB,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,qCAAAA,SAAS,CAAEsB,aAAX,0GAA0BC,cAA1B,kFAA0CC,GAA1C,CAA+CC,IAAD,IAAU;AACtDP,MAAAA,IAAI,CAACQ,IAAL,CAAUnC,QAAQ,CAACkC,IAAI,CAACE,GAAN,CAAlB;AACAP,MAAAA,aAAa,CAACM,IAAd,CAAmBD,IAAI,CAACG,UAAxB;AACD,KAHD;AAIA5B,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,sCAAAA,SAAS,CAAEsB,aAAX,4GAA0BO,aAA1B,kFAAyCL,GAAzC,CAA8CC,IAAD,IAAU;AACrDN,MAAAA,KAAK,CAACO,IAAN,CAAYnC,QAAQ,CAACkC,IAAI,CAACE,GAAN,CAApB;AACAN,MAAAA,cAAc,CAACK,IAAf,CAAqBI,MAAM,CAAEL,IAAI,CAACM,SAAN,CAAiBC,OAAjB,CAAyB,CAAzB,CAAD,CAA3B;AACD,KAHD;AAKA7B,IAAAA,QAAQ,CAACe,IAAD,CAAR;AACAX,IAAAA,YAAY,CAACa,aAAD,CAAZ;AACAf,IAAAA,SAAS,CAACc,KAAD,CAAT;AACAV,IAAAA,aAAa,CAACY,cAAD,CAAb;AACD,GApBD,CArB2B,CA2C1B;;;AACA,MAAIY,MAAM,GAAG;AACZC,IAAAA,IAAI,EAAE;AACJ,WAAK,SADD;AAEJ,WAAK,SAFD;AAGJ,WAAK,SAHD;AAIJ,WAAK,SAJD;AAKJ,WAAK,SALD;AAMJ,WAAK,SAND;AAOJ,WAAK,SAPD;AAQJ,WAAK,SARD;AASJ,WAAK;AATD,KADM;AAYZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,SADJ;AAELC,MAAAA,OAAO,EAAE,SAFJ;AAGLC,MAAAA,SAAS,EAAE,SAHN;AAILC,MAAAA,IAAI,EAAE,SAJD;AAKLC,MAAAA,OAAO,EAAE,SALJ;AAMLC,MAAAA,MAAM,EAAE,SANH;AAOLC,MAAAA,OAAO,EAAE;AAPJ,KAZK;AAqBZC,IAAAA,KAAK,EAAE,SArBK;AAsBZC,IAAAA,KAAK,EAAE,SAtBK;AAuBZC,IAAAA,WAAW,EAAE;AAvBD,GAAb;AA0BD,MAAIC,WAAW,GAAG;AAChBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,UAAUC,KAAV,EAAiB;AACzB,kBAAI,EAAEA,KAAK,GAAG,EAAV,CAAJ,EAAmB;AACjB;AACA,uBAAOA,KAAP;AACD;AACF;AANI;AADT,SADK;AADD,OADD;AAePC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE;AACTpD,UAAAA,KAAK,EAAE,UAAUuB,IAAV,EAAgB7B,IAAhB,EAAsB;AAC3B,gBAAIM,KAAK,GAAGN,IAAI,CAAC2D,QAAL,CAAc9B,IAAI,CAAC+B,YAAnB,EAAiCtD,KAAjC,IAA0C,EAAtD;AACA,gBAAIuD,MAAM,GAAGhC,IAAI,CAACgC,MAAlB;AACA,gBAAIC,OAAO,GAAG,EAAd;;AACA,gBAAI9D,IAAI,CAAC2D,QAAL,CAAcI,MAAd,GAAuB,CAA3B,EAA8B;AAC5BD,cAAAA,OAAO,IAAIxD,KAAX;AACD;;AACDwD,YAAAA,OAAO,IAAID,MAAX;AACA,mBAAOC,OAAP;AACD;AAVQ;AADH;AAfH,KADO;AA+BhB9D,IAAAA,IAAI,EAAE;AACJgE,MAAAA,MAAM,EAAE1D,KADJ;AAEJqD,MAAAA,QAAQ,EAAE,CACR;AACErD,QAAAA,KAAK,EAAE,OADT;AAEEN,QAAAA,IAAI,EAAEU,SAFR;AAGEuD,QAAAA,eAAe,EAAE;AAHnB,OADQ;AAFN;AA/BU,GAAlB;AA2CA,MAAIC,eAAe,GAAG;AACpBf,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEc,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAE/B,MAAM,CAACC,IAAP,CAAY,GAAZ,CADE;AAET+B,YAAAA,aAAa,EAAEhC,MAAM,CAACC,IAAP,CAAY,GAAZ;AAFN,WADb;AAKEgB,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,UAAUC,KAAV,EAAiB;AACzB,kBAAI,EAAEA,KAAK,GAAG,EAAV,CAAJ,EAAmB;AACjB,uBAAO,MAAMA,KAAN,GAAc,EAArB;AACD;AACF;AALI;AALT,SADK;AADD,OADD;AAkBPC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE;AACTpD,UAAAA,KAAK,EAAE,UAAUuB,IAAV,EAAgB7B,IAAhB,EAAsB;AAC3B,gBAAIM,KAAK,GAAGN,IAAI,CAAC2D,QAAL,CAAc9B,IAAI,CAAC+B,YAAnB,EAAiCtD,KAAjC,IAA0C,EAAtD;AACA,gBAAIuD,MAAM,GAAGhC,IAAI,CAACgC,MAAlB;AACA,gBAAIC,OAAO,GAAG,EAAd;;AAEA,gBAAI9D,IAAI,CAAC2D,QAAL,CAAcI,MAAd,GAAuB,CAA3B,EAA8B;AAC5BD,cAAAA,OAAO,IAAIxD,KAAX;AACD;;AAEDwD,YAAAA,OAAO,IAAI,MAAMD,MAAN,GAAe,EAA1B;AACA,mBAAOC,OAAP;AACD;AAZQ;AADH;AAlBH,KADW;AAoCpBQ,IAAAA,KAAK,EAAGC,MAAD,IAAY;AACjB,aAAO;AACLP,QAAAA,MAAM,EAAExD,MADH;AAELmD,QAAAA,QAAQ,EAAE,CACR;AACErD,UAAAA,KAAK,EAAE,aADT;AAEEN,UAAAA,IAAI,EAAEY;AAFR,SADQ;AAFL,OAAP;AASD;AA9CmB,GAAtB;AAiDA3C,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAAC+B,IAAI,CAACwE,SAAT,EAAmB;AACjBnE,MAAAA,YAAY,CAACL,IAAI,CAACA,IAAN,CAAZ;AACD;;AACDqB,IAAAA,iBAAiB;AAClB,GALQ,EAKN,CAACrB,IAAD,CALM,CAAT;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,OAArB;AAA6B,MAAA,KAAK,MAAlC;AAAA,8BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,IAAjC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACE;AAAI,oBAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAI,oBAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,QAAD;AAAA,qCAEE;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAA,uCACE,QAAC,IAAD;AACE,kBAAA,IAAI,EAAEkE,eAAe,CAACI,KADxB;AAEE,kBAAA,OAAO,EAAEJ,eAAe,CAACf,OAF3B;AAGE,kBAAA,iBAAiB,EAAGnC,CAAD,IAAOyD,OAAO,CAACC,GAAR,CAAY1D,CAAZ;AAH5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAyBE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAa,UAAA,SAAS,EAAC,MAAvB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACE;AAAI,oBAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAI,oBAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,QAAD;AAAA,qCAEE;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAA,uCACE,QAAC,GAAD;AACE,kBAAA,IAAI,EAAEkC,WAAW,CAAClD,IADpB;AAEE,kBAAA,OAAO,EAAEkD,WAAW,CAACC;AAFvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkDE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,IAAjC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,UAAtB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCACE;AAAI,oBAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,gCAAjB;AAAkD,cAAA,UAAU,MAA5D;AAAA,sCACE;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA,uCACE;AAAA,0CACE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,EAUInD,IAAI,CAACwE,SAAL,GACI,aADJ,GAEI,CAACpE,SAAD,GACE,EADF,GAEEA,SAFF,aAEEA,SAFF,uBAEEA,SAAS,CAAEuE,gBAAX,CAA4B/C,GAA5B,CAAiCC,IAAD,iBAChC;AAAA,uCACE;AAAA,0CACE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA,8BAAkBA,IAAI,CAAC+C;AAAvB;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAM/C,IAAI,CAACgD;AAAX;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA,8BAAMhD,IAAI,CAACiD;AAAX;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAA,8BAAMjD,IAAI,CAACkD;AAAX;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA,8BAAMlD,IAAI,CAACmD;AAAX;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADA,CAdV;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlDF,eA0FE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,IAAjC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,UAAtB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCACE;AAAI,oBAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,gCAAjB;AAAkD,cAAA,UAAU,MAA5D;AAAA,sCACE;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAAA,uCACE;AAAA,0CACE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,eAME;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,EAWIhF,IAAI,CAACwE,SAAL,GACI,aADJ,GAEI,CAACpE,SAAD,GACE,EADF,GAEEA,SAFF,aAEEA,SAFF,uBAEEA,SAAS,CAAE6E,SAAX,CAAqBrD,GAArB,CAA0BC,IAAD,iBACzB;AAAA,uCACE;AAAA,0CACE;AAAI,oBAAA,KAAK,EAAC,KAAV;AAAA,8BAAkBA,IAAI,CAACqD;AAAvB;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAMrD,IAAI,CAACsD;AAAX;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA,8BAAMtD,IAAI,CAACiD;AAAX;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAA,8BAAMjD,IAAI,CAACkD;AAAX;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA,8BAAMlD,IAAI,CAACmD;AAAX;AAAA;AAAA;AAAA;AAAA,0BALF,eAME;AAAA,wCAAQnD,IAAI,CAACuD,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADA,CAfV;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1FF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA2ID,CAvTD;;AAyTAvF,SAAS,CAACwF,MAAV,GAAmBnG,KAAnB;AAEA,eAAeW,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n// layout for this page\nimport Admin from \"layouts/Admin.js\";\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2,\n} from \"variables/charts.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from \"components/Headers/Header.js\";\nimport { getDashboardData } from \"../reducers/cmsSlice\"\nimport { getMonth, yearlyEarningChart } from \"../Helper/helper\";\n\nconst Dashboard = (props) => {\n  const dispatch = useDispatch()\n  const data = useSelector(state=>state.cmsSlice.dashboardList);\n  const [dashboard, setDashboard] = useState(\"\")\n  const [label, setLabel] = useState(\"\")\n  const [label2, setLabel2] = useState(\"\")\n  const [orderData, setOrderData] = useState(0)\n  const [yearlySale, setYearlySale] = useState(0)\n  // const [activeNav, setActiveNav] = React.useState(1);\n  // const [chartExample1Data, setChartExample1Data] = React.useState(\"data1\");\n  \n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  const toggleNavs = (e, index) => {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n\n  const getTotalOrderData = () => {\n\n    let temp=[];\n    let temp2=[];\n    let tempOrderData = [];\n    let tempOrderData2 = [];\n\n    dashboard?.monthlyOrders?.thisYearOrders?.map((item) => {\n      temp.push(getMonth(item._id))\n      tempOrderData.push(item.monthOrder)\n    })\n    dashboard?.monthlyOrders?.thisYearSales?.map((item) => {\n      temp2.push( getMonth(item._id) )\n      tempOrderData2.push( Number((item.monthSale).toFixed(2)) )\n    })\n    \n    setLabel(temp)\n    setOrderData(tempOrderData)\n    setLabel2(temp2)\n    setYearlySale(tempOrderData2)\n  }\n\n   // Colors\n   var colors = {\n    gray: {\n      100: \"#f6f9fc\",\n      200: \"#e9ecef\",\n      300: \"#dee2e6\",\n      400: \"#ced4da\",\n      500: \"#adb5bd\",\n      600: \"#8898aa\",\n      700: \"#525f7f\",\n      800: \"#32325d\",\n      900: \"#212529\",\n    },\n    theme: {\n      default: \"#172b4d\",\n      primary: \"#5e72e4\",\n      secondary: \"#f4f5f7\",\n      info: \"#11cdef\",\n      success: \"#2dce89\",\n      danger: \"#f5365c\",\n      warning: \"#fb6340\",\n    },\n    black: \"#12263F\",\n    white: \"#FFFFFF\",\n    transparent: \"transparent\",\n  };\n\n  let monthlySale = {\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (value) {\n                if (!(value % 10)) {\n                  //return '$' + value + 'k'\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n            content += yLabel;\n            return content;\n          },\n        },\n      },\n    },\n    data: {\n      labels: label,\n      datasets: [\n        {\n          label: \"Sales\",\n          data: orderData,\n          maxBarThickness: 10,\n        },\n      ],\n    },\n  };\n\n  let thisYearRevenue = {\n    options: {\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              color: colors.gray[900],\n              zeroLineColor: colors.gray[900],\n            },\n            ticks: {\n              callback: function (value) {\n                if (!(value % 10)) {\n                  return \"£\" + value + \"\";\n                }\n              },\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n  \n            if (data.datasets.length > 1) {\n              content += label;\n            }\n  \n            content += \"£\" + yLabel + \"\";\n            return content;\n          },\n        },\n      },\n    },\n    data2: (canvas) => {\n      return {\n        labels: label2,\n        datasets: [\n          {\n            label: \"Performance\",\n            data: yearlySale,\n          },\n        ],\n      };\n    },\n  };\n  \n  useEffect(() => {\n    dispatch(getDashboardData());   \n  }, [])\n  useEffect(() => {\n    if(!data.isLoading){\n      setDashboard(data.data) \n    } \n    getTotalOrderData()\n  }, [data])\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\" mb-0\">Sales value</h2>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                <div className=\"chart\">\n                  <Line\n                    data={thisYearRevenue.data2}\n                    options={thisYearRevenue.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xl=\"12\" className=\"mt-5\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                      Performance\n                    </h6>\n                    <h2 className=\"mb-0\">Total orders</h2>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                <div className=\"chart\">\n                  <Bar\n                    data={monthlySale.data}\n                    options={monthlySale.options}\n                  />\n                  </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Top Saling Restaurent</h3>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Store Name</th>\n                    <th scope=\"col\">Total Order</th>\n                    <th scope=\"col\">Delivered Order</th>\n                    <th scope=\"col\">Pending Order</th>\n                    <th scope=\"col\">Refund Order</th>\n                  </tr>\n                </thead>\n                { data.isLoading \n                    ? \"loading....\"\n                    : !dashboard \n                      ? \"\"\n                      : dashboard?.topSellingStores.map((item) => (\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">{ item.storeName }</th>\n                            <td>{ item.totalCount }</td>\n                            <td>{ item.deliveredOrders }</td>\n                            <td>{ item.pendingOrders }</td>\n                            <td>{ item.refundOrders }</td>\n                          </tr>\n                        </tbody>\n                      ))   \n                }\n              </Table>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">Top Buyers Users</h3>\n                  </div>\n                </Row>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">User Name</th>\n                    <th scope=\"col\">Total Order</th>\n                    <th scope=\"col\">Delivered Order</th>\n                    <th scope=\"col\">Pending Order</th>\n                    <th scope=\"col\">Refund Order</th>\n                    <th scope=\"col\">Total Amount</th>\n                  </tr>\n                </thead>\n                { data.isLoading \n                    ? \"loading....\"\n                    : !dashboard \n                      ? \"\"\n                      : dashboard?.topBuyers.map((item) => (\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\">{ item.userName }</th>\n                            <td>{ item.totalOrders }</td>\n                            <td>{ item.deliveredOrders }</td>\n                            <td>{ item.pendingOrders }</td>\n                            <td>{ item.refundOrders }</td>\n                            <td>£ { item.deliveredOrdersAmount }</td>\n                          </tr>\n                        </tbody>\n                      ))   \n                }\n              </Table>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nDashboard.layout = Admin;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}