{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport validator from 'validator'; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, FormFeedback } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updatePassword, updateProfile } from \"reducers/authSlice\";\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport { toast } from \"react-toastify\";\nimport nProgress from \"nprogress\";\n\nfunction Profile() {\n  const userDetails = useSelector(state => state.authSlice.loggedInUser);\n  const apiError = useSelector(state => state.mainSlice.failed);\n  const apiSuccess = useSelector(state => state.mainSlice.success);\n  const dispatch = useDispatch();\n  const {\n    0: name,\n    1: setName\n  } = useState(userDetails.data.name);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(userDetails.data.email);\n  const {\n    0: phone_no,\n    1: setPhoneNo\n  } = useState(userDetails.data.phone_no);\n  const {\n    0: pro_image,\n    1: setProImage\n  } = useState(userDetails.data.pro_image);\n  const {\n    0: pro_img,\n    1: setProfileImage\n  } = useState(null);\n  const {\n    0: oldPassword,\n    1: setOldPassword\n  } = useState('');\n  const {\n    0: newPassword,\n    1: setNewPassword\n  } = useState('');\n  const {\n    0: conPassword,\n    1: setConPassword\n  } = useState('');\n  const {\n    0: alertStaus,\n    1: setalertStatus\n  } = useState(false);\n  const {\n    0: alertMessage,\n    1: setalertMessage\n  } = useState('');\n  const {\n    0: alertType,\n    1: setalertType\n  } = useState('');\n  const {\n    0: profileSubmit,\n    1: setProfileSubmit\n  } = useState(false);\n  const {\n    0: passwordSubmit,\n    1: setPasswordSubmit\n  } = useState(false);\n  const {\n    0: validation,\n    1: setValidation\n  } = useState({\n    email: '',\n    name: '',\n    phone_no: ''\n  });\n  const {\n    0: passValidation,\n    1: setPassValidation\n  } = useState({\n    old_pass: '',\n    new_pass: '',\n    con_pass: ''\n  });\n  useEffect(() => {\n    setEmail(userDetails.data.email);\n    setName(userDetails.data.name);\n    setPhoneNo(userDetails.data.phone_no);\n    setProImage(userDetails.data.pro_image);\n  }, [userDetails]);\n  useEffect(() => {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        setalertStatus(true);\n        setalertMessage(apiSuccess.message);\n        setalertType('success'); // setLoader(false)\n\n        nProgress.done();\n        setTimeout(() => {\n          setalertStatus(false);\n          setalertMessage('');\n          setalertType('');\n          dispatch(unSetApiSucc());\n        }, 3000);\n      }\n    }\n  }, [apiSuccess]);\n  useEffect(() => {\n    if (apiError) {\n      if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n        setalertStatus(true);\n        setalertMessage(apiError.message);\n        setalertType('error'); // setLoader(false)\n\n        nProgress.done();\n        setTimeout(() => {\n          setalertStatus(false);\n          setalertMessage('');\n          setalertType('');\n          dispatch(unSetApiFail());\n        }, 3000);\n      }\n    }\n  }, [apiError]);\n  useEffect(() => {\n    if (validation.email == null && validation.name == null && validation.phone_no == null) {\n      setProfileSubmit(true);\n    } else {\n      setProfileSubmit(false);\n    }\n  }, [validation]);\n  useEffect(() => {\n    if (passValidation.old_pass == null && passValidation.new_pass == null && passValidation.con_pass == null) {\n      setPasswordSubmit(true);\n    } else {\n      setPasswordSubmit(false);\n    }\n  }, [passValidation]);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'email':\n        if (validator.isEmpty(e.target.value)) {\n          validation.email = {\n            error: \"Email is required\"\n          };\n          setValidation(_objectSpread({}, validation));\n        } else {\n          validation.email = null;\n          setValidation(_objectSpread({}, validation));\n\n          if (!validator.isEmail(e.target.value)) {\n            validation.email = {\n              error: \"Email must be a valid email address\"\n            };\n            setValidation(_objectSpread({}, validation));\n          } else {\n            validation.email = null;\n            setValidation(_objectSpread({}, validation));\n          }\n        }\n\n        setEmail(e.target.value);\n        break;\n\n      case 'name':\n        if (validator.isEmpty(e.target.value)) {\n          validation.name = {\n            error: \"Name is required\"\n          };\n          setValidation(_objectSpread({}, validation));\n        } else {\n          validation.name = null;\n          setValidation(_objectSpread({}, validation));\n        }\n\n        setName(e.target.value);\n        break;\n\n      case 'phone_no':\n        if (validator.isEmpty(e.target.value)) {\n          validation.phone_no = {\n            error: \"Phone no is required\"\n          };\n          setValidation(_objectSpread({}, validation));\n        } else {\n          validation.phone_no = null;\n          setValidation(_objectSpread({}, validation));\n\n          if (!validator.isMobilePhone(e.target.value, ['en-GB', 'en-IN'])) {\n            validation.phone_no = {\n              error: 'Phone number must be in a valid number'\n            };\n            setValidation(_objectSpread({}, validation));\n          } else {\n            validation.phone_no = null;\n            setValidation(_objectSpread({}, validation));\n          }\n        }\n\n        setPhoneNo(e.target.value);\n        break;\n\n      case 'pro_image':\n        setProfileImage(e.target.files[0]);\n        setProImage(URL.createObjectURL(e.target.files[0]));\n        break;\n\n      case 'old_pass':\n        if (validator.isEmpty(e.target.value)) {\n          passValidation.old_pass = {\n            error: 'Old Password is required'\n          };\n          setPassValidation(_objectSpread({}, passValidation));\n        } else {\n          passValidation.old_pass = null;\n          setPassValidation(_objectSpread({}, passValidation));\n        }\n\n        setOldPassword(e.target.value);\n        break;\n\n      case 'new_pass':\n        if (validator.isEmpty(e.target.value)) {\n          passValidation.new_pass = {\n            error: 'New Password is required'\n          };\n          setPassValidation(_objectSpread({}, passValidation));\n        } else {\n          passValidation.new_pass = null;\n          setPassValidation(_objectSpread({}, passValidation));\n        }\n\n        setNewPassword(e.target.value);\n        break;\n\n      case 'con_pass':\n        if (validator.isEmpty(e.target.value)) {\n          passValidation.con_pass = {\n            error: 'Confirm Password is required'\n          };\n          setPassValidation(_objectSpread({}, passValidation));\n        } else {\n          passValidation.con_pass = null;\n          setPassValidation(_objectSpread({}, passValidation));\n\n          if (e.target.value != newPassword) {\n            passValidation.con_pass = {\n              error: 'Confirm Password and new password must be same'\n            };\n            setPassValidation(_objectSpread({}, passValidation));\n          } else {\n            passValidation.con_pass = null;\n            setPassValidation(_objectSpread({}, passValidation));\n          }\n        }\n\n        setConPassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const validateProfile = () => {\n    if (validator.isEmpty(email)) {\n      validation.email = {\n        error: \"Email is required\"\n      };\n      setValidation(_objectSpread({}, validation));\n    } else {\n      validation.email = null;\n      setValidation(_objectSpread({}, validation));\n\n      if (!validator.isEmail(email)) {\n        validation.email = {\n          error: \"Email must be a valid email address\"\n        };\n        setValidation(_objectSpread({}, validation));\n      } else {\n        validation.email = null;\n        setValidation(_objectSpread({}, validation));\n      }\n    }\n\n    if (validator.isEmpty(name)) {\n      validation.name = {\n        error: \"Name is required\"\n      };\n      setValidation(_objectSpread({}, validation));\n    } else {\n      validation.name = null;\n      setValidation(_objectSpread({}, validation));\n    }\n\n    if (validator.isEmpty(phone_no)) {\n      validation.phone_no = {\n        error: \"Phone no is required\"\n      };\n      setValidation(_objectSpread({}, validation));\n    } else {\n      validation.phone_no = null;\n      setValidation(_objectSpread({}, validation));\n\n      if (!validator.isMobilePhone(phone_no, ['en-GB', 'en-IN'])) {\n        validation.phone_no = {\n          error: 'Phone number must be in a valid number'\n        };\n        setValidation(_objectSpread({}, validation));\n      } else {\n        validation.phone_no = null;\n        setValidation(_objectSpread({}, validation));\n      }\n    }\n  };\n\n  const profileUpdate = async e => {\n    e.preventDefault();\n    await validateProfile(); // console.log('profile submit',profileSubmit);\n\n    if (profileSubmit) {\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"name\", name);\n      formData.append(\"phone_no\", phone_no);\n      formData.append(\"pro_image\", pro_img);\n      document.getElementById('profile-image').value = '';\n      nProgress.start(); // setLoader(true)\n\n      dispatch(updateProfile(formData));\n    }\n  };\n\n  const validatePassword = () => {\n    if (validator.isEmpty(oldPassword)) {\n      passValidation.old_pass = {\n        error: 'Old Password is required'\n      };\n      setPassValidation(_objectSpread({}, passValidation));\n    } else {\n      passValidation.old_pass = null;\n      setPassValidation(_objectSpread({}, passValidation));\n    }\n\n    if (validator.isEmpty(newPassword)) {\n      passValidation.new_pass = {\n        error: 'New Password is required'\n      };\n      setPassValidation(_objectSpread({}, passValidation));\n    } else {\n      passValidation.new_pass = null;\n      setPassValidation(_objectSpread({}, passValidation));\n    }\n\n    if (validator.isEmpty(conPassword)) {\n      passValidation.con_pass = {\n        error: 'Confirm Password is required'\n      };\n      setPassValidation(_objectSpread({}, passValidation));\n    } else {\n      passValidation.con_pass = null;\n      setPassValidation(_objectSpread({}, passValidation));\n\n      if (conPassword != newPassword) {\n        passValidation.con_pass = {\n          error: 'Confirm Password and new password must be same'\n        };\n        setPassValidation(_objectSpread({}, passValidation));\n      } else {\n        passValidation.con_pass = null;\n        setPassValidation(_objectSpread({}, passValidation));\n      }\n    }\n  };\n\n  const passwordUpdate = async e => {\n    e.preventDefault();\n    await validatePassword();\n\n    if (passwordSubmit) {\n      let payload = {\n        old_pass: oldPassword,\n        new_pass: newPassword,\n        con_pass: conPassword\n      }; // setLoader(true)\n\n      nProgress.start();\n      dispatch(updatePassword(payload));\n    }\n  };\n\n  if (alertStaus) {\n    toast(alertMessage, {\n      type: alertType\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"My Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: profileUpdate,\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"heading-small text-muted mb-4\",\n                  children: \"User information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pl-lg-4\",\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"input-email\",\n                          children: \"Email address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          className: \"form-control-alternative\",\n                          id: \"input-email\",\n                          placeholder: \"demo@example.com\",\n                          type: \"email\",\n                          name: \"email\",\n                          value: email,\n                          onChange: handleChange,\n                          invalid: validation.email ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          children: validation.email && validation.email.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"input-name\",\n                          children: \"Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 367,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          className: \"form-control-alternative\",\n                          id: \"input-name\",\n                          placeholder: \"Enter Name\",\n                          type: \"text\",\n                          name: \"name\",\n                          value: name,\n                          onChange: handleChange,\n                          invalid: validation.name ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          children: validation.name && validation.name.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"input-phone-no\",\n                          children: \"Phone No\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 388,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          className: \"form-control-alternative\",\n                          id: \"input-phone-no\",\n                          placeholder: \"Enter Phone No\",\n                          type: \"text\",\n                          name: \"phone_no\",\n                          value: phone_no,\n                          onChange: handleChange,\n                          invalid: validation.phone_no ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          children: validation.phone_no && validation.phone_no.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"profile-image\",\n                          children: \"Profile Image\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 409,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          className: \"form-control-alternative\",\n                          id: \"profile-image\",\n                          type: \"file\",\n                          name: \"pro_image\",\n                          onChange: handleChange,\n                          invalid: validation.pro_image ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 412,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          children: validation.pro_image && validation.pro_image.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 420,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"2\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: pro_image,\n                        className: \"m-2\",\n                        width: \"50\",\n                        height: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 424,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"float-right\",\n                        color: \"primary\",\n                        type: \"submit\",\n                        children: \"Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"My Account Passwords\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: passwordUpdate,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pl-lg-4\",\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"input-email\",\n                          children: \"Old Password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 461,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          className: \"form-control-alternative\",\n                          id: \"input-email\",\n                          placeholder: \"Old Password\",\n                          type: \"password\",\n                          name: \"old_pass\",\n                          value: oldPassword,\n                          onChange: handleChange,\n                          invalid: passValidation.old_pass ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 467,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          children: passValidation.old_pass && passValidation.old_pass.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"input-name\",\n                          children: \"New Password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          className: \"form-control-alternative\",\n                          id: \"input-name\",\n                          placeholder: \"New Password\",\n                          type: \"password\",\n                          name: \"new_pass\",\n                          value: newPassword,\n                          onChange: handleChange,\n                          invalid: passValidation.new_pass ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 488,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          children: passValidation.new_pass && passValidation.new_pass.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 498,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"\",\n                          children: \"Confirm Password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 503,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          className: \"form-control-alternative\",\n                          id: \"input-phone-no\",\n                          placeholder: \"Confirm Password\",\n                          type: \"password\",\n                          name: \"con_pass\",\n                          value: conPassword,\n                          onChange: handleChange,\n                          invalid: passValidation.con_pass ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 509,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          children: passValidation.con_pass && passValidation.con_pass.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 519,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 502,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"float-right\",\n                        color: \"primary\",\n                        type: \"submit\",\n                        children: \"Update Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nProfile.layout = Admin;\nexport default Profile;","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/profile.js"],"names":["React","useEffect","useState","validator","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","FormFeedback","Admin","UserHeader","useDispatch","useSelector","updatePassword","updateProfile","unSetApiFail","unSetApiSucc","toast","nProgress","Profile","userDetails","state","authSlice","loggedInUser","apiError","mainSlice","failed","apiSuccess","success","dispatch","name","setName","data","email","setEmail","phone_no","setPhoneNo","pro_image","setProImage","pro_img","setProfileImage","oldPassword","setOldPassword","newPassword","setNewPassword","conPassword","setConPassword","alertStaus","setalertStatus","alertMessage","setalertMessage","alertType","setalertType","profileSubmit","setProfileSubmit","passwordSubmit","setPasswordSubmit","validation","setValidation","passValidation","setPassValidation","old_pass","new_pass","con_pass","statusCode","message","done","setTimeout","handleChange","e","target","isEmpty","value","error","isEmail","isMobilePhone","files","URL","createObjectURL","validateProfile","profileUpdate","preventDefault","formData","FormData","append","document","getElementById","start","validatePassword","passwordUpdate","payload","type","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport validator from 'validator';\n// reactstrap components\nimport {\n  Button,Card,CardHeader,CardBody,FormGroup,Form,Input,Container,Row,Col,FormFeedback,\n} from \"reactstrap\";\n// layout for this page\nimport Admin from \"layouts/Admin.js\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updatePassword, updateProfile } from \"reducers/authSlice\";\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport { toast } from \"react-toastify\";\nimport nProgress from \"nprogress\";\n\nfunction Profile() {\n  const userDetails = useSelector(state=> state.authSlice.loggedInUser);\n  const apiError = useSelector(state=> state.mainSlice.failed)\n  const apiSuccess = useSelector(state=> state.mainSlice.success)\n  const dispatch = useDispatch();\n  const [name,setName]=useState(userDetails.data.name)\n  const [email,setEmail]=useState(userDetails.data.email)\n  const [phone_no,setPhoneNo]=useState(userDetails.data.phone_no)\n  const [pro_image,setProImage]=useState(userDetails.data.pro_image)\n  const [pro_img,setProfileImage]=useState(null)\n  const [oldPassword,setOldPassword]=useState('')\n  const [newPassword,setNewPassword]=useState('')\n  const [conPassword,setConPassword]=useState('')\n  const [alertStaus,setalertStatus]=useState(false)\n  const [alertMessage,setalertMessage]=useState('')\n  const [alertType,setalertType]=useState('')\n  const [profileSubmit, setProfileSubmit] = useState(false)\n  const [passwordSubmit, setPasswordSubmit] = useState(false)\n  const [validation, setValidation] = useState({\n    email:'',\n    name:'',\n    phone_no:''\n  })\n  const [passValidation, setPassValidation] = useState({\n    old_pass:'',\n    new_pass:'',\n    con_pass:''\n  })\n\n  useEffect(()=>{\n    setEmail(userDetails.data.email)\n    setName(userDetails.data.name)\n    setPhoneNo(userDetails.data.phone_no)\n    setProImage(userDetails.data.pro_image)\n  },[userDetails])\n\n  useEffect(()=>{\n    if(apiSuccess){\n      if(apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300){\n        setalertStatus(true)\n        setalertMessage(apiSuccess.message);\n        setalertType('success')\n        // setLoader(false)\n        nProgress.done()\n        setTimeout(() => {\n          setalertStatus(false)\n          setalertMessage('')\n          setalertType('')\n          dispatch(unSetApiSucc())\n        }, 3000);\n      }\n    }\n  },[apiSuccess])\n\n  useEffect(()=>{\n    if(apiError){\n      if(apiError.statusCode >= 400 && apiError.statusCode <= 500){\n        setalertStatus(true)\n        setalertMessage(apiError.message);\n        setalertType('error')\n        // setLoader(false)\n        nProgress.done()\n        setTimeout(() => {\n          setalertStatus(false)\n          setalertMessage('')\n          setalertType('')\n          dispatch(unSetApiFail())\n        }, 3000);\n      }\n    }\n  },[apiError])\n\n  useEffect(() => {\n    if (validation.email==null && validation.name==null && validation.phone_no==null) {\n      setProfileSubmit(true);\n    } else {\n      setProfileSubmit(false);\n    }\n  }, [validation])\n\n  useEffect(() => {\n    if (passValidation.old_pass==null && passValidation.new_pass==null && passValidation.con_pass==null) {\n      setPasswordSubmit(true);\n    } else {\n      setPasswordSubmit(false);\n    }\n  }, [passValidation])\n\n\n  const handleChange = (e)=>{\n    switch (e.target.name) {\n      case 'email':\n        if (validator.isEmpty(e.target.value)) {\n          validation.email={\n            error:\"Email is required\"\n          }\n          setValidation({...validation})\n        }else{\n          validation.email=null\n          setValidation({...validation})\n          if (!validator.isEmail(e.target.value)) {\n            validation.email={\n              error:\"Email must be a valid email address\"\n            }\n            setValidation({...validation})\n          }else{\n            validation.email=null\n            setValidation({...validation})\n          }\n        }\n        setEmail(e.target.value)\n        break;\n      case 'name':\n        if (validator.isEmpty(e.target.value)) {\n          validation.name={\n            error:\"Name is required\"\n          }\n          setValidation({...validation})\n        }else{\n          validation.name=null\n          setValidation({...validation})\n        }\n        setName(e.target.value)\n        break;\n      case 'phone_no':\n        if (validator.isEmpty(e.target.value)) {\n          validation.phone_no={\n            error:\"Phone no is required\"\n          }\n          setValidation({...validation})\n        }else{\n          validation.phone_no=null\n          setValidation({...validation})\n          if (!validator.isMobilePhone(e.target.value,['en-GB','en-IN'])) {\n            validation.phone_no={\n              error:'Phone number must be in a valid number'\n            }\n            setValidation({...validation})\n          }else{\n            validation.phone_no=null\n            setValidation({...validation})\n          }\n        }\n        setPhoneNo(e.target.value)\n        break;\n      case 'pro_image':\n        setProfileImage(e.target.files[0])\n        setProImage(URL.createObjectURL(e.target.files[0]))\n        break;\n      case 'old_pass':\n        if (validator.isEmpty(e.target.value)) {\n          passValidation.old_pass={error:'Old Password is required'};\n          setPassValidation({...passValidation})\n        } else {\n          passValidation.old_pass=null;\n          setPassValidation({...passValidation})\n        }\n        setOldPassword(e.target.value)\n        break;\n      case 'new_pass':\n        if (validator.isEmpty(e.target.value)) {\n          passValidation.new_pass={error:'New Password is required'};\n          setPassValidation({...passValidation})\n        } else {\n          passValidation.new_pass=null;\n          setPassValidation({...passValidation})\n        }\n        setNewPassword(e.target.value)\n        break;\n      case 'con_pass':\n        if (validator.isEmpty(e.target.value)) {\n          passValidation.con_pass={error:'Confirm Password is required'};\n          setPassValidation({...passValidation})\n        } else {\n          passValidation.con_pass=null;\n          setPassValidation({...passValidation})\n          if (e.target.value != newPassword) {\n            passValidation.con_pass={error:'Confirm Password and new password must be same'};\n            setPassValidation({...passValidation})\n          } else {\n            passValidation.con_pass=null;\n            setPassValidation({...passValidation})\n          }\n        }\n        setConPassword(e.target.value)\n        break;\n      default:\n        break;\n    }\n  }\n\n  const validateProfile=()=>{\n    if (validator.isEmpty(email)) {\n      validation.email={\n        error:\"Email is required\"\n      }\n      setValidation({...validation})\n    }else{\n      validation.email=null\n      setValidation({...validation})\n      if (!validator.isEmail(email)) {\n        validation.email={\n          error:\"Email must be a valid email address\"\n        }\n        setValidation({...validation})\n      }else{\n        validation.email=null\n        setValidation({...validation})\n      }\n    }\n    if (validator.isEmpty(name)) {\n      validation.name={\n        error:\"Name is required\"\n      }\n      setValidation({...validation})\n    }else{\n      validation.name=null\n      setValidation({...validation})\n    }\n    if (validator.isEmpty(phone_no)) {\n      validation.phone_no={\n        error:\"Phone no is required\"\n      }\n      setValidation({...validation})\n    }else{\n      validation.phone_no=null\n      setValidation({...validation})\n      if (!validator.isMobilePhone(phone_no,['en-GB','en-IN'])) {\n        validation.phone_no={\n          error:'Phone number must be in a valid number'\n        }\n        setValidation({...validation})\n      }else{\n        validation.phone_no=null\n        setValidation({...validation})\n      }\n    }\n  }\n\n  const profileUpdate= async (e)=>{\n    e.preventDefault()\n    await validateProfile()\n    // console.log('profile submit',profileSubmit);\n    if (profileSubmit) {\n      let formData =new FormData()\n      formData.append(\"email\",email)\n      formData.append(\"name\",name)\n      formData.append(\"phone_no\",phone_no)\n      formData.append(\"pro_image\",pro_img)\n      document.getElementById('profile-image').value=''\n      nProgress.start()\n      // setLoader(true)\n      dispatch(updateProfile(formData))\n    }\n  }\n\n  const validatePassword=()=>{\n    if (validator.isEmpty(oldPassword)) {\n      passValidation.old_pass={error:'Old Password is required'};\n      setPassValidation({...passValidation})\n    } else {\n      passValidation.old_pass=null;\n      setPassValidation({...passValidation})\n    }\n    if (validator.isEmpty(newPassword)) {\n      passValidation.new_pass={error:'New Password is required'};\n      setPassValidation({...passValidation})\n    } else {\n      passValidation.new_pass=null;\n      setPassValidation({...passValidation})\n    }\n    if (validator.isEmpty(conPassword)) {\n      passValidation.con_pass={error:'Confirm Password is required'};\n      setPassValidation({...passValidation})\n    } else {\n      passValidation.con_pass=null;\n      setPassValidation({...passValidation})\n      if (conPassword != newPassword) {\n        passValidation.con_pass={error:'Confirm Password and new password must be same'};\n        setPassValidation({...passValidation})\n      } else {\n        passValidation.con_pass=null;\n        setPassValidation({...passValidation})\n      }\n    }\n  }\n  const passwordUpdate=async (e)=>{\n    e.preventDefault();\n    await validatePassword()\n    if (passwordSubmit) {\n     let payload={\n        old_pass:oldPassword,\n        new_pass:newPassword,\n        con_pass:conPassword,\n      }\n      // setLoader(true)\n      nProgress.start()\n      dispatch(updatePassword(payload))\n    }\n\n  }\n  if (alertStaus) {\n    toast(alertMessage,{\n      type:alertType\n    });\n  }\n  return (\n    <>\n      <UserHeader />\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"order-xl-1\" xl=\"12\">\n            <Card className=\"bg-secondary shadow\">\n              <CardHeader className=\"bg-white border-0\">\n                <Row className=\"align-items-center\">\n                  <Col xs=\"8\">\n                    <h3 className=\"mb-0\">My Account</h3>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <Form onSubmit={profileUpdate}>\n                  <h6 className=\"heading-small text-muted mb-4\">\n                    User information\n                  </h6>\n                  <div className=\"pl-lg-4\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <label\n                            className=\"form-control-label\"\n                            htmlFor=\"input-email\"\n                          >\n                            Email address\n                          </label>\n                          <Input\n                            className=\"form-control-alternative\"\n                            id=\"input-email\"\n                            placeholder=\"demo@example.com\"\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleChange}\n                            invalid={ validation.email ? true : false}\n                          />\n                          <FormFeedback >{validation.email && validation.email.error }</FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <label\n                            className=\"form-control-label\"\n                            htmlFor=\"input-name\"\n                          >\n                            Name\n                          </label>\n                          <Input\n                            className=\"form-control-alternative\"\n                            id=\"input-name\"\n                            placeholder=\"Enter Name\"\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            onChange={handleChange}\n                            invalid={ validation.name ? true : false}\n                          />\n                          <FormFeedback >{validation.name && validation.name.error }</FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <label\n                            className=\"form-control-label\"\n                            htmlFor=\"input-phone-no\"\n                          >\n                            Phone No\n                          </label>\n                          <Input\n                            className=\"form-control-alternative\"\n                            id=\"input-phone-no\"\n                            placeholder=\"Enter Phone No\"\n                            type=\"text\"\n                            name=\"phone_no\"\n                            value={phone_no}\n                            onChange={handleChange}\n                            invalid={ validation.phone_no ? true : false}\n                          />\n                          <FormFeedback >{validation.phone_no && validation.phone_no.error }</FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"4\">\n                        <FormGroup>\n                          <label className=\"form-control-label\" htmlFor=\"profile-image\">\n                            Profile Image\n                          </label>\n                          <Input\n                            className=\"form-control-alternative\"\n                            id=\"profile-image\"\n                            type=\"file\"\n                            name=\"pro_image\"\n                            onChange={handleChange}\n                            invalid={ validation.pro_image ? true : false}\n                          />\n                          <FormFeedback >{validation.pro_image && validation.pro_image.error }</FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"2\">\n                        <img \n                          src={pro_image}\n                          className=\"m-2\"\n                          width=\"50\"\n                          height=\"50\"\n                        />\n                      </Col>\n                      <Col lg=\"12\">\n                      <Button\n                        className=\"float-right\"\n                        color=\"primary\"\n                        type=\"submit\"\n                      >\n                        Update\n                      </Button>\n                      </Col>\n                    </Row>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col className=\"order-xl-1\" xl=\"12\">\n            <Card className=\"bg-secondary shadow\">\n              <CardHeader className=\"bg-white border-0\">\n                <Row className=\"align-items-center\">\n                  <Col xs=\"8\">\n                    <h3 className=\"mb-0\">My Account Passwords</h3>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <Form onSubmit={passwordUpdate}>\n                  <div className=\"pl-lg-4\">\n                    <Row>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <label\n                            className=\"form-control-label\"\n                            htmlFor=\"input-email\"\n                          >\n                            Old Password\n                          </label>\n                          <Input\n                            className=\"form-control-alternative\"\n                            id=\"input-email\"\n                            placeholder=\"Old Password\"\n                            type=\"password\"\n                            name=\"old_pass\"\n                            value={oldPassword}\n                            onChange={handleChange}\n                            invalid={ passValidation.old_pass ? true : false}\n                          />\n                          <FormFeedback >{passValidation.old_pass && passValidation.old_pass.error }</FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <label\n                            className=\"form-control-label\"\n                            htmlFor=\"input-name\"\n                          >\n                            New Password\n                          </label>\n                          <Input\n                            className=\"form-control-alternative\"\n                            id=\"input-name\"\n                            placeholder=\"New Password\"\n                            type=\"password\"\n                            name=\"new_pass\"\n                            value={newPassword}\n                            onChange={handleChange}\n                            invalid={ passValidation.new_pass ? true : false}\n                          />\n                          <FormFeedback >{passValidation.new_pass && passValidation.new_pass.error }</FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <label\n                            className=\"form-control-label\"\n                            htmlFor=\"\"\n                          >\n                            Confirm Password\n                          </label>\n                          <Input\n                            className=\"form-control-alternative\"\n                            id=\"input-phone-no\"\n                            placeholder=\"Confirm Password\"\n                            type=\"password\"\n                            name=\"con_pass\"\n                            value={conPassword}\n                            onChange={handleChange}\n                            invalid={ passValidation.con_pass ? true : false}\n                          />\n                          <FormFeedback >{passValidation.con_pass && passValidation.con_pass.error }</FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col lg=\"12\">\n                      <Button\n                        className=\"float-right\"\n                        color=\"primary\"\n                        type=\"submit\"\n                      >\n                        Update Password\n                      </Button>\n                      </Col>\n                    </Row>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\nProfile.layout = Admin;\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}