{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from 'next/router'; // reactstrap components\n\nimport { Button, Card, Alert, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Label } from \"reactstrap\"; // layout for this page\n\nimport Auth from \"layouts/Auth.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPassword } from \"reducers/authSlice\";\nimport { unSetApiSucc, unSetApiFail } from \"reducers/mainSlice\";\nimport nProgress from \"nprogress\";\n\nfunction ResetPassword() {\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      newPassword = _useState[0],\n      setNewPassword = _useState[1];\n\n  var _useState2 = useState(''),\n      conPassword = _useState2[0],\n      setConPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      alertStaus = _useState3[0],\n      setalertStatus = _useState3[1];\n\n  var _useState4 = useState(''),\n      alertMessage = _useState4[0],\n      setalertMessage = _useState4[1];\n\n  var token = router.query.token;\n  var apiError = useSelector(function (state) {\n    return state.mainSlice.failed;\n  });\n  var apiSuccess = useSelector(function (state) {\n    return state.mainSlice.success;\n  });\n\n  var handleChange = function handleChange(e) {\n    if (e.target.name === 'new_password') {\n      setNewPassword(e.target.value);\n    }\n\n    if (e.target.name === 'con_password') {\n      setConPassword(e.target.value);\n    }\n  };\n\n  var formSubmit = function formSubmit(e) {\n    e.preventDefault();\n    var payload = {\n      \"token\": token,\n      \"new_pass\": newPassword,\n      \"con_pass\": conPassword\n    };\n    dispatch(resetPassword(payload));\n    nProgress.start();\n  }; // use effect for api error \n\n\n  useEffect(function () {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode == 200) {\n        dispatch(unSetApiSucc());\n        nProgress.done();\n        router.push('/login');\n      }\n    }\n  }, [apiSuccess]);\n  useEffect(function () {\n    if (apiError) {\n      if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n        setalertStatus(true);\n        setalertMessage(apiError.message);\n        dispatch(unSetApiFail());\n        nProgress.done();\n        setTimeout(function () {\n          setalertStatus(false);\n          setalertMessage('');\n        }, 3000);\n      }\n    }\n  }, [apiError]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Card, {\n      className: \"border-0\",\n      children: /*#__PURE__*/_jsxs(CardBody, {\n        className: \"px-lg-5 py-lg-5\",\n        children: [/*#__PURE__*/_jsx(Alert, {\n          isOpen: alertStaus,\n          color: \"danger\",\n          children: alertMessage\n        }), /*#__PURE__*/_jsxs(Form, {\n          role: \"form\",\n          children: [/*#__PURE__*/_jsxs(FormGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsx(Label, {\n              \"for\": \"new_password\",\n              children: \"New Password\"\n            }), /*#__PURE__*/_jsxs(InputGroup, {\n              className: \"input-group-alternative\",\n              children: [/*#__PURE__*/_jsx(InputGroupAddon, {\n                addonType: \"prepend\",\n                children: /*#__PURE__*/_jsx(InputGroupText, {\n                  children: /*#__PURE__*/_jsx(\"i\", {\n                    className: \"ni ni-lock-circle-open\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Input, {\n                id: \"new_password\",\n                placeholder: \"New Password\",\n                type: \"password\",\n                name: \"new_password\",\n                onChange: handleChange\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(Label, {\n              \"for\": \"con_password\",\n              children: \"Confirm Password\"\n            }), /*#__PURE__*/_jsxs(InputGroup, {\n              className: \"input-group-alternative\",\n              children: [/*#__PURE__*/_jsx(InputGroupAddon, {\n                addonType: \"prepend\",\n                children: /*#__PURE__*/_jsx(InputGroupText, {\n                  children: /*#__PURE__*/_jsx(\"i\", {\n                    className: \"ni ni-lock-circle-open\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Input, {\n                id: \"con_password\",\n                placeholder: \"Confirm Password\",\n                type: \"password\",\n                name: \"con_password\",\n                onChange: handleChange\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"d-flex align-items-center justify-content-between\",\n            children: /*#__PURE__*/_jsx(Button, {\n              className: \"\",\n              color: \"theame-btn\",\n              type: \"submit\",\n              onClick: formSubmit,\n              children: \"Reset Password\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n}\n\nResetPassword.layout = Auth;\nexport default ResetPassword;","map":null,"metadata":{},"sourceType":"module"}