{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst cmsSlice = createSlice({\n  name: \"Cms\",\n  initialState: {\n    list: {\n      isLoading: true,\n      data: []\n    },\n    detail: {\n      title: \"\",\n      slug: \"\",\n      content: \"\"\n    },\n    dashboardList: {\n      isLoading: true,\n      data: []\n    }\n  },\n  reducers: {\n    listing: (state, action) => {\n      state.list = {\n        isLoading: false,\n        data: action.payload.data\n      };\n    },\n    setDetail: (state, action) => {\n      state.detail = action.payload.data;\n    },\n    unSetDetail: (state, action) => {\n      state.detail = null;\n    },\n    dashboard: (state, action) => {\n      state.dashboardList = {\n        isLoading: false,\n        data: action.payload.data\n      };\n    }\n  }\n});\nexport default cmsSlice.reducer;\nconst {\n  listing,\n  setDetail,\n  unSetDetail,\n  dashboard\n} = cmsSlice.actions;\nexport const getList = () => async dispatch => {\n  try {\n    const res = await callApi('post', '/cms/list', {});\n    dispatch(listing(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getDetail = value => async dispatch => {\n  try {\n    const res = await callApi('post', '/cms/detail', value);\n    dispatch(setDetail(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const resetDetail = () => async dispatch => {\n  dispatch(unSetDetail());\n};\nexport const updateCms = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/cms/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getDashboardData = () => async dispatch => {\n  try {\n    const res = await callApi(\"post\", \"/cms/dashboard\", {});\n    console.log(\"response api dashboard\", res.data);\n    dispatch(dashboard(res.data));\n  } catch (error) {\n    console.log(\"dashboard api error\", error);\n    dispatch(apiFail(error));\n  }\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/cmsSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","cmsSlice","name","initialState","list","isLoading","data","detail","title","slug","content","dashboardList","reducers","listing","state","action","payload","setDetail","unSetDetail","dashboard","reducer","actions","getList","dispatch","res","e","getDetail","value","resetDetail","updateCms","error","getDashboardData","console","log"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\n\nconst cmsSlice = createSlice({\n    name:\"Cms\",\n    initialState:{\n        list:{\n            isLoading:true,\n            data:[]\n        },\n        detail:{\n            title:\"\",\n            slug:\"\",\n            content:\"\"\n        },\n        dashboardList:{\n            isLoading:true,\n            data:[]\n        },\n    },\n    reducers:{\n        listing:(state,action)=>{\n            state.list = {\n                isLoading:false,\n                data: action.payload.data\n            }\n        },\n        setDetail:(state,action) =>{\n            state.detail = action.payload.data\n        },\n        unSetDetail:(state,action)=>{\n            state.detail = null\n        },\n        dashboard:(state,action)=>{\n            state.dashboardList = {\n                isLoading:false,\n                data:action.payload.data\n            }\n        }\n    }\n})\n\nexport default cmsSlice.reducer\nconst { listing,setDetail,unSetDetail, dashboard } = cmsSlice.actions\n\nexport const getList = () => async dispatch =>{\n    try {\n        const res = await callApi('post','/cms/list',{})\n        dispatch(listing(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const getDetail = (value) => async dispatch =>{\n    try {\n        const res = await callApi('post','/cms/detail',value)\n        dispatch(setDetail(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const resetDetail = () => async dispatch => {\n    dispatch(unSetDetail())\n};\nexport const updateCms = (value) => async dispatch => {\n  try {\n      let res = await callApi('post','/cms/update',value)\n      dispatch(apiSuccess(res.data))\n  } catch (error) {\n      dispatch(apiFail(error))\n  }\n};\nexport const getDashboardData = () => async dispatch => {\n   try {\n      const res = await callApi(\"post\", \"/cms/dashboard\", {})\n      console.log(\"response api dashboard\",res.data);\n        dispatch(dashboard(res.data))\n   } catch (error) {\n       console.log(\"dashboard api error\", error);\n        dispatch(apiFail(error))\n   }  \n};\n\n"]},"metadata":{},"sourceType":"module"}