{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/Form/FormInputCom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FormFeedback, Input } from \"reactstrap\";\nexport default function FormInputCom(props) {\n  _s();\n\n  var _useState = useState(''),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  var _useState2 = useState(''),\n      validation = _useState2[0],\n      setValidation = _useState2[1]; // const [submitValidate, setsubmitValidate] = useState(false)\n\n\n  var isDefault = false;\n\n  if ('isDefault' in props) {\n    isDefault = props.isDefault;\n  }\n\n  useEffect(function () {\n    setFormData(props.defValue);\n\n    if (props.defValue != '') {\n      validateData(props.defValue); // setValidation(null)\n    }\n  }, [props.defValue]);\n\n  var validateData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (props.validator.length == 0) {\n                setValidation(null);\n              } else {\n                props.validator.some(function (data) {\n                  var option = [];\n\n                  if ('valOption' in data) {\n                    option = data.valOption;\n                  }\n\n                  if ('isOptional' in data) {\n                    if (data.isNot) {\n                      if (value != '' && value != null && !data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    } else {\n                      if (value != '' && value != null && data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    }\n                  } else {\n                    if (data.isNot) {\n                      if (!data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    } else {\n                      if (data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    }\n                  }\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function validateData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setFormData(e.target.value);\n              _context2.next = 3;\n              return validateData(e.target.value);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChange(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (validation !== '') {\n      var rowReturnData = {\n        key: props.name,\n        error: validation,\n        data: formData\n      };\n      props.getValue(rowReturnData);\n    }\n  }, [validation, formData]);\n  useEffect(function () {\n    if (props.submitValidate) {\n      validateData(formData);\n    } // setsubmitValidate(props.submitValidate)\n\n  }, [props.submitValidate]); // useEffect(() => {\n  //     if (submitValidate) {\n  //         // console.log('true');\n  //         validateData(formData)\n  //     }\n  // }, [submitValidate])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      className: \"form-control-alternative\",\n      type: props.type,\n      name: props.name,\n      placeholder: props.placeholder,\n      value: formData,\n      disabled: isDefault,\n      onChange: handleChange,\n      invalid: validation ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n      children: validation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FormInputCom, \"xM3+8U5xaf2jE6SFjY7ei+429Dk=\");\n\n_c = FormInputCom;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInputCom\");","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/Form/FormInputCom.js"],"names":["React","useEffect","useState","FormFeedback","Input","FormInputCom","props","formData","setFormData","validation","setValidation","isDefault","defValue","validateData","value","validator","length","some","data","option","valOption","isNot","property","message","handleChange","e","target","rowReturnData","key","name","error","getValue","submitValidate","type","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react'\nimport { FormFeedback, Input, } from \"reactstrap\";\nexport default function FormInputCom(props) {\n    \n    const [formData, setFormData] = useState('')\n    const [validation, setValidation] = useState('')\n    // const [submitValidate, setsubmitValidate] = useState(false)\n    let isDefault= false;\n    if ('isDefault' in props) {\n        isDefault= props.isDefault\n    }\n    useEffect(() => {\n        setFormData(props.defValue)\n        if (props.defValue!='') {\n            validateData(props.defValue)\n            // setValidation(null)\n        }\n    },[props.defValue] )\n    const validateData= async (value)=>{\n        if (props.validator.length==0) {\n            setValidation(null)\n        }else{\n            props.validator.some((data)=>{\n                let option=[]\n                if('valOption' in data)\n                {\n                    option = data.valOption\n                }\n                if ('isOptional' in data) { \n                    if (data.isNot) {\n                        if((value !='' && value != null) && !data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }else{\n                        if((value !='' && value != null) && data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }\n                }else{\n                    if (data.isNot) {\n                        if(!data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }else{\n                        if(data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }\n                }\n            })\n        }\n    }\n    const handleChange = async (e)=>{\n        setFormData(e.target.value)\n        await validateData(e.target.value)\n    }\n    useEffect(() => {\n        if (validation !=='') {\n            let rowReturnData={\n                key:props.name,\n                error:validation,\n                data:formData\n            }\n            props.getValue(rowReturnData)  \n        }\n    }, [validation,formData])\n\n    useEffect(() => {\n        if (props.submitValidate) {\n            validateData(formData)\n        }\n        // setsubmitValidate(props.submitValidate)\n    }, [props.submitValidate])\n    // useEffect(() => {\n    //     if (submitValidate) {\n    //         // console.log('true');\n    //         validateData(formData)\n    //     }\n    // }, [submitValidate])\n    return (\n            <>\n                <Input\n                    className=\"form-control-alternative\"\n                    type={props.type}\n                    name={props.name}\n                    placeholder={props.placeholder}\n                    value={formData}\n                    disabled={isDefault}\n                    onChange={handleChange}\n                    invalid={ validation ? true : false}\n                />\n                <FormFeedback >\n                    {validation}\n                </FormFeedback>\n            </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}