{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Admin from \"layouts/Admin\";\nimport UserHeader from \"components/Headers/UserHeader\";\nimport Link from 'next/link';\nimport { Badge, Button, Card, CardBody, CardFooter, CardHeader, Col, Container, DropdownItem, DropdownMenu, DropdownToggle, Row, Table, UncontrolledDropdown } from \"reactstrap\";\nimport PaginationCom from 'components/Pagination/PaginationServer';\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from 'next/router';\nimport Loader from \"components/ApiLoader/loader\";\nimport { getItemsList, unSetItemDetails } from \"reducers/menuSlice\";\nimport { badgesColor, badgesText, callApi } from \"../../../../Helper/helper\";\n\nfunction Index() {\n  // const MySwal = withReactContent(Swal)\n  const router = useRouter();\n  const {\n    store,\n    item\n  } = router.query;\n  const dispatch = useDispatch();\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: itemsList,\n    1: setItemsList\n  } = useState();\n  const {\n    0: paginationData,\n    1: setPaginationData\n  } = useState();\n  let getMenuItemsList = useSelector(state => state.menuSlice.items);\n  useEffect(() => {\n    setLoader(true);\n\n    if (item != undefined) {\n      dispatch(getItemsList({\n        category: item,\n        storeId: store\n      }));\n      dispatch(unSetItemDetails());\n    }\n  }, [item]);\n  useEffect(() => {\n    if (getMenuItemsList) {\n      let pagData = {\n        totalDocs: getMenuItemsList.totalDocs,\n        limit: getMenuItemsList.limit,\n        page: getMenuItemsList.page,\n        totalPages: getMenuItemsList.totalPages,\n        hasPrevPage: getMenuItemsList.hasPrevPage,\n        hasNextPage: getMenuItemsList.hasNextPage,\n        prevPage: getMenuItemsList.prevPage,\n        nextPage: getMenuItemsList.nextPage\n      };\n      setPaginationData(pagData);\n      setItemsList(getMenuItemsList.docs);\n      setLoader(false);\n    }\n  }, [getMenuItemsList]);\n\n  const pageChange = data => {\n    setLoader(true);\n    dispatch(getItemsList({\n      category: item\n    }, data));\n  };\n\n  const {\n    0: isToggled,\n    1: setIsToggled\n  } = useState(true);\n\n  const toggleTrueFalse = () => {\n    setIsToggled(!isToggled);\n  };\n\n  const updateItemStatus = e => {\n    // e.preventDefault()\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You want to change this status\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes'\n    }).then(async result => {\n      if (result.isConfirmed) {\n        try {\n          let res = await callApi('post', '/menu/item/status', {\n            itemId: e.target.id\n          });\n\n          if (res.data.data) {\n            e.target.classList.add('badge-success');\n            e.target.classList.remove('badge-danger');\n            e.target.innerText = 'Active';\n          } else {\n            e.target.classList.add('badge-danger');\n            e.target.classList.remove('badge-success');\n            e.target.innerText = 'Deactive';\n          }\n\n          Swal.fire({\n            icon: 'success',\n            title: 'Status Update',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        } catch (error) {\n          Swal.fire({\n            icon: 'danger',\n            title: 'Somthing went wrong',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      }\n    });\n  };\n\n  const deleteItem = e => {\n    e.preventDefault();\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#aa2323',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(async result => {\n      if (result.isConfirmed) {\n        try {\n          // console.log('delete target',e.target);\n          // console.log('delete parent',e.target.closest('tr'));\n          // console.log('delete value',e.target.getAttribute('value'));\n          let res = await callApi('post', '/menu/item/delete', {\n            itemId: e.target.getAttribute('value')\n          }); // console.log('res',res.data.data);\n\n          if (res.data.statusCode == 200) {\n            document.getElementById(e.target.getAttribute('value')).remove();\n            Swal.fire({\n              icon: 'success',\n              title: 'Status Update',\n              showConfirmButton: false,\n              timer: 1500\n            });\n          }\n        } catch (error) {\n          Swal.fire({\n            icon: 'error',\n            title: error.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(UserHeader, {}), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsxs(Row, {\n                className: \"align-items-center\",\n                children: [/*#__PURE__*/_jsx(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsx(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Item's List\"\n                  })\n                }), /*#__PURE__*/_jsx(Col, {\n                  xs: \"4\",\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: `/vendor/${store}/${item}/create`,\n                    children: /*#__PURE__*/_jsx(Button, {\n                      color: \"success\",\n                      children: \"Create Item\"\n                    })\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsxs(Table, {\n                className: \"align-items-center table-flush\",\n                responsive: true,\n                children: [/*#__PURE__*/_jsx(\"thead\", {\n                  className: \"thead-light\",\n                  children: /*#__PURE__*/_jsxs(\"tr\", {\n                    children: [/*#__PURE__*/_jsx(\"th\", {\n                      scope: \"col\",\n                      children: \"Age Restriction\"\n                    }), /*#__PURE__*/_jsx(\"th\", {\n                      scope: \"col\",\n                      children: \"Title\"\n                    }), /*#__PURE__*/_jsx(\"th\", {\n                      scope: \"col\",\n                      children: \"Is Customize\"\n                    }), /*#__PURE__*/_jsx(\"th\", {\n                      scope: \"col\",\n                      children: \"Badge\"\n                    }), /*#__PURE__*/_jsx(\"th\", {\n                      scope: \"col\",\n                      children: \"Image\"\n                    }), /*#__PURE__*/_jsx(\"th\", {\n                      scope: \"col\",\n                      children: \"Status\"\n                    }), /*#__PURE__*/_jsx(\"th\", {\n                      scope: \"col\"\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(\"tbody\", {\n                  children: loader ? /*#__PURE__*/_jsx(Loader, {}) : itemsList && itemsList.length > 0 ? itemsList.map(data => /*#__PURE__*/_jsxs(\"tr\", {\n                    id: data._id,\n                    children: [/*#__PURE__*/_jsx(\"td\", {\n                      children: /*#__PURE__*/_jsx(Badge, {\n                        color: data.age_res ? 'success' : 'danger',\n                        children: data.age_res ? 'Yes' : 'No'\n                      })\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: data.title\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: /*#__PURE__*/_jsx(Badge, {\n                        color: data.is_customize ? 'success' : 'danger',\n                        children: data.is_customize ? 'Yes' : 'No'\n                      })\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: /*#__PURE__*/_jsx(Badge, {\n                        style: {\n                          background: `${badgesColor(data.badge)}`\n                        },\n                        children: /*#__PURE__*/_jsx(\"span\", {\n                          style: {\n                            fontWeight: \"900\",\n                            fontSize: \"12px\",\n                            color: \"white\"\n                          },\n                          children: badgesText(data.badge)\n                        })\n                      })\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: /*#__PURE__*/_jsx(\"img\", {\n                        src: data.item_img,\n                        width: \"50\"\n                      })\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: /*#__PURE__*/_jsx(Badge, {\n                        role: \"button\",\n                        id: data._id,\n                        onClick: updateItemStatus,\n                        color: data.status ? 'success' : 'danger',\n                        children: data.status ? 'Active' : 'Deactive'\n                      })\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      className: \"text-right\",\n                      children: /*#__PURE__*/_jsxs(UncontrolledDropdown, {\n                        children: [/*#__PURE__*/_jsx(DropdownToggle, {\n                          className: \"btn-icon-only text-light\",\n                          href: \"#pablo\",\n                          role: \"button\",\n                          size: \"sm\",\n                          color: \"\",\n                          onClick: e => e.preventDefault(),\n                          children: /*#__PURE__*/_jsx(\"i\", {\n                            className: \"fas fa-ellipsis-v\"\n                          })\n                        }), /*#__PURE__*/_jsxs(DropdownMenu, {\n                          className: \"dropdown-menu-arrow\",\n                          children: [/*#__PURE__*/_jsx(DropdownItem, {\n                            onClick: e => {\n                              e.preventDefault();\n                              router.push(`/vendor/${store}/${item}/edit/${data._id}`);\n                            },\n                            children: \"Edit\"\n                          }), data.is_customize ? /*#__PURE__*/_jsx(DropdownItem, {\n                            onClick: e => {\n                              e.preventDefault();\n                              router.push(`/vendor/${store}/${item}/${data._id}`);\n                            },\n                            children: \"Customize\"\n                          }) : '']\n                        })]\n                      })\n                    })]\n                  }, data._id)) : /*#__PURE__*/_jsx(\"tr\", {\n                    children: /*#__PURE__*/_jsx(\"td\", {\n                      colSpan: \"7\",\n                      children: \"no data found\"\n                    })\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsxs(CardFooter, {\n              className: \"py-4\",\n              children: [/*#__PURE__*/_jsx(\"nav\", {\n                \"aria-label\": \"...\",\n                className: \"float-left\",\n                children: paginationData ? /*#__PURE__*/_jsx(PaginationCom, {\n                  data: paginationData,\n                  pagFun: pageChange\n                }) : null\n              }), /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsx(Button, {\n                  className: \"float-right\",\n                  color: \"secondary\",\n                  type: \"button\",\n                  onClick: e => {\n                    e.preventDefault();\n                    router.push(`/vendor/${store}`);\n                  },\n                  children: \"Back\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\n\nIndex.layout = Admin;\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}