{"ast":null,"code":"import _defineProperty from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/driver/Jobs.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Badge, Col, FormGroup, Row, Table } from 'reactstrap';\nimport PaginationServer from '../Pagination/PaginationServer';\nimport { getDriverJobs } from '../../reducers/driverSlice';\nimport Loader from '../ApiLoader/loader';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getDiverJobColor, getDiverJobTitle } from '../../Helper/helper';\n\nvar Jobs = function Jobs(_ref) {\n  _s();\n\n  var activeTab = _ref.activeTab,\n      driverId = _ref.driverId;\n  var dispatch = useDispatch();\n\n  var _useState = useState(true),\n      loader = _useState[0],\n      setLoader = _useState[1];\n\n  var _useState2 = useState([]),\n      jobsList = _useState2[0],\n      setDriverList = _useState2[1];\n\n  var _useState3 = useState({}),\n      paginationData = _useState3[0],\n      setPaginationData = _useState3[1];\n\n  var _useState4 = useState({\n    startDate: '',\n    endDate: ''\n  }),\n      filterData = _useState4[0],\n      setFilterData = _useState4[1];\n\n  var getJobsList = useSelector(function (state) {\n    return state.driverSlice.driverJob;\n  });\n\n  var pageChange = function pageChange(data) {\n    setLoader(true);\n    dispatch(getDriverJobs({\n      page: data,\n      driverId: driverId\n    }, filterData));\n  };\n\n  var handelFilter = function handelFilter(type) {\n    if (type === 'reset') {\n      setFilterData({\n        startDate: '',\n        endDate: ''\n      });\n      dispatch(getDriverJobs({\n        page: 1,\n        driverId: driverId\n      }, {}));\n    } else {\n      dispatch(getDriverJobs({\n        page: 1,\n        driverId: driverId\n      }, filterData));\n    }\n  };\n\n  useEffect(function () {\n    if (activeTab) {\n      setLoader(true);\n      dispatch(getDriverJobs({\n        page: 1,\n        driverId: driverId\n      }, filterData));\n    }\n  }, [activeTab]);\n  useEffect(function () {\n    if (getJobsList) {\n      var pagData = {\n        totalDocs: getJobsList.totalDocs,\n        limit: getJobsList.limit,\n        page: getJobsList.page,\n        totalPages: getJobsList.totalPages,\n        hasPrevPage: getJobsList.hasPrevPage,\n        hasNextPage: getJobsList.hasNextPage,\n        prevPage: getJobsList.prevPage,\n        nextPage: getJobsList.nextPage\n      };\n      setPaginationData(pagData);\n      setDriverList(getJobsList.docs);\n      setLoader(false);\n    }\n  }, [getJobsList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xl: \"12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"form-control\",\n              selected: filterData.startDate != '' ? new Date(filterData.startDate) : null,\n              maxDate: filterData.endDate != '' ? new Date(filterData.endDate) : null,\n              onChange: function onChange(date) {\n                filterData.startDate = moment(date).format('YYYY-MM-DD');\n                setFilterData(_objectSpread({}, filterData));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"form-control\",\n              selected: filterData.endDate != '' ? new Date(filterData.endDate) : null,\n              minDate: filterData.startDate != '' ? new Date(filterData.startDate) : null,\n              onChange: function onChange(date) {\n                filterData.endDate = moment(date).format('YYYY-MM-DD');\n                setFilterData(_objectSpread({}, filterData));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          className: \"mt-md-4 mt-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            onClick: function onClick() {\n              return handelFilter('filter');\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info\",\n            onClick: function onClick() {\n              return handelFilter('reset');\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      xl: \"12\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Is First\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Order Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"CreatedAt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: loader ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, _this) : jobsList.length == 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: \"No Data Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 41\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 37\n          }, _this) : jobsList.map(function (item, key) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", paginationData.page + key, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 45\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  color: item.isFirst ? 'success' : 'danger',\n                  children: item.isFirst ? 'True' : 'False'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 47\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 45\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  color: getDiverJobColor(item.status),\n                  children: getDiverJobTitle(item.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 47\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 45\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", item.storeDetail.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", item.orderDetail.orderNumber, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 45\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", moment(item.createdAt).format('MMMM Do YYYY, h:mm:ss a'), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 45\n              }, _this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 41\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 6,\n              className: \"text-right\",\n              children: paginationData ? /*#__PURE__*/_jsxDEV(PaginationServer, {\n                data: paginationData,\n                pagFun: pageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, _this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Jobs, \"7CRJuiW4Ka+WWh727GDEjHI6Z+Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Jobs;\nexport default Jobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/components/driver/Jobs.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Badge","Col","FormGroup","Row","Table","PaginationServer","getDriverJobs","Loader","moment","DatePicker","getDiverJobColor","getDiverJobTitle","Jobs","activeTab","driverId","dispatch","loader","setLoader","jobsList","setDriverList","paginationData","setPaginationData","startDate","endDate","filterData","setFilterData","getJobsList","state","driverSlice","driverJob","pageChange","data","page","handelFilter","type","pagData","totalDocs","limit","totalPages","hasPrevPage","hasNextPage","prevPage","nextPage","docs","Date","date","format","length","map","item","key","isFirst","status","storeDetail","name","orderDetail","orderNumber","createdAt","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Badge, Col, FormGroup, Row, Table } from 'reactstrap'\nimport PaginationServer from '../Pagination/PaginationServer'\nimport { getDriverJobs } from '../../reducers/driverSlice'\nimport Loader from '../ApiLoader/loader'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getDiverJobColor, getDiverJobTitle } from '../../Helper/helper'\n\nconst Jobs = ({activeTab,driverId}) => {\n  const dispatch = useDispatch()\n  const [loader, setLoader] = useState(true)\n  const [jobsList, setDriverList] = useState([])\n  const [paginationData, setPaginationData] = useState({})\n  const [filterData,setFilterData] = useState({\n      startDate:'',\n      endDate:''\n  })\n  const getJobsList = useSelector(state=>state.driverSlice.driverJob)\n  const pageChange = (data) =>{\n      setLoader(true)\n      dispatch(getDriverJobs({ page:data,driverId:driverId },filterData))\n  }\n  const handelFilter = (type) => {\n      if (type==='reset') {\n          setFilterData({\n              startDate:'',\n              endDate:''\n          })\n          dispatch(getDriverJobs({ page:1,driverId:driverId },{}))\n      }else{\n          dispatch(getDriverJobs({ page:1,driverId:driverId },filterData))\n      }\n  }\n  useEffect(()=>{\n      if (activeTab) {\n          setLoader(true)\n          dispatch(getDriverJobs({ page:1,driverId:driverId },filterData))\n      }\n  },[activeTab])\n  useEffect(()=>{\n      if(getJobsList){\n          let pagData={\n              totalDocs: getJobsList.totalDocs,\n              limit: getJobsList.limit,\n              page: getJobsList.page,\n              totalPages: getJobsList.totalPages,\n              hasPrevPage: getJobsList.hasPrevPage,\n              hasNextPage: getJobsList.hasNextPage,\n              prevPage: getJobsList.prevPage,\n              nextPage: getJobsList.nextPage\n          }\n          setPaginationData(pagData)\n          setDriverList(getJobsList.docs)\n          setLoader(false)\n      }\n  },[getJobsList])\n  return (\n    <div className='row'>\n            <Col xl='12'>\n                <h6>Filter</h6>\n                    <Row>\n                        <Col md='4'>\n                            <FormGroup>\n                                <label>Date From</label>\n                                <DatePicker\n                                    className='form-control'\n                                    selected={ filterData.startDate!=''?new Date(filterData.startDate):null }\n                                    maxDate={ filterData.endDate!=''? new Date(filterData.endDate):null }\n                                    onChange={(date)=>{\n                                        filterData.startDate = moment(date).format('YYYY-MM-DD')\n                                        setFilterData({...filterData})\n                                    }}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col md='4'>\n                            <FormGroup>\n                                <label>Date To</label>\n                                <DatePicker\n                                    className='form-control'\n                                    selected={ filterData.endDate!=''?new Date(filterData.endDate):null }\n                                    minDate={ filterData.startDate!=''?new Date(filterData.startDate):null }\n                                    onChange={(date)=>{\n                                        filterData.endDate = moment(date).format('YYYY-MM-DD')\n                                        setFilterData({...filterData})\n                                    }}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col md='4' className='mt-md-4 mt-0'>\n                            <button \n                                type='button' \n                                className='btn btn-success'\n                                onClick={()=>handelFilter('filter')}\n                            >\n                                Filter\n                            </button>\n                            <button \n                                type='button' \n                                className='btn btn-info'\n                                onClick={()=>handelFilter('reset')}\n                            >\n                                Reset\n                            </button>\n                        </Col>\n                    </Row>\n            </Col>\n            <Col xl='12'>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td>#</td>\n                            <td>Is First</td>\n                            <td>Status</td>\n                            <td>Store</td>\n                            <td>Order Number</td>\n                            <td>CreatedAt</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            loader?\n                            <tr>\n                                <td colSpan='6'>\n                                    <Loader/>\n                                </td>\n                            </tr>\n                            :\n                                jobsList.length==0?\n                                    <tr>\n                                        <td colSpan='6'>\n                                            No Data Found\n                                        </td>\n                                    </tr>\n                                :\n                                    jobsList.map((item,key)=>(\n                                        <tr key={item._id}>\n                                            <td> { paginationData.page + key } </td>\n                                            <td> \n                                              <Badge \n                                                color={item.isFirst?'success':'danger'}\n                                              >\n                                                {item.isFirst?'True':'False'}\n                                              </Badge> \n                                            </td>\n                                            <td> \n                                              <Badge \n                                                color={getDiverJobColor(item.status)}\n                                              >\n                                                {getDiverJobTitle(item.status)}\n                                              </Badge> \n                                            </td>\n                                            <td> { item.storeDetail.name } </td>\n                                            <td> { item.orderDetail.orderNumber } </td>\n                                            <td> { moment(item.createdAt).format('MMMM Do YYYY, h:mm:ss a') } </td>\n                                        </tr>\n                                    ))\n                        }  \n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colSpan={6} className=\"text-right\">\n                            {\n                                (paginationData)?\n                                    <PaginationServer \n                                        data={paginationData}\n                                        pagFun={pageChange}\n                                    />\n                                :null        \n                            }\n                            </td>\n                        </tr>\n                    </tfoot>\n                </Table>\n            </Col>\n    </div>\n  )\n}\n\nexport default Jobs"]},"metadata":{},"sourceType":"module"}