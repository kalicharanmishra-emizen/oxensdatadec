{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst requestSlice = createSlice({\n  name: \"request\",\n  initialState: {\n    contact: [],\n    career: [],\n    becomeStore: []\n  },\n  reducers: {\n    contactList: (state, action) => {\n      state.contact = action.payload.data;\n    },\n    careerList: (state, action) => {\n      state.career = action.payload.data;\n    },\n    becomeStoreList: (state, action) => {\n      state.becomeStore = action.payload.data;\n    }\n  }\n});\nexport default requestSlice.reducer;\nconst {\n  contactList,\n  careerList,\n  becomeStoreList\n} = requestSlice.actions;\nexport const getContactList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/request/contact', {});\n    dispatch(contactList(res.data));\n  } catch (error) {\n    apiFail(error);\n  }\n};\nexport const getCareerList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/request/career', {});\n    dispatch(careerList(res.data));\n  } catch (error) {\n    apiFail(error);\n  }\n};\nexport const getBecomeStoreList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/request/becomestore', {});\n    dispatch(becomeStoreList(res.data));\n  } catch (error) {\n    apiFail(error);\n  }\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/requestSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","requestSlice","name","initialState","contact","career","becomeStore","reducers","contactList","state","action","payload","data","careerList","becomeStoreList","reducer","actions","getContactList","dispatch","res","error","getCareerList","getBecomeStoreList"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAASC,OAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,OAAO,EAAC,EADC;AAETC,IAAAA,MAAM,EAAC,EAFE;AAGTC,IAAAA,WAAW,EAAC;AAHH,GAFgB;AAO7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,WAAW,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACzBD,MAAAA,KAAK,CAACL,OAAN,GAAcM,MAAM,CAACC,OAAP,CAAeC,IAA7B;AACH,KAHI;AAILC,IAAAA,UAAU,EAAC,CAACJ,KAAD,EAAOC,MAAP,KAAiB;AACxBD,MAAAA,KAAK,CAACJ,MAAN,GAAaK,MAAM,CAACC,OAAP,CAAeC,IAA5B;AACH,KANI;AAOLE,IAAAA,eAAe,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAiB;AAC7BD,MAAAA,KAAK,CAACH,WAAN,GAAkBI,MAAM,CAACC,OAAP,CAAeC,IAAjC;AACH;AATI;AAPoB,CAAD,CAAhC;AAmBA,eAAeX,YAAY,CAACc,OAA5B;AACA,MAAM;AAACP,EAAAA,WAAD;AAAaK,EAAAA,UAAb;AAAwBC,EAAAA;AAAxB,IAA2Cb,YAAY,CAACe,OAA9D;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAClD,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMrB,OAAO,CAAC,MAAD,EAAQ,kBAAR,EAA2B,EAA3B,CAAvB;AACAoB,IAAAA,QAAQ,CAACV,WAAW,CAACW,GAAG,CAACP,IAAL,CAAZ,CAAR;AACH,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACZrB,IAAAA,OAAO,CAACqB,KAAD,CAAP;AACH;AACJ,CAPM;AAQP,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMH,QAAN,IAAkB;AACjD,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMrB,OAAO,CAAC,MAAD,EAAQ,iBAAR,EAA0B,EAA1B,CAAvB;AACAoB,IAAAA,QAAQ,CAACL,UAAU,CAACM,GAAG,CAACP,IAAL,CAAX,CAAR;AACH,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACZrB,IAAAA,OAAO,CAACqB,KAAD,CAAP;AACH;AACJ,CAPM;AAQP,OAAO,MAAME,kBAAkB,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AACtD,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMrB,OAAO,CAAC,MAAD,EAAQ,sBAAR,EAA+B,EAA/B,CAAvB;AACAoB,IAAAA,QAAQ,CAACJ,eAAe,CAACK,GAAG,CAACP,IAAL,CAAhB,CAAR;AACH,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACZrB,IAAAA,OAAO,CAACqB,KAAD,CAAP;AACH;AACJ,CAPM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst requestSlice = createSlice({\n    name:\"request\",\n    initialState:{\n        contact:[],\n        career:[],\n        becomeStore:[]\n    },\n    reducers:{\n        contactList:(state,action) =>{\n            state.contact=action.payload.data\n        },\n        careerList:(state,action) =>{\n            state.career=action.payload.data\n        },\n        becomeStoreList:(state,action) =>{\n            state.becomeStore=action.payload.data\n        }\n    }\n})\nexport default requestSlice.reducer\nconst {contactList,careerList,becomeStoreList} = requestSlice.actions\nexport const getContactList = () => async dispatch => {\n    try {\n        let res = await callApi('post','/request/contact',{})\n        dispatch(contactList(res.data))\n    } catch (error) {\n        apiFail(error)\n    }\n}\nexport const getCareerList = () => async dispatch => {\n    try {\n        let res = await callApi('post','/request/career',{})\n        dispatch(careerList(res.data))\n    } catch (error) {\n        apiFail(error)\n    }\n}\nexport const getBecomeStoreList = () => async dispatch => {\n    try {\n        let res = await callApi('post','/request/becomestore',{})\n        dispatch(becomeStoreList(res.data))\n    } catch (error) {\n        apiFail(error)\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}