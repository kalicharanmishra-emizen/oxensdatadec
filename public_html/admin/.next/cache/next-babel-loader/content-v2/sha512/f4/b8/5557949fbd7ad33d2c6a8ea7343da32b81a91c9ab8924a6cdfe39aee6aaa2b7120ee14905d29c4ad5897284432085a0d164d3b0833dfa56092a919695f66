{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { logout } from 'reducers/authSlice';\nvar mainSlice = createSlice({\n  name: 'mainSlice',\n  initialState: {\n    success: null,\n    failed: null\n  },\n  reducers: {\n    apiFailed: function apiFailed(state, action) {\n      state.failed = action.payload;\n    },\n    unsetApiFailed: function unsetApiFailed(state, action) {\n      state.failed = null;\n    },\n    apiSucceed: function apiSucceed(state, action) {\n      state.success = action.payload;\n    },\n    unsetApiSucceed: function unsetApiSucceed(state, action) {\n      state.success = null;\n    }\n  }\n});\nvar _mainSlice$actions = mainSlice.actions,\n    apiFailed = _mainSlice$actions.apiFailed,\n    unsetApiFailed = _mainSlice$actions.unsetApiFailed,\n    apiSucceed = _mainSlice$actions.apiSucceed,\n    unsetApiSucceed = _mainSlice$actions.unsetApiSucceed;\nexport default mainSlice.reducer;\nexport var apiSuccess = function apiSuccess(value) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(apiSucceed(value));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var apiFail = function apiFail(value) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (value.statusCode == 419) {\n                dispatch(logout());\n              } else {\n                dispatch(apiFailed(value));\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var unSetApiFail = function unSetApiFail() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch(unsetApiFailed());\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var unSetApiSucc = function unSetApiSucc() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch(unsetApiSucceed());\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/mainSlice.js"],"names":["createSlice","logout","mainSlice","name","initialState","success","failed","reducers","apiFailed","state","action","payload","unsetApiFailed","apiSucceed","unsetApiSucceed","actions","reducer","apiSuccess","value","dispatch","apiFail","statusCode","unSetApiFail","unSetApiSucc"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,IAAMC,SAAS,GAAGF,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAC,WADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,OAAO,EAAC,IADC;AAETC,IAAAA,MAAM,EAAC;AAFE,GAFa;AAM1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,EAAC,mBAACC,KAAD,EAAOC,MAAP,EAAgB;AACtBD,MAAAA,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACC,OAAtB;AACH,KAHI;AAILC,IAAAA,cAAc,EAAC,wBAACH,KAAD,EAAOC,MAAP,EAAgB;AAC3BD,MAAAA,KAAK,CAACH,MAAN,GAAa,IAAb;AACH,KANI;AAOLO,IAAAA,UAAU,EAAC,oBAACJ,KAAD,EAAOC,MAAP,EAAgB;AACvBD,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACC,OAAvB;AACH,KATI;AAULG,IAAAA,eAAe,EAAC,yBAACL,KAAD,EAAOC,MAAP,EAAgB;AAC5BD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACH;AAZI;AANiB,CAAD,CAA7B;yBAqB6DH,SAAS,CAACa,O;IAAhEP,S,sBAAAA,S;IAAUI,c,sBAAAA,c;IAAeC,U,sBAAAA,U;IAAWC,e,sBAAAA,e;AAC3C,eAAeZ,SAAS,CAACc,OAAzB;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;AAAA;AAAA,wEAAW,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACjCA,cAAAA,QAAQ,CAACN,UAAU,CAACK,KAAD,CAAX,CAAR;;AADiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAGP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACF,KAAD;AAAA;AAAA,yEAAW,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAC9B,kBAAID,KAAK,CAACG,UAAN,IAAoB,GAAxB,EAA6B;AACzBF,gBAAAA,QAAQ,CAAClB,MAAM,EAAP,CAAR;AACH,eAFD,MAEK;AACDkB,gBAAAA,QAAQ,CAACX,SAAS,CAACU,KAAD,CAAV,CAAR;AACH;;AAL6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAOP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA,yEAAM,kBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAC9BA,cAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAGP,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA,yEAAM,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAC9BA,cAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { logout } from 'reducers/authSlice'\nconst mainSlice = createSlice({\n    name:'mainSlice',\n    initialState:{\n        success:null,\n        failed:null,\n    },\n    reducers:{\n        apiFailed:(state,action)=>{\n            state.failed = action.payload \n        },\n        unsetApiFailed:(state,action)=>{\n            state.failed=null;\n        },\n        apiSucceed:(state,action)=>{\n            state.success = action.payload \n        },\n        unsetApiSucceed:(state,action)=>{\n            state.success=null;\n        },\n    }\n});\nconst {apiFailed,unsetApiFailed,apiSucceed,unsetApiSucceed} =mainSlice.actions\nexport default mainSlice.reducer\nexport const apiSuccess = (value) => async dispatch => {\n    dispatch(apiSucceed(value))\n}\nexport const apiFail = (value) => async dispatch => {\n    if (value.statusCode == 419) {\n        dispatch(logout())   \n    }else{\n        dispatch(apiFailed(value))\n    }\n}\nexport const unSetApiFail = () => async dispatch =>{\n    dispatch(unsetApiFailed())\n}\nexport const unSetApiSucc = () => async dispatch =>{\n    dispatch(unsetApiSucceed())\n}"]},"metadata":{},"sourceType":"module"}