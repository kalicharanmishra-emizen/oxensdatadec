{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { logout } from 'reducers/authSlice';\nconst mainSlice = createSlice({\n  name: 'mainSlice',\n  initialState: {\n    success: null,\n    failed: null\n  },\n  reducers: {\n    apiFailed: (state, action) => {\n      state.failed = action.payload;\n    },\n    unsetApiFailed: (state, action) => {\n      state.failed = null;\n    },\n    apiSucceed: (state, action) => {\n      state.success = action.payload;\n    },\n    unsetApiSucceed: (state, action) => {\n      state.success = null;\n    }\n  }\n});\nconst {\n  apiFailed,\n  unsetApiFailed,\n  apiSucceed,\n  unsetApiSucceed\n} = mainSlice.actions;\nexport default mainSlice.reducer;\nexport const apiSuccess = value => async dispatch => {\n  dispatch(apiSucceed(value));\n};\nexport const apiFail = value => async dispatch => {\n  if (value.statusCode == 419) {\n    dispatch(logout());\n  } else {\n    dispatch(apiFailed(value));\n  }\n};\nexport const unSetApiFail = () => async dispatch => {\n  dispatch(unsetApiFailed());\n};\nexport const unSetApiSucc = () => async dispatch => {\n  dispatch(unsetApiSucceed());\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/mainSlice.js"],"names":["createSlice","logout","mainSlice","name","initialState","success","failed","reducers","apiFailed","state","action","payload","unsetApiFailed","apiSucceed","unsetApiSucceed","actions","reducer","apiSuccess","value","dispatch","apiFail","statusCode","unSetApiFail","unSetApiSucc"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAC,WADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,OAAO,EAAC,IADC;AAETC,IAAAA,MAAM,EAAC;AAFE,GAFa;AAM1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACtBD,MAAAA,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACC,OAAtB;AACH,KAHI;AAILC,IAAAA,cAAc,EAAC,CAACH,KAAD,EAAOC,MAAP,KAAgB;AAC3BD,MAAAA,KAAK,CAACH,MAAN,GAAa,IAAb;AACH,KANI;AAOLO,IAAAA,UAAU,EAAC,CAACJ,KAAD,EAAOC,MAAP,KAAgB;AACvBD,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACC,OAAvB;AACH,KATI;AAULG,IAAAA,eAAe,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;AAC5BD,MAAAA,KAAK,CAACJ,OAAN,GAAc,IAAd;AACH;AAZI;AANiB,CAAD,CAA7B;AAqBA,MAAM;AAACG,EAAAA,SAAD;AAAWI,EAAAA,cAAX;AAA0BC,EAAAA,UAA1B;AAAqCC,EAAAA;AAArC,IAAuDZ,SAAS,CAACa,OAAvE;AACA,eAAeb,SAAS,CAACc,OAAzB;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW,MAAMC,QAAN,IAAkB;AACnDA,EAAAA,QAAQ,CAACN,UAAU,CAACK,KAAD,CAAX,CAAR;AACH,CAFM;AAGP,OAAO,MAAME,OAAO,GAAIF,KAAD,IAAW,MAAMC,QAAN,IAAkB;AAChD,MAAID,KAAK,CAACG,UAAN,IAAoB,GAAxB,EAA6B;AACzBF,IAAAA,QAAQ,CAAClB,MAAM,EAAP,CAAR;AACH,GAFD,MAEK;AACDkB,IAAAA,QAAQ,CAACX,SAAS,CAACU,KAAD,CAAV,CAAR;AACH;AACJ,CANM;AAOP,OAAO,MAAMI,YAAY,GAAG,MAAM,MAAMH,QAAN,IAAiB;AAC/CA,EAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AACH,CAFM;AAGP,OAAO,MAAMW,YAAY,GAAG,MAAM,MAAMJ,QAAN,IAAiB;AAC/CA,EAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACH,CAFM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { logout } from 'reducers/authSlice'\nconst mainSlice = createSlice({\n    name:'mainSlice',\n    initialState:{\n        success:null,\n        failed:null,\n    },\n    reducers:{\n        apiFailed:(state,action)=>{\n            state.failed = action.payload \n        },\n        unsetApiFailed:(state,action)=>{\n            state.failed=null;\n        },\n        apiSucceed:(state,action)=>{\n            state.success = action.payload \n        },\n        unsetApiSucceed:(state,action)=>{\n            state.success=null;\n        },\n    }\n});\nconst {apiFailed,unsetApiFailed,apiSucceed,unsetApiSucceed} =mainSlice.actions\nexport default mainSlice.reducer\nexport const apiSuccess = (value) => async dispatch => {\n    dispatch(apiSucceed(value))\n}\nexport const apiFail = (value) => async dispatch => {\n    if (value.statusCode == 419) {\n        dispatch(logout())   \n    }else{\n        dispatch(apiFailed(value))\n    }\n}\nexport const unSetApiFail = () => async dispatch =>{\n    dispatch(unsetApiFailed())\n}\nexport const unSetApiSucc = () => async dispatch =>{\n    dispatch(unsetApiSucceed())\n}"]},"metadata":{},"sourceType":"module"}