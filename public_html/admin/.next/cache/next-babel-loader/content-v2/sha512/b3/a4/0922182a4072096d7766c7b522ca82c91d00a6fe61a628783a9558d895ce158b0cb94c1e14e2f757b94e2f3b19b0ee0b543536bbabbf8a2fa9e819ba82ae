{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport classnames from \"classnames\"; // javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1, chartExample2 } from \"variables/charts.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from \"components/Headers/Header.js\";\nimport { getDashboardData } from \"../reducers/cmsSlice\";\nimport { getMonth, yearlyEarningChart } from \"../Helper/helper\";\n\nvar Dashboard = function Dashboard(props) {\n  var dispatch = useDispatch();\n  var data = useSelector(function (state) {\n    return state.cmsSlice.dashboardList;\n  });\n\n  var _useState = useState(\"\"),\n      dashboard = _useState[0],\n      setDashboard = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      label = _useState2[0],\n      setLabel = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      label2 = _useState3[0],\n      setLabel2 = _useState3[1];\n\n  var _useState4 = useState(0),\n      orderData = _useState4[0],\n      setOrderData = _useState4[1];\n\n  var _useState5 = useState(0),\n      yearlySale = _useState5[0],\n      setYearlySale = _useState5[1]; // const [activeNav, setActiveNav] = React.useState(1);\n  // const [chartExample1Data, setChartExample1Data] = React.useState(\"data1\");\n\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  var toggleNavs = function toggleNavs(e, index) {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n\n  var getTotalOrderData = function getTotalOrderData() {\n    var _dashboard$monthlyOrd, _dashboard$monthlyOrd2, _dashboard$monthlyOrd3, _dashboard$monthlyOrd4;\n\n    var temp = [];\n    var temp2 = [];\n    var tempOrderData = [];\n    var tempOrderData2 = [];\n    dashboard === null || dashboard === void 0 ? void 0 : (_dashboard$monthlyOrd = dashboard.monthlyOrders) === null || _dashboard$monthlyOrd === void 0 ? void 0 : (_dashboard$monthlyOrd2 = _dashboard$monthlyOrd.thisYearOrders) === null || _dashboard$monthlyOrd2 === void 0 ? void 0 : _dashboard$monthlyOrd2.map(function (item) {\n      temp.push(getMonth(item._id));\n      tempOrderData.push(item.monthOrder);\n    });\n    dashboard === null || dashboard === void 0 ? void 0 : (_dashboard$monthlyOrd3 = dashboard.monthlyOrders) === null || _dashboard$monthlyOrd3 === void 0 ? void 0 : (_dashboard$monthlyOrd4 = _dashboard$monthlyOrd3.thisYearSales) === null || _dashboard$monthlyOrd4 === void 0 ? void 0 : _dashboard$monthlyOrd4.map(function (item) {\n      temp2.push(getMonth(item._id));\n      tempOrderData2.push(Number(item.monthSale.toFixed(2)));\n    });\n    setLabel(temp);\n    setOrderData(tempOrderData);\n    setLabel2(temp2);\n    setYearlySale(tempOrderData2);\n  }; // Colors\n\n\n  var colors = {\n    gray: {\n      100: \"#f6f9fc\",\n      200: \"#e9ecef\",\n      300: \"#dee2e6\",\n      400: \"#ced4da\",\n      500: \"#adb5bd\",\n      600: \"#8898aa\",\n      700: \"#525f7f\",\n      800: \"#32325d\",\n      900: \"#212529\"\n    },\n    theme: {\n      \"default\": \"#172b4d\",\n      primary: \"#5e72e4\",\n      secondary: \"#f4f5f7\",\n      info: \"#11cdef\",\n      success: \"#2dce89\",\n      danger: \"#f5365c\",\n      warning: \"#fb6340\"\n    },\n    black: \"#12263F\",\n    white: \"#FFFFFF\",\n    transparent: \"transparent\"\n  };\n  var monthlySale = {\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            callback: function callback(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }]\n      },\n      tooltips: {\n        callbacks: {\n          label: function label(item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n\n            content += yLabel;\n            return content;\n          }\n        }\n      }\n    },\n    data: {\n      labels: label,\n      datasets: [{\n        label: \"Sales\",\n        data: orderData,\n        maxBarThickness: 10\n      }]\n    }\n  };\n  var thisYearRevenue = {\n    options: {\n      scales: {\n        yAxes: [{\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function callback(value) {\n              if (!(value % 10)) {\n                return \"£\" + value + \"\";\n              }\n            }\n          }\n        }]\n      },\n      tooltips: {\n        callbacks: {\n          label: function label(item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n\n            content += \"£\" + yLabel + \"\";\n            return content;\n          }\n        }\n      }\n    },\n    data2: function data2(canvas) {\n      return {\n        labels: label2,\n        datasets: [{\n          label: \"Performance\",\n          data: yearlySale\n        }]\n      };\n    }\n  };\n  useEffect(function () {\n    dispatch(getDashboardData());\n  }, []);\n  useEffect(function () {\n    if (!data.isLoading) {\n      setDashboard(data.data);\n    }\n\n    getTotalOrderData();\n  }, [data]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsxs(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          className: \"mb-5 mb-xl-0\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsx(\"h6\", {\n                    className: \"text-uppercase text-light ls-1 mb-1\",\n                    children: \"Overview\"\n                  }), /*#__PURE__*/_jsx(\"h2\", {\n                    className: \" mb-0\",\n                    children: \"Sales value\"\n                  })]\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"chart\",\n                children: /*#__PURE__*/_jsx(Line, {\n                  data: thisYearRevenue.data2,\n                  options: thisYearRevenue.options,\n                  getDatasetAtEvent: function getDatasetAtEvent(e) {\n                    return console.log(e);\n                  }\n                })\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Col, {\n          xl: \"12\",\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsx(\"h6\", {\n                    className: \"text-uppercase text-muted ls-1 mb-1\",\n                    children: \"Performance\"\n                  }), /*#__PURE__*/_jsx(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Total orders\"\n                  })]\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"chart\",\n                children: /*#__PURE__*/_jsx(Bar, {\n                  data: monthlySale.data,\n                  options: monthlySale.options\n                })\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/_jsx(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"mb-5 mb-xl-0\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"border-0\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsx(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Top Saling Restaurent\"\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsxs(Table, {\n              className: \"align-items-center table-flush\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsx(\"thead\", {\n                className: \"thead-light\",\n                children: /*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Store Name\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Total Order\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Delivered Order\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Pending Order\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Refund Order\"\n                  })]\n                })\n              }), data.isLoading ? \"loading....\" : !dashboard ? \"\" : dashboard === null || dashboard === void 0 ? void 0 : dashboard.topSellingStores.map(function (item) {\n                return /*#__PURE__*/_jsx(\"tbody\", {\n                  children: /*#__PURE__*/_jsxs(\"tr\", {\n                    children: [/*#__PURE__*/_jsx(\"th\", {\n                      scope: \"row\",\n                      children: item.storeName\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.totalCount\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.deliveredOrders\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.pendingOrders\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.refundOrders\n                    })]\n                  })\n                });\n              })]\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsx(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"mb-5 mb-xl-0\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"border-0\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsx(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Top Buyers Users\"\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsxs(Table, {\n              className: \"align-items-center table-flush\",\n              responsive: true,\n              children: [/*#__PURE__*/_jsx(\"thead\", {\n                className: \"thead-light\",\n                children: /*#__PURE__*/_jsxs(\"tr\", {\n                  children: [/*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"User Name\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Total Order\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Delivered Order\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Pending Order\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Refund Order\"\n                  }), /*#__PURE__*/_jsx(\"th\", {\n                    scope: \"col\",\n                    children: \"Total Amount\"\n                  })]\n                })\n              }), data.isLoading ? \"loading....\" : !dashboard ? \"\" : dashboard === null || dashboard === void 0 ? void 0 : dashboard.topBuyers.map(function (item) {\n                return /*#__PURE__*/_jsx(\"tbody\", {\n                  children: /*#__PURE__*/_jsxs(\"tr\", {\n                    children: [/*#__PURE__*/_jsx(\"th\", {\n                      scope: \"row\",\n                      children: item.userName\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.totalOrders\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.deliveredOrders\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.pendingOrders\n                    }), /*#__PURE__*/_jsx(\"td\", {\n                      children: item.refundOrders\n                    }), /*#__PURE__*/_jsxs(\"td\", {\n                      children: [\"\\xA3 \", item.deliveredOrdersAmount]\n                    })]\n                  })\n                });\n              })]\n            })]\n          })\n        })\n      })]\n    })]\n  });\n};\n\nDashboard.layout = Admin;\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}