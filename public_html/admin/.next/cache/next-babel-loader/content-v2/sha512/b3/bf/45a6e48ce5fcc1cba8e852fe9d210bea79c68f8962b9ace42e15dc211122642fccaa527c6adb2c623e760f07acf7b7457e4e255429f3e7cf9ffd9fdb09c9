{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/setting/order/[id].js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Row } from \"reactstrap\";\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getOrderSettingDetail, updateOrderSetting } from 'reducers/settingSlice';\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport Admin from 'layouts/Admin';\nimport nprogress from 'nprogress';\nimport { toast } from \"react-toastify\";\nimport { useRouter } from 'next/router';\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Edit() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState(true),\n      loader = _useState[0],\n      setLoader = _useState[1];\n\n  var detail = useSelector(function (state) {\n    return state.settingSlice.orderDetail;\n  });\n  var apiError = useSelector(function (state) {\n    return state.mainSlice.failed;\n  });\n  var apiSuccess = useSelector(function (state) {\n    return state.mainSlice.success;\n  });\n\n  var _useState2 = useState({\n    status: false,\n    message: '',\n    type: ''\n  }),\n      alert = _useState2[0],\n      setAlert = _useState2[1];\n\n  useEffect(function () {\n    if (id != undefined) {\n      dispatch(getOrderSettingDetail({\n        id: id\n      }));\n      setLoader(false);\n    }\n  }, [id]);\n  /* form submit handel  start */\n\n  var formSubmit = {\n    vehicleType: detail.vehicleType,\n    maxDistance: detail.maxDistance,\n    packageLimit: detail.packageLimit\n  };\n  var validationSchema = Yup.object().shape({\n    maxDistance: Yup.number().typeError('Must be a number').required('Max Distance is required!').min(1, 'Distance must be greater than 1').integer('Distance must be a integer'),\n    packageLimit: Yup.array().min(1, 'Package limit is required')\n  });\n\n  var formSubmitHandal = function formSubmitHandal(formData) {\n    // console.log('final data',formData);\n    formData['id'] = id;\n    nprogress.start();\n    dispatch(updateOrderSetting(formData));\n  };\n  /* form submit handel  end */\n\n\n  if (alert.status) {\n    toast(alert.message, {\n      type: alert.type\n    });\n  }\n\n  useEffect(function () {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        setAlert({\n          status: true,\n          message: apiSuccess.message,\n          type: 'success'\n        });\n        nprogress.done();\n        dispatch(unSetApiSucc());\n        router.push('/setting/order');\n        setTimeout(function () {\n          setAlert({\n            status: false,\n            message: '',\n            type: ''\n          }); //   dispatch(unSetApiSucc())\n        }, 3000);\n      }\n\n      if (apiError) {\n        if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n          setAlert({\n            status: true,\n            message: apiError.message,\n            type: 'error'\n          });\n          dispatch(unSetApiFail());\n          nprogress.done();\n          setTimeout(function () {\n            setAlert({\n              status: false,\n              message: '',\n              type: ''\n            });\n          }, 3000);\n        }\n      }\n    }\n  }, [apiSuccess, apiError]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: [\"Order assign setting \", detail.vehicleType]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                enableReinitialize: true,\n                initialValues: formSubmit,\n                validationSchema: validationSchema,\n                validateOnChange: false,\n                validateOnBlur: false,\n                onSubmit: function onSubmit(values) {\n                  return formSubmitHandal(values);\n                },\n                children: function children(formikProps) {\n                  return /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: formikProps.handleSubmit,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pl-lg-4\",\n                      children: [/*#__PURE__*/_jsxDEV(Row, {\n                        className: \"align-items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Vehicle Type\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 126,\n                              columnNumber: 45\n                            }, _this), /*#__PURE__*/_jsxDEV(InputCom, {\n                              type: \"text\",\n                              name: \"vehicleType\",\n                              placeholder: \"Vehicle Type\",\n                              isDefault: true,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.vehicleType,\n                              error: formikProps.errors.vehicleType\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 127,\n                              columnNumber: 45\n                            }, _this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 125,\n                            columnNumber: 41\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 37\n                        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Max Distance (Miles)\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 140,\n                              columnNumber: 45\n                            }, _this), /*#__PURE__*/_jsxDEV(InputCom, {\n                              type: \"text\",\n                              name: \"maxDistance\",\n                              placeholder: \"Enter Max Distance\",\n                              isDefault: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.maxDistance || '',\n                              error: formikProps.errors.maxDistance\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 141,\n                              columnNumber: 45\n                            }, _this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 139,\n                            columnNumber: 41\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 37\n                        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Package Limit Type\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 154,\n                              columnNumber: 45\n                            }, _this), !loader ? /*#__PURE__*/_jsxDEV(FromSelect, {\n                              name: \"packageLimit\",\n                              id: \"packageLimit\",\n                              options: [{\n                                value: \"small\",\n                                label: \"Small\"\n                              }, {\n                                value: \"medium\",\n                                label: \"Medium\"\n                              }, {\n                                value: \"large\",\n                                label: \"Large\"\n                              }],\n                              isDefault: false,\n                              isMulti: true,\n                              defValue: formikProps.values.packageLimit,\n                              getValue: formikProps.setFieldValue,\n                              error: formikProps.errors.packageLimit\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 159,\n                              columnNumber: 49\n                            }, _this) : \"\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 153,\n                            columnNumber: 41\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 152,\n                          columnNumber: 37\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 37\n                      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n                        children: /*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"12\",\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            className: \"float-right\",\n                            color: \"primary\",\n                            type: \"submit\",\n                            children: \"Save\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 37\n                          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"float-right mr-2\",\n                            color: \"secondary\",\n                            type: \"button\",\n                            onClick: function onClick(e) {\n                              e.preventDefault();\n                              router.back();\n                            },\n                            children: \"Back\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 196,\n                            columnNumber: 37\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 37\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 37\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 33\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 33\n                  }, _this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Edit, \"ofKZLHhtLWXLgbnpKFazWAl66OM=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector, useSelector];\n});\n\n_c = Edit;\nEdit.layout = Admin;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/pages/setting/order/[id].js"],"names":["Button","Card","CardBody","CardHeader","Col","Container","Form","FormGroup","Row","useEffect","useState","useSelector","useDispatch","getOrderSettingDetail","updateOrderSetting","unSetApiFail","unSetApiSucc","Admin","nprogress","toast","useRouter","InputCom","FromSelect","UserHeader","Formik","Yup","Edit","dispatch","router","id","query","loader","setLoader","detail","state","settingSlice","orderDetail","apiError","mainSlice","failed","apiSuccess","success","status","message","type","alert","setAlert","undefined","formSubmit","vehicleType","maxDistance","packageLimit","validationSchema","object","shape","number","typeError","required","min","integer","array","formSubmitHandal","formData","start","statusCode","done","push","setTimeout","values","formikProps","handleSubmit","setFieldValue","errors","value","label","e","preventDefault","back","layout"],"mappings":"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","sourcesContent":["import { Button, Card, CardBody, CardHeader, Col, Container, Form,FormGroup,Row} from \"reactstrap\";\nimport { useEffect, useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { getOrderSettingDetail, updateOrderSetting } from 'reducers/settingSlice';\nimport { unSetApiFail, unSetApiSucc } from \"reducers/mainSlice\";\nimport Admin from 'layouts/Admin'\nimport nprogress from 'nprogress';\nimport { toast } from \"react-toastify\";\nimport { useRouter } from 'next/router'\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport UserHeader from \"components/Headers/UserHeader\"\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nfunction Edit() {\n    const dispatch = useDispatch()\n    const router = useRouter()\n    const {id} = router.query\n    const [loader, setLoader] = useState(true)\n    const detail = useSelector(state=>state.settingSlice.orderDetail)\n    const apiError = useSelector(state=> state.mainSlice.failed)\n    const apiSuccess = useSelector(state=> state.mainSlice.success)\n    const [alert,setAlert]=useState({\n        status:false,\n        message:'',\n        type:''\n    })\n    useEffect(() => {\n        if (id!= undefined) {\n            dispatch(getOrderSettingDetail({id:id}))\n            setLoader(false)\n        }\n    }, [id])\n    /* form submit handel  start */\n        let formSubmit = {\n            vehicleType:detail.vehicleType,\n            maxDistance:detail.maxDistance,\n            packageLimit:detail.packageLimit,\n        }\n        const validationSchema =Yup.object().shape({\n            maxDistance: Yup.number().typeError('Must be a number').required('Max Distance is required!').min(1,'Distance must be greater than 1').integer('Distance must be a integer'),\n            packageLimit:Yup.array().min(1,'Package limit is required')\n        })\n        const formSubmitHandal = (formData) => {\n            // console.log('final data',formData);\n            formData['id'] = id\n            nprogress.start()\n            dispatch(updateOrderSetting(formData))\n        }\n    /* form submit handel  end */\n    if (alert.status) {\n        toast(alert.message,{\n          type:alert.type\n        });\n    }\n    useEffect(() => {\n        if (apiSuccess) {\n            if(apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300){\n                setAlert({\n                    status:true,\n                    message:apiSuccess.message,\n                    type:'success'\n                })\n                nprogress.done()\n                dispatch(unSetApiSucc())\n                router.push('/setting/order')\n                setTimeout(() => {\n                    setAlert({\n                        status:false,\n                        message:'',\n                        type:''\n                    })\n                //   dispatch(unSetApiSucc())\n                }, 3000);\n            }\n            if (apiError) {\n                if(apiError.statusCode >= 400 && apiError.statusCode <= 500){\n                    setAlert({\n                        status:true,\n                        message:apiError.message,\n                        type:'error'\n                    })\n                    dispatch(unSetApiFail())\n                    nprogress.done()\n                    setTimeout(() => {\n                        setAlert({\n                            status:false,\n                            message:'',\n                            type:''\n                        })\n                    }, 3000);\n                }\n            }\n        }\n    }, [apiSuccess,apiError])\n    \n  return (\n      <>\n        <UserHeader/>\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <Col className=\"order-xl-1\" xl=\"12\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                <Col xs=\"8\">\n                                    <h3 className=\"mb-0\">Order assign setting {detail.vehicleType}</h3>\n                                </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                            <Formik\n                                enableReinitialize\n                                initialValues={formSubmit}\n                                validationSchema={validationSchema}\n                                validateOnChange={false}\n                                validateOnBlur={false}\n                                onSubmit={ values =>formSubmitHandal(values)}\n                            >\n                            {(formikProps)=>(\n                                <Form onSubmit={formikProps.handleSubmit}>\n                                <div className=\"pl-lg-4\">\n                                    <Row className=\"align-items-center\">\n                                    <Col lg=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">Vehicle Type</label>\n                                            <InputCom\n                                                type=\"text\"\n                                                name=\"vehicleType\"\n                                                placeholder=\"Vehicle Type\"\n                                                isDefault={true}\n                                                getValue={formikProps.setFieldValue}\n                                                defValue={formikProps.values.vehicleType}\n                                                error={formikProps.errors.vehicleType}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">Max Distance (Miles)</label>\n                                            <InputCom\n                                               type=\"text\"\n                                               name=\"maxDistance\"\n                                               placeholder=\"Enter Max Distance\"\n                                               isDefault={false}\n                                               getValue={formikProps.setFieldValue}\n                                               defValue={formikProps.values.maxDistance||''}\n                                               error={formikProps.errors.maxDistance}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg=\"12\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\">\n                                                Package Limit Type\n                                            </label>\n                                            {\n                                                !loader?\n                                                <FromSelect\n                                                    name=\"packageLimit\"\n                                                    id=\"packageLimit\"\n                                                    options={[\n                                                        {\n                                                            value:\"small\",\n                                                            label:\"Small\"\n                                                        },\n                                                        {\n                                                            value:\"medium\",\n                                                            label:\"Medium\"\n                                                        },\n                                                        {\n                                                            value:\"large\",\n                                                            label:\"Large\"\n                                                        }\n                                                    ]}\n                                                    isDefault={false}\n                                                    isMulti={true}\n                                                    defValue={formikProps.values.packageLimit}\n                                                    getValue={formikProps.setFieldValue}\n                                                    error={formikProps.errors.packageLimit}\n                                                />\n                                                :\"\"\n                                            }\n                                        </FormGroup>\n                                    </Col>\n                                    </Row>\n                                    <Row>\n                                    <Col lg=\"12\">\n                                    <Button\n                                        className=\"float-right\"\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                    >\n                                        Save\n                                    </Button>\n                                    <Button\n                                        className=\"float-right mr-2\"\n                                        color=\"secondary\"\n                                        type=\"button\"\n                                        onClick={\n                                            (e)=>{\n                                                e.preventDefault()\n                                                router.back()\n                                            }\n                                        }\n                                    >\n                                        Back\n                                    </Button>\n                                    </Col>\n                                    </Row>\n                                </div>\n                                </Form>\n                            )}\n                            </Formik>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n      </>\n  );\n}\nEdit.layout = Admin;\nexport default Edit;\n\n"]},"metadata":{},"sourceType":"module"}