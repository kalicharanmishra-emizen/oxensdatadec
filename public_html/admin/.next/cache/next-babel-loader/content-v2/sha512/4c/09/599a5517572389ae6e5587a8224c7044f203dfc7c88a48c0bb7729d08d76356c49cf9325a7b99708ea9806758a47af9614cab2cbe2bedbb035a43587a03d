{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/admin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { FormFeedback, Input, Label } from \"reactstrap\";\nimport validator from 'validator';\nexport default function FormStatusChnage(props) {\n  var _useState = useState(''),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  var _useState2 = useState(''),\n      validation = _useState2[0],\n      setValidation = _useState2[1];\n\n  var _useState3 = useState(false),\n      submitValidate = _useState3[0],\n      setsubmitValidate = _useState3[1];\n\n  useEffect(function () {\n    setFormData(props.defValue);\n    setValidation(null);\n  }, [props.defValue]);\n\n  var handleChange = function handleChange(e) {\n    if (validator.isEmpty(e.target.value)) {\n      setValidation('Status Required');\n    } else {\n      setValidation(null);\n    }\n\n    setFormData(e.target.value == 1 ? true : false);\n  };\n\n  useEffect(function () {\n    if (validation !== '') {\n      var rowReturnData = {\n        key: 'status',\n        error: validation,\n        data: formData\n      };\n      props.getValue(rowReturnData);\n    }\n  }, [validation, formData]);\n  useEffect(function () {\n    setsubmitValidate(props.submitValidate);\n  }, [props.submitValidate]);\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (submitValidate) {\n              if (formData === '') {\n                setValidation('Status Required');\n              } else {\n                setValidation(null);\n              }\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [submitValidate]);\n  return formData !== '' ? /*#__PURE__*/_jsxs(_Fragment, {\n    children: [formData ? /*#__PURE__*/_jsxs(\"div\", {\n      className: \"radio-custom\",\n      children: [/*#__PURE__*/_jsx(Input, {\n        type: \"radio\",\n        name: \"status\",\n        id: \"active\",\n        value: \"1\",\n        onChange: handleChange,\n        defaultChecked: formData,\n        invalid: validation ? true : false\n      }), /*#__PURE__*/_jsx(Label, {\n        \"for\": \"active\",\n        check: true,\n        children: \"Active\"\n      })]\n    }) : /*#__PURE__*/_jsxs(\"div\", {\n      className: \"radio-custom\",\n      children: [/*#__PURE__*/_jsx(Input, {\n        type: \"radio\",\n        name: \"status\",\n        id: \"active\",\n        value: \"1\",\n        onChange: handleChange,\n        invalid: validation ? true : false\n      }), /*#__PURE__*/_jsx(Label, {\n        \"for\": \"active\",\n        check: true,\n        children: \"Active\"\n      })]\n    }), !formData ? /*#__PURE__*/_jsxs(\"div\", {\n      className: \"radio-custom\",\n      children: [/*#__PURE__*/_jsx(Input, {\n        type: \"radio\",\n        name: \"status\",\n        id: \"deactive\",\n        value: \"0\",\n        onChange: handleChange,\n        defaultChecked: true,\n        invalid: validation ? true : false\n      }), /*#__PURE__*/_jsx(Label, {\n        \"for\": \"deactive\",\n        check: true,\n        children: \"Deactive\"\n      })]\n    }) : /*#__PURE__*/_jsxs(\"div\", {\n      className: \"radio-custom\",\n      children: [/*#__PURE__*/_jsx(Input, {\n        type: \"radio\",\n        name: \"status\",\n        id: \"deactive\",\n        value: \"0\",\n        onChange: handleChange,\n        invalid: validation ? true : false\n      }), /*#__PURE__*/_jsx(Label, {\n        \"for\": \"deactive\",\n        check: true,\n        children: \"Deactive\"\n      })]\n    }), /*#__PURE__*/_jsx(FormFeedback, {\n      children: validation\n    })]\n  }) : '';\n}","map":null,"metadata":{},"sourceType":"module"}