{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst settingSlice = createSlice({\n  name: \"Setting\",\n  initialState: {\n    main: {\n      driverWaitTime: 0,\n      serviceFee: 0,\n      maxServiceFee: 0,\n      deliveryDistance: 0,\n      minDeliveryCharge: 0,\n      deliveryExtraFee: 0,\n      fixLimitDeliveryDistance: 0,\n      deliveryExtraFeeUnit: 0,\n      vatCharge: 0,\n      fixDriverDistance: 0,\n      minDriverPayFirst: 0,\n      extraDriverPaySecond: 0,\n      deliveryExtraPayUnit: 0,\n      deliveryExtraPay: 0,\n      taxPay: 0\n    },\n    order: {\n      isLoading: true,\n      data: []\n    },\n    orderDetail: {\n      vehicleType: '',\n      maxDistance: '',\n      packageLimit: []\n    }\n  },\n  reducers: {\n    setMainSetting: (state, action) => {\n      state.main = action.payload;\n    },\n    setOrderList: (state, action) => {\n      state.order = {\n        isLoading: false,\n        data: action.payload\n      };\n    },\n    setOrderDetail: (state, action) => {\n      state.orderDetail = action.payload;\n    },\n    unSetOrderDetail: (state, action) => {\n      state.orderDetail = {\n        vehicleType: '',\n        maxDistance: '',\n        packageLimit: []\n      };\n    }\n  }\n});\nexport default settingSlice.reducer;\nconst {\n  setMainSetting,\n  setOrderList,\n  setOrderDetail,\n  unSetOrderDetail\n} = settingSlice.actions;\nexport const getMainSetting = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/main/list', {});\n    dispatch(setMainSetting(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const updateMainSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/main/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getOrderSettingList = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/order/list', {});\n    dispatch(unSetOrderDetail());\n    dispatch(setOrderList(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getOrderSettingDetail = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/order/detail', value);\n    dispatch(setOrderDetail(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const updateOrderSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/order/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/admin/reducers/settingSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","settingSlice","name","initialState","main","driverWaitTime","serviceFee","maxServiceFee","deliveryDistance","minDeliveryCharge","deliveryExtraFee","fixLimitDeliveryDistance","deliveryExtraFeeUnit","vatCharge","fixDriverDistance","minDriverPayFirst","extraDriverPaySecond","deliveryExtraPayUnit","deliveryExtraPay","taxPay","order","isLoading","data","orderDetail","vehicleType","maxDistance","packageLimit","reducers","setMainSetting","state","action","payload","setOrderList","setOrderDetail","unSetOrderDetail","reducer","actions","getMainSetting","dispatch","res","error","updateMainSetting","value","getOrderSettingList","getOrderSettingDetail","updateOrderSetting"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAASC,OAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,IAAI,EAAC;AACDC,MAAAA,cAAc,EAAC,CADd;AAEDC,MAAAA,UAAU,EAAC,CAFV;AAGDC,MAAAA,aAAa,EAAC,CAHb;AAIDC,MAAAA,gBAAgB,EAAC,CAJhB;AAKDC,MAAAA,iBAAiB,EAAC,CALjB;AAMDC,MAAAA,gBAAgB,EAAC,CANhB;AAODC,MAAAA,wBAAwB,EAAC,CAPxB;AAQDC,MAAAA,oBAAoB,EAAC,CARpB;AASDC,MAAAA,SAAS,EAAC,CATT;AAUDC,MAAAA,iBAAiB,EAAC,CAVjB;AAWDC,MAAAA,iBAAiB,EAAC,CAXjB;AAYDC,MAAAA,oBAAoB,EAAC,CAZpB;AAaDC,MAAAA,oBAAoB,EAAC,CAbpB;AAcDC,MAAAA,gBAAgB,EAAC,CAdhB;AAeDC,MAAAA,MAAM,EAAC;AAfN,KADI;AAkBTC,IAAAA,KAAK,EAAC;AACFC,MAAAA,SAAS,EAAC,IADR;AAEFC,MAAAA,IAAI,EAAC;AAFH,KAlBG;AAsBTC,IAAAA,WAAW,EAAC;AACRC,MAAAA,WAAW,EAAC,EADJ;AAERC,MAAAA,WAAW,EAAC,EAFJ;AAGRC,MAAAA,YAAY,EAAC;AAHL;AAtBH,GAFgB;AA8B7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,cAAc,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC3BD,MAAAA,KAAK,CAACzB,IAAN,GAAW0B,MAAM,CAACC,OAAlB;AACH,KAHI;AAILC,IAAAA,YAAY,EAAC,CAACH,KAAD,EAAOC,MAAP,KAAgB;AACzBD,MAAAA,KAAK,CAACT,KAAN,GAAa;AACTC,QAAAA,SAAS,EAAC,KADD;AAETC,QAAAA,IAAI,EAACQ,MAAM,CAACC;AAFH,OAAb;AAIH,KATI;AAULE,IAAAA,cAAc,EAAC,CAACJ,KAAD,EAAOC,MAAP,KAAgB;AAC3BD,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACH,KAZI;AAaLG,IAAAA,gBAAgB,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;AAC7BD,MAAAA,KAAK,CAACN,WAAN,GAAkB;AACdC,QAAAA,WAAW,EAAC,EADE;AAEdC,QAAAA,WAAW,EAAC,EAFE;AAGdC,QAAAA,YAAY,EAAC;AAHC,OAAlB;AAKH;AAnBI;AA9BoB,CAAD,CAAhC;AAoDA,eAAezB,YAAY,CAACkC,OAA5B;AACA,MAAM;AAACP,EAAAA,cAAD;AAAgBI,EAAAA,YAAhB;AAA6BC,EAAAA,cAA7B;AAA4CC,EAAAA;AAA5C,IAAgEjC,YAAY,CAACmC,OAAnF;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAiB;AACjD,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzC,OAAO,CAAC,MAAD,EAAQ,oBAAR,EAA6B,EAA7B,CAAvB;AACAwC,IAAAA,QAAQ,CAACV,cAAc,CAACW,GAAG,CAACjB,IAAJ,CAASA,IAAV,CAAf,CAAR;AACH,GAHD,CAGE,OAAOkB,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvC,OAAO,CAACyC,KAAD,CAAR,CAAR;AACH;AACJ,CAPM;AAQP,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW,MAAMJ,QAAN,IAAkB;AAC1D,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzC,OAAO,CAAC,MAAD,EAAQ,sBAAR,EAA+B4C,KAA/B,CAAvB;AACAJ,IAAAA,QAAQ,CAACtC,UAAU,CAACuC,GAAG,CAACjB,IAAL,CAAX,CAAR;AACH,GAHD,CAGE,OAAOkB,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvC,OAAO,CAACyC,KAAD,CAAR,CAAR;AACH;AACJ,CAPM;AAQP,OAAO,MAAMG,mBAAmB,GAAG,MAAM,MAAML,QAAN,IAAiB;AACtD,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzC,OAAO,CAAC,MAAD,EAAQ,qBAAR,EAA8B,EAA9B,CAAvB;AACAwC,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACAI,IAAAA,QAAQ,CAACN,YAAY,CAACO,GAAG,CAACjB,IAAJ,CAASA,IAAV,CAAb,CAAR;AACH,GAJD,CAIE,OAAOkB,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvC,OAAO,CAACyC,KAAD,CAAR,CAAR;AACH;AACJ,CARM;AASP,OAAO,MAAMI,qBAAqB,GAAIF,KAAD,IAAW,MAAMJ,QAAN,IAAiB;AAC7D,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzC,OAAO,CAAC,MAAD,EAAQ,uBAAR,EAAgC4C,KAAhC,CAAvB;AACAJ,IAAAA,QAAQ,CAACL,cAAc,CAACM,GAAG,CAACjB,IAAJ,CAASA,IAAV,CAAf,CAAR;AACH,GAHD,CAGE,OAAOkB,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvC,OAAO,CAACyC,KAAD,CAAR,CAAR;AACH;AACJ,CAPM;AAQP,OAAO,MAAMK,kBAAkB,GAAIH,KAAD,IAAW,MAAMJ,QAAN,IAAiB;AAC1D,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzC,OAAO,CAAC,MAAD,EAAQ,uBAAR,EAAgC4C,KAAhC,CAAvB;AACAJ,IAAAA,QAAQ,CAACtC,UAAU,CAACuC,GAAG,CAACjB,IAAL,CAAX,CAAR;AACH,GAHD,CAGE,OAAOkB,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvC,OAAO,CAACyC,KAAD,CAAR,CAAR;AACH;AACJ,CAPM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst settingSlice = createSlice({\n    name:\"Setting\",\n    initialState:{\n        main:{\n            driverWaitTime:0,\n            serviceFee:0,\n            maxServiceFee:0,\n            deliveryDistance:0,\n            minDeliveryCharge:0,\n            deliveryExtraFee:0,\n            fixLimitDeliveryDistance:0,\n            deliveryExtraFeeUnit:0,\n            vatCharge:0,\n            fixDriverDistance:0,\n            minDriverPayFirst:0,\n            extraDriverPaySecond:0,\n            deliveryExtraPayUnit:0,\n            deliveryExtraPay:0,\n            taxPay:0\n        },\n        order:{\n            isLoading:true,\n            data:[]\n        },\n        orderDetail:{\n            vehicleType:'',\n            maxDistance:'',\n            packageLimit:[]\n        }\n    },\n    reducers:{\n        setMainSetting:(state,action)=>{\n            state.main=action.payload\n        },\n        setOrderList:(state,action)=>{\n            state.order= {\n                isLoading:false,\n                data:action.payload\n            }\n        },\n        setOrderDetail:(state,action)=>{\n            state.orderDetail = action.payload\n        },\n        unSetOrderDetail:(state,action)=>{\n            state.orderDetail={\n                vehicleType:'',\n                maxDistance:'',\n                packageLimit:[]\n            }\n        }\n    }\n})\nexport default settingSlice.reducer\nconst {setMainSetting,setOrderList,setOrderDetail,unSetOrderDetail} = settingSlice.actions\nexport const getMainSetting = () => async dispatch =>{\n    try {\n        let res = await callApi('post','/setting/main/list',{})\n        dispatch(setMainSetting(res.data.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const updateMainSetting = (value) => async dispatch => {\n    try {\n        let res = await callApi('post','/setting/main/update',value)\n        dispatch(apiSuccess(res.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const getOrderSettingList = () => async dispatch =>{\n    try {\n        let res = await callApi('post','/setting/order/list',{})\n        dispatch(unSetOrderDetail())\n        dispatch(setOrderList(res.data.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const getOrderSettingDetail = (value) => async dispatch =>{\n    try {\n        let res = await callApi('post','/setting/order/detail',value)\n        dispatch(setOrderDetail(res.data.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const updateOrderSetting = (value) => async dispatch =>{\n    try {\n        let res = await callApi('post','/setting/order/update',value)\n        dispatch(apiSuccess(res.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}"]},"metadata":{},"sourceType":"module"}