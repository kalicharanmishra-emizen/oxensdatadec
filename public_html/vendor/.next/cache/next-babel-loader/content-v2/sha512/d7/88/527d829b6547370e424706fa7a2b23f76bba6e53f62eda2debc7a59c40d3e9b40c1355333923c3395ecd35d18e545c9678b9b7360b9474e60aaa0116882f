{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/components/Form/FormInputCom.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FormFeedback, Input } from \"reactstrap\";\nexport default function FormInputCom(props) {\n  const {\n    0: formData,\n    1: setFormData\n  } = useState('');\n  const {\n    0: validation,\n    1: setValidation\n  } = useState(''); // const [submitValidate, setsubmitValidate] = useState(false)\n\n  let isDefault = false;\n\n  if ('isDefault' in props) {\n    isDefault = props.isDefault;\n  }\n\n  useEffect(() => {\n    setFormData(props.defValue);\n\n    if (props.defValue != '') {\n      validateData(props.defValue); // setValidation(null)\n    }\n  }, [props.defValue]);\n\n  const validateData = async value => {\n    if (props.validator.length == 0) {\n      setValidation(null);\n    } else {\n      props.validator.some(data => {\n        let option = [];\n\n        if ('valOption' in data) {\n          option = data.valOption;\n        }\n\n        if ('isOptional' in data) {\n          if (data.isNot) {\n            if (value != '' && value != null && !data.property(value, option)) {\n              setValidation(data.message);\n              return true;\n            } else {\n              setValidation(null);\n            }\n          } else {\n            if (value != '' && value != null && data.property(value, option)) {\n              setValidation(data.message);\n              return true;\n            } else {\n              setValidation(null);\n            }\n          }\n        } else {\n          if (data.isNot) {\n            if (!data.property(value, option)) {\n              setValidation(data.message);\n              return true;\n            } else {\n              setValidation(null);\n            }\n          } else {\n            if (data.property(value, option)) {\n              setValidation(data.message);\n              return true;\n            } else {\n              setValidation(null);\n            }\n          }\n        }\n      });\n    }\n  };\n\n  const handleChange = async e => {\n    setFormData(e.target.value);\n    await validateData(e.target.value);\n  };\n\n  useEffect(() => {\n    if (validation !== '') {\n      let rowReturnData = {\n        key: props.name,\n        error: validation,\n        data: formData\n      };\n      props.getValue(rowReturnData);\n    }\n  }, [validation, formData]);\n  useEffect(() => {\n    if (props.submitValidate) {\n      validateData(formData);\n    }\n  }, [props.submitValidate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      className: \"form-control-alternative\",\n      type: props.type,\n      name: props.name,\n      placeholder: props.placeholder,\n      value: formData,\n      disabled: isDefault,\n      onChange: handleChange,\n      invalid: validation ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n      children: validation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/components/Form/FormInputCom.js"],"names":["React","useEffect","useState","FormFeedback","Input","FormInputCom","props","formData","setFormData","validation","setValidation","isDefault","defValue","validateData","value","validator","length","some","data","option","valOption","isNot","property","message","handleChange","e","target","rowReturnData","key","name","error","getValue","submitValidate","type","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAqC,YAArC;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAExC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,EAAD,CAA5C,CAHwC,CAIxC;;AACA,MAAIS,SAAS,GAAE,KAAf;;AACA,MAAI,eAAeL,KAAnB,EAA0B;AACtBK,IAAAA,SAAS,GAAEL,KAAK,CAACK,SAAjB;AACH;;AACDV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW,CAACF,KAAK,CAACM,QAAP,CAAX;;AACA,QAAIN,KAAK,CAACM,QAAN,IAAgB,EAApB,EAAwB;AACpBC,MAAAA,YAAY,CAACP,KAAK,CAACM,QAAP,CAAZ,CADoB,CAEpB;AACH;AACJ,GANQ,EAMP,CAACN,KAAK,CAACM,QAAP,CANO,CAAT;;AAOA,QAAMC,YAAY,GAAE,MAAOC,KAAP,IAAe;AAC/B,QAAIR,KAAK,CAACS,SAAN,CAAgBC,MAAhB,IAAwB,CAA5B,EAA+B;AAC3BN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAFD,MAEK;AACDJ,MAAAA,KAAK,CAACS,SAAN,CAAgBE,IAAhB,CAAsBC,IAAD,IAAQ;AACzB,YAAIC,MAAM,GAAC,EAAX;;AACA,YAAG,eAAeD,IAAlB,EACA;AACIC,UAAAA,MAAM,GAAGD,IAAI,CAACE,SAAd;AACH;;AACD,YAAI,gBAAgBF,IAApB,EAA0B;AACtB,cAAIA,IAAI,CAACG,KAAT,EAAgB;AACZ,gBAAIP,KAAK,IAAG,EAAR,IAAcA,KAAK,IAAI,IAAxB,IAAiC,CAACI,IAAI,CAACI,QAAL,CAAcR,KAAd,EAAoBK,MAApB,CAArC,EAAiE;AAC7DT,cAAAA,aAAa,CAACQ,IAAI,CAACK,OAAN,CAAb;AACA,qBAAO,IAAP;AACH,aAHD,MAGK;AACDb,cAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,WAPD,MAOK;AACD,gBAAII,KAAK,IAAG,EAAR,IAAcA,KAAK,IAAI,IAAxB,IAAiCI,IAAI,CAACI,QAAL,CAAcR,KAAd,EAAoBK,MAApB,CAApC,EAAgE;AAC5DT,cAAAA,aAAa,CAACQ,IAAI,CAACK,OAAN,CAAb;AACA,qBAAO,IAAP;AACH,aAHD,MAGK;AACDb,cAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ;AACJ,SAhBD,MAgBK;AACD,cAAIQ,IAAI,CAACG,KAAT,EAAgB;AACZ,gBAAG,CAACH,IAAI,CAACI,QAAL,CAAcR,KAAd,EAAoBK,MAApB,CAAJ,EAAgC;AAC5BT,cAAAA,aAAa,CAACQ,IAAI,CAACK,OAAN,CAAb;AACA,qBAAO,IAAP;AACH,aAHD,MAGK;AACDb,cAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,WAPD,MAOK;AACD,gBAAGQ,IAAI,CAACI,QAAL,CAAcR,KAAd,EAAoBK,MAApB,CAAH,EAA+B;AAC3BT,cAAAA,aAAa,CAACQ,IAAI,CAACK,OAAN,CAAb;AACA,qBAAO,IAAP;AACH,aAHD,MAGK;AACDb,cAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ;AACJ;AAEJ,OAxCD;AAyCH;AAEJ,GA/CD;;AAgDA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAW;AAC5BjB,IAAAA,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAX;AACA,UAAMD,YAAY,CAACY,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAlB;AACH,GAHD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,UAAU,KAAI,EAAlB,EAAsB;AAClB,UAAIkB,aAAa,GAAC;AACdC,QAAAA,GAAG,EAACtB,KAAK,CAACuB,IADI;AAEdC,QAAAA,KAAK,EAACrB,UAFQ;AAGdS,QAAAA,IAAI,EAACX;AAHS,OAAlB;AAKAD,MAAAA,KAAK,CAACyB,QAAN,CAAeJ,aAAf;AACH;AACJ,GATQ,EASN,CAAClB,UAAD,EAAYF,QAAZ,CATM,CAAT;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,KAAK,CAAC0B,cAAT,EAAwB;AACpBnB,MAAAA,YAAY,CAACN,QAAD,CAAZ;AACH;AACJ,GAJQ,EAIN,CAACD,KAAK,CAAC0B,cAAP,CAJM,CAAT;AAKA,sBACQ;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,SAAS,EAAC,0BADd;AAEI,MAAA,IAAI,EAAE1B,KAAK,CAAC2B,IAFhB;AAGI,MAAA,IAAI,EAAE3B,KAAK,CAACuB,IAHhB;AAII,MAAA,WAAW,EAAEvB,KAAK,CAAC4B,WAJvB;AAKI,MAAA,KAAK,EAAE3B,QALX;AAMI,MAAA,QAAQ,EAAEI,SANd;AAOI,MAAA,QAAQ,EAAEa,YAPd;AAQI,MAAA,OAAO,EAAGf,UAAU,GAAG,IAAH,GAAU;AARlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,YAAD;AAAA,gBACKA;AADL;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADR;AAiBH","sourcesContent":["import React, { useEffect,useState } from 'react'\nimport { FormFeedback, Input, } from \"reactstrap\";\nexport default function FormInputCom(props) {\n    \n    const [formData, setFormData] = useState('')\n    const [validation, setValidation] = useState('')\n    // const [submitValidate, setsubmitValidate] = useState(false)\n    let isDefault= false;\n    if ('isDefault' in props) {\n        isDefault= props.isDefault\n    }\n    useEffect(() => {\n        setFormData(props.defValue)\n        if (props.defValue!='') {\n            validateData(props.defValue)\n            // setValidation(null)\n        }\n    },[props.defValue] )\n    const validateData= async (value)=>{\n        if (props.validator.length==0) {\n            setValidation(null)\n        }else{\n            props.validator.some((data)=>{\n                let option=[]\n                if('valOption' in data)\n                {\n                    option = data.valOption\n                }\n                if ('isOptional' in data) { \n                    if (data.isNot) {\n                        if((value !='' && value != null) && !data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }else{\n                        if((value !='' && value != null) && data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }\n                }else{\n                    if (data.isNot) {\n                        if(!data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }else{\n                        if(data.property(value,option)){\n                            setValidation(data.message)\n                            return true\n                        }else{\n                            setValidation(null)\n                        }\n                    }\n                }\n                \n            })\n        }\n       \n    }\n    const handleChange = async (e)=>{\n        setFormData(e.target.value)\n        await validateData(e.target.value)\n    }\n    useEffect(() => {\n        if (validation !=='') {\n            let rowReturnData={\n                key:props.name,\n                error:validation,\n                data:formData\n            }\n            props.getValue(rowReturnData)  \n        }\n    }, [validation,formData])\n    useEffect(() => {\n        if(props.submitValidate){\n            validateData(formData)\n        }\n    }, [props.submitValidate])\n    return (\n            <>\n                <Input\n                    className=\"form-control-alternative\"\n                    type={props.type}\n                    name={props.name}\n                    placeholder={props.placeholder}\n                    value={formData}\n                    disabled={isDefault}\n                    onChange={handleChange}\n                    invalid={ validation ? true : false}\n                />\n                <FormFeedback >\n                    {validation}\n                </FormFeedback>\n            </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}