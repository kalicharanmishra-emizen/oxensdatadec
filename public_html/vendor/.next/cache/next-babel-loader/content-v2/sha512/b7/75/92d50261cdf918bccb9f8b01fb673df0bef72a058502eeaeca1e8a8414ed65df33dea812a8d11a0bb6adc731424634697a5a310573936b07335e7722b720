{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst settingSlice = createSlice({\n  name: \"Setting\",\n  initialState: {\n    main: {\n      fixLimitDeliveryDistance: 0,\n      deliveryDistance: 0,\n      minDeliveryCharge: 0,\n      deliveryExtraFeeUnit: 0,\n      deliveryExtraFee: 0\n    },\n    storeDetail: {\n      data: null\n    }\n  },\n  reducers: {\n    setMainSetting: (state, action) => {\n      state.main = action.payload;\n    },\n    setStoreDetail: (state, action) => {\n      state.storeDetail.data = action.payload.data;\n    }\n  }\n});\nexport default settingSlice.reducer;\nconst {\n  setMainSetting,\n  setStoreDetail\n} = settingSlice.actions;\nexport const getMainSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/list', value);\n    dispatch(setMainSetting(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const updateMainSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getStoreDetail = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/store/detail', {});\n    dispatch(setStoreDetail(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}