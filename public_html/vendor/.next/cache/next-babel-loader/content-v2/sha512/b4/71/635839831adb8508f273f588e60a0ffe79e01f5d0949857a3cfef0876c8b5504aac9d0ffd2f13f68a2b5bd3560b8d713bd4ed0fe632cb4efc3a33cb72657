{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nexport default function FromInputSelect(props) {\n  var _useState = useState(null),\n      defaultOption = _useState[0],\n      setDefaultOption = _useState[1];\n\n  var isDefault = props.isDefault;\n  useEffect(function () {\n    if (typeof props.defValue === 'string') {\n      setDefaultOption(props.options.find(function (data) {\n        return data.value === props.defValue;\n      }));\n    } else {\n      var optiondata = [];\n      props.defValue.map(function (e) {\n        optiondata.push(props.options.find(function (data) {\n          return data.value === e;\n        }));\n      });\n      setDefaultOption(optiondata);\n    }\n  }, [props.defValue]);\n\n  var handleChange = function handleChange(e) {\n    if (e.length === undefined) {\n      props.getValue(props.name, e.value);\n    } else {\n      var optiondata = [];\n      e.map(function (data) {\n        if (typeof data !== 'string') {\n          optiondata.push(data.value);\n        } else {\n          optiondata.push(data);\n        }\n      });\n      props.getValue(props.name, optiondata);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [defaultOption ? /*#__PURE__*/_jsx(Select, {\n      instanceId: props.id,\n      isDisabled: isDefault,\n      onChange: handleChange,\n      isMulti: props.isMulti,\n      options: props.options,\n      value: defaultOption\n    }) : /*#__PURE__*/_jsx(Select, {\n      instanceId: props.id,\n      isDisabled: isDefault,\n      onChange: handleChange,\n      isMulti: props.isMulti,\n      options: props.options\n    }), props.error ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"validation-error-custome\",\n      children: props.error\n    }) : '']\n  });\n}","map":null,"metadata":{},"sourceType":"module"}