{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/components/Model/POSuser.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport { callApi } from '../../Helper/helper';\nimport \"../../styles/posUser.css\";\n\nconst POSuser = props => {\n  var _props$itemId;\n\n  // globel states\n  const {\n    0: userFormModal,\n    1: setUserFormModal\n  } = useState(false);\n  const {\n    0: existsUser,\n    1: setExistsUser\n  } = useState(\"\");\n  const initalValue = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNo: (_props$itemId = props === null || props === void 0 ? void 0 : props.itemId) !== null && _props$itemId !== void 0 ? _props$itemId : \"\"\n  }; // form validation\n\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().required('First name is required'),\n    lastName: Yup.string().required('Last name is required'),\n    email: Yup.string().required('Email is required').email(\"Email must be a valid email address\"),\n    phoneNo: Yup.string().required('Phone No is required').matches(/^[1-9][0-9]{9,13}$/g, 'Phone number is not valid')\n  }); // submit form and save POS user in db\n\n  const formSubmitHandal = async value => {\n    try {\n      var _res$data, _res$data$data, _res$data2, _res$data2$data, _res$data3, _res$data3$data, _res$data4, _res$data4$data, _res$data5, _res$data5$data, _res$data6;\n\n      const res = await callApi(\"post\", \"/store/createPOSuser\", value);\n\n      if (res) {\n        setUserFormModal(false);\n      }\n\n      setExistsUser(\"\");\n      const rawData = {\n        key: res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data._id,\n        value: (res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$data = _res$data2.data) === null || _res$data2$data === void 0 ? void 0 : _res$data2$data.firstName) + \" \" + (res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$data = _res$data3.data) === null || _res$data3$data === void 0 ? void 0 : _res$data3$data.lastName) + \" \" + (res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : (_res$data4$data = _res$data4.data) === null || _res$data4$data === void 0 ? void 0 : _res$data4$data.phoneNo),\n        phoneno: res === null || res === void 0 ? void 0 : (_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : (_res$data5$data = _res$data5.data) === null || _res$data5$data === void 0 ? void 0 : _res$data5$data.phoneNo\n      };\n      props.getTempUser(rawData);\n      console.log(\"rawData\", rawData);\n      console.log(\"res\", res === null || res === void 0 ? void 0 : (_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : _res$data6.data);\n    } catch (error) {\n      setExistsUser(error.message); // already exists user set error\n    }\n  };\n\n  const handleReset = resetForm => {\n    resetForm();\n    setExistsUser(\"\");\n  };\n\n  useEffect(() => {\n    setUserFormModal(props.isOpen); // Toggle user form model \n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: userFormModal,\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        className: \"modelHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modelHeaderTitle\",\n          children: \"Create New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-close\",\n          onClick: () => props.toggle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: initalValue,\n          validationSchema: validationSchema,\n          onSubmit: (values, {\n            resetForm\n          }) => {\n            formSubmitHandal(values);\n            resetForm({\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              phoneNo: \"\"\n            });\n          },\n          children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: formikProps.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xl: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \" First Name \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"firstName\",\n                    placeholder: \"Enter First Name\",\n                    value: formikProps.values.firstName,\n                    onChange: formikProps.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this), formikProps.touched.firstName && formikProps.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    className: \"form-error\",\n                    children: formikProps.errors.firstName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 55\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xl: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \" Last Name \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"lastName\",\n                    placeholder: \"Enter last Name\",\n                    value: formikProps.values.lastName,\n                    onChange: formikProps.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this), formikProps.touched.lastName && formikProps.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    className: \"form-error\",\n                    children: formikProps.errors.lastName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 55\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xl: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \" Email  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"email\",\n                    placeholder: \"Enter Email\",\n                    value: formikProps.values.email,\n                    onChange: formikProps.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 45\n                  }, this), formikProps.touched.email && formikProps.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    className: \"form-error\",\n                    children: formikProps.errors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 55\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xl: \"6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \" Phone Number \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"phoneNo\",\n                    placeholder: \"Enter Mobile No\",\n                    value: formikProps.values.phoneNo,\n                    onChange: formikProps.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this), formikProps.touched.phoneNo && formikProps.errors.phoneNo ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    className: \"form-error\",\n                    children: formikProps.errors.phoneNo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 55\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xl: \"12\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: existsUser && existsUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-error\",\n                    style: {\n                      color: \"red\"\n                    },\n                    children: existsUser\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 55\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset.bind(null, formikProps.resetForm),\n                  type: \"button\",\n                  color: \"danger\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default POSuser;","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/components/Model/POSuser.js"],"names":["React","useEffect","useState","Yup","Formik","Button","Col","Form","FormGroup","Input","Label","Modal","ModalBody","ModalHeader","Row","callApi","POSuser","props","userFormModal","setUserFormModal","existsUser","setExistsUser","initalValue","firstName","lastName","email","phoneNo","itemId","validationSchema","object","shape","string","required","matches","formSubmitHandal","value","res","rawData","key","data","_id","phoneno","getTempUser","console","log","error","message","handleReset","resetForm","isOpen","toggle","values","formikProps","handleSubmit","handleChange","touched","errors","color","bind","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport * as Yup from 'yup'\nimport { Formik } from 'formik';\nimport { Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, Row } from 'reactstrap'\nimport { callApi } from '../../Helper/helper';\nimport \"../../styles/posUser.css\"\nconst POSuser = (props) => {\n  \n    // globel states\n    const [userFormModal, setUserFormModal] = useState(false)\n    const [existsUser, setExistsUser] = useState(\"\")\n    const initalValue = {\n        firstName:\"\",\n        lastName:\"\",\n        email:\"\",\n        phoneNo:props?.itemId ?? \"\",\n    }\n\n    // form validation\n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string().required('First name is required'),\n        lastName: Yup.string().required('Last name is required'),\n        email: Yup.string().required('Email is required').email(\"Email must be a valid email address\"),\n        phoneNo: Yup.string().required('Phone No is required').matches(/^[1-9][0-9]{9,13}$/g,'Phone number is not valid'),\n    })\n\n    // submit form and save POS user in db\n    const formSubmitHandal = async (value) => {\n        try {\n            const res = await callApi(\"post\", \"/store/createPOSuser\", value)\n            if (res) {\n                setUserFormModal(false)\n            }\n            setExistsUser(\"\")\n            const rawData = {\n                key:res?.data?.data?._id,\n                value:res?.data?.data?.firstName + \" \" + res?.data?.data?.lastName + \" \" + res?.data?.data?.phoneNo, \n                phoneno:res?.data?.data?.phoneNo\n            }\n            props.getTempUser(rawData)\n            console.log(\"rawData\", rawData);\n            console.log(\"res\", res?.data?.data);\n        } catch (error) {\n            setExistsUser(error.message) // already exists user set error\n        }\n    }\n\n    const handleReset = (resetForm) => {\n        resetForm();\n        setExistsUser(\"\")\n    };\n\n    useEffect(() => {\n        setUserFormModal(props.isOpen) // Toggle user form model \n    }, [props.isOpen])\n\n  return (\n    <>\n        <Modal isOpen={ userFormModal } className=\"\">\n            <ModalHeader className=\"modelHeader\">\n                <div className=\"modelHeaderTitle\">Create New User</div>\n                <div className=\"bg-close\" onClick={() => props.toggle()}></div>\n            </ModalHeader>\n            <ModalBody className=\"\">\n                    <Formik\n                        enableReinitialize\n                        initialValues={initalValue}\n                        validationSchema={validationSchema}\n                        onSubmit={ \n                            (values, {resetForm}) => {\n                                formSubmitHandal(values)\n                                resetForm({\n                                    firstName:\"\",\n                                    lastName:\"\",\n                                    email:\"\",\n                                    phoneNo:\"\",\n                                })\n                            }\n                        }\n                    >\n                    {\n                        (formikProps)=>(\n                            <Form onSubmit={formikProps.handleSubmit}>\n                                <Row>\n                                    <Col xl=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\"> First Name </label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"firstName\"\n                                                placeholder=\"Enter First Name\"\n                                                value={ formikProps.values.firstName }  \n                                                onChange={ formikProps.handleChange } \n                                            />\n                                            {   \n                                                formikProps.touched.firstName && formikProps.errors.firstName \n                                                    ? <div style={{color:\"red\"}} className=\"form-error\">{formikProps.errors.firstName}</div> \n                                                    : null\n                                            }\n                                        </FormGroup>\n                                    </Col>\n                                    <Col xl=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\"> Last Name </label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"lastName\"\n                                                placeholder=\"Enter last Name\"\n                                                value={ formikProps.values.lastName }  \n                                                onChange={ formikProps.handleChange } \n                                            />\n                                            {  \n                                                formikProps.touched.lastName && formikProps.errors.lastName \n                                                    ? <div style={{color:\"red\"}} className=\"form-error\">{formikProps.errors.lastName}</div> \n                                                    : null\n                                            }\n                                        </FormGroup>\n                                    </Col>\n                                    <Col xl=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\"> Email  </label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"email\"\n                                                placeholder=\"Enter Email\"\n                                                value={ formikProps.values.email }  \n                                                onChange={ formikProps.handleChange } \n                                            />\n                                            {   \n                                                formikProps.touched.email && formikProps.errors.email \n                                                    ? <div style={{color:\"red\"}} className=\"form-error\">{formikProps.errors.email}</div> \n                                                    : null\n                                            }\n                                        </FormGroup>\n                                    </Col>\n                                    <Col xl=\"6\">\n                                        <FormGroup>\n                                            <label className=\"form-control-label\"> Phone Number </label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"phoneNo\"\n                                                placeholder=\"Enter Mobile No\"\n                                                value={ formikProps.values.phoneNo }  \n                                                onChange={ formikProps.handleChange } \n                                            />\n                                            {\n                                                formikProps.touched.phoneNo && formikProps.errors.phoneNo \n                                                    ? <div style={{color:\"red\"}} className=\"form-error\">{formikProps.errors.phoneNo}</div> \n                                                    : null\n                                            }\n                                        </FormGroup>\n                                    </Col>\n                                    <Col xl=\"12\">\n                                        <FormGroup>\n                                            {   \n                                                existsUser && existsUser \n                                                    ? <div className=\"form-error\" style={{color:\"red\"}}>{existsUser}</div> \n                                                    : \"\"\n                                            }\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"6\">\n                                        <Button onClick={handleReset.bind(null, formikProps.resetForm)}\n                                            type=\"button\"\n                                            color=\"danger\"\n                                            style={{width:\"100%\"}}\n                                            >\n                                            Reset\n                                        </Button>\n                                    </Col>\n                                    <Col md=\"6\">\n                                        <Button\n                                            color=\"primary\"\n                                            type=\"submit\"\n                                            style={{width:\"100%\"}}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        )\n                    }\n                    </Formik> \n            </ModalBody>\n        </Modal>\n    </>\n  )\n}\n\nexport default POSuser"]},"metadata":{},"sourceType":"module"}