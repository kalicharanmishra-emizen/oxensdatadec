{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Vendor from 'layouts/Vendor';\nimport UserHeader from 'components/Headers/UserHeader';\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Row } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport { unSetApiSucc, unSetApiFail } from \"reducers/mainSlice\";\nimport { createCustomeVarient, VarientDependent } from \"reducers/menuSlice\";\nimport { Formik, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport nProgress from \"nprogress\";\n\nfunction Create() {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    item,\n    customize,\n    varient\n  } = router.query;\n  const {\n    0: depValSchema,\n    1: setDepValSchema\n  } = useState({});\n  const {\n    0: depPrice,\n    1: setDepPrice\n  } = useState([]);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  const apiError = useSelector(state => state.mainSlice.failed);\n  const apiSuccess = useSelector(state => state.mainSlice.success);\n  const variantDapendancyDetails = useSelector(state => state.menuSlice.variantDapendancyDetails);\n  const {\n    0: dependentList,\n    1: setDependentList\n  } = useState([{\n    value: \"empty\",\n    label: \"Select Dependant\"\n  }]);\n  /*form submit handel start*/\n\n  let formSubmit = {\n    showDep: variantDapendancyDetails ? variantDapendancyDetails.is_dependent : false,\n    title: \"\",\n    isDefault: \"0\",\n    price: \"\",\n    dependent_varient: [],\n    dependent_price_temp: {}\n  };\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required!'),\n    isDefault: Yup.string().required('Title is required!'),\n    price: Yup.number().typeError('Price must be a valid number').when(\"showDep\", {\n      is: false,\n      then: Yup.number().required(\"Price is required!\")\n    }),\n    dependent_varient: Yup.array().when(\"showDep\", {\n      is: true,\n      then: Yup.array().min(1, \"Dependent Varient is required!\")\n    }),\n    dependent_price_temp: Yup.object().when(\"dependent_varient\", {\n      is: dependent_varient => dependent_varient.length > 0,\n      then: Yup.object().shape(depValSchema)\n    })\n  });\n\n  const formSubmitHandal = async formData => {\n    let finalData = {\n      customizeId: varient,\n      title: formData.title,\n      isDefault: formData.isDefault,\n      price: formData.price || '0.00'\n    };\n    let dependent_price = [];\n    Object.keys(formData.dependent_price_temp).map(temp => {\n      let depP = depPrice.find(list => list.key == temp);\n\n      if (depP != undefined) {\n        dependent_price.push({\n          varientId: depP.key,\n          title: depP.title,\n          price: formData.dependent_price_temp[temp]\n        });\n      }\n    });\n    finalData.dependent_price = dependent_price;\n    nProgress.start();\n    dispatch(createCustomeVarient(finalData));\n  };\n  /*form submit handel end*/\n\n\n  useEffect(() => {\n    if (varient != undefined) {\n      dispatch(VarientDependent({\n        cusId: varient\n      }));\n      setLoader(false);\n    }\n  }, [varient]);\n  useEffect(() => {\n    if (variantDapendancyDetails) {\n      if (variantDapendancyDetails.is_dependent) {\n        let depList = [];\n        variantDapendancyDetails.dependent.varients.map(data => {\n          depList.push({\n            value: data._id,\n            label: data.title\n          });\n        });\n        setDependentList(depList);\n      }\n    }\n  }, [variantDapendancyDetails]);\n  useEffect(() => {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        toast(apiSuccess.message, {\n          type: 'success',\n          toastId: 12\n        });\n        dispatch(unSetApiSucc());\n        router.push(`/menu/${item}/${customize}/${varient}`);\n        nProgress.done();\n      }\n    }\n\n    if (apiError) {\n      if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n        toast(apiError.message, {\n          type: 'error'\n        });\n        dispatch(unSetApiFail());\n        nProgress.done();\n      }\n    }\n  }, [apiSuccess, apiError]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(UserHeader, {}), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsxs(\"h3\", {\n                    className: \"mb-0\",\n                    children: [variantDapendancyDetails ? variantDapendancyDetails.title : 'Item', \" Custome Variant Create \"]\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(Formik, {\n                enableReinitialize: variantDapendancyDetails ? true : false,\n                initialValues: formSubmit,\n                validationSchema: validationSchema,\n                validateOnChange: false,\n                validateOnBlur: false,\n                onSubmit: values => formSubmitHandal(values),\n                children: formikProps => {\n                  useEffect(() => {\n                    let selectDependent = formikProps.values.dependent_varient;\n\n                    if (typeof selectDependent === 'object') {\n                      var tempArray = [];\n                      selectDependent.map(list => {\n                        depValSchema[list] = Yup.number().typeError('Price must be a valid number').required(\"Price is required\");\n                        tempArray.push({\n                          key: list,\n                          title: dependentList.find(data => {\n                            return data.value == list;\n                          }).label\n                        });\n                      });\n                      setDepPrice(tempArray);\n                      setDepValSchema(_objectSpread({}, depValSchema));\n                    }\n                  }, [formikProps.values.dependent_varient]);\n                  return /*#__PURE__*/_jsx(Form, {\n                    onSubmit: formikProps.handleSubmit,\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"pl-lg-4\",\n                      children: [/*#__PURE__*/_jsxs(Row, {\n                        className: \"align-items-center\",\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: \"12\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Title\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"title\",\n                              placeholder: \"Enter Title\",\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.title,\n                              error: formikProps.errors.title\n                            })]\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Is Default\"\n                            }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                              name: \"isDefault\",\n                              id: \"isDefault\",\n                              options: [{\n                                value: \"0\",\n                                label: \"No\"\n                              }, {\n                                value: \"1\",\n                                label: \"Yes\"\n                              }],\n                              isDefault: false,\n                              isMulti: false,\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.isDefault,\n                              error: formikProps.errors.isDefault\n                            }) : \"\"]\n                          })\n                        }), variantDapendancyDetails ? !variantDapendancyDetails.is_dependent ? /*#__PURE__*/_jsx(Col, {\n                          lg: \"6\",\n                          children: /*#__PURE__*/_jsxs(FormGroup, {\n                            children: [/*#__PURE__*/_jsx(\"label\", {\n                              className: \"form-control-label\",\n                              children: \"Price\"\n                            }), /*#__PURE__*/_jsx(InputCom, {\n                              type: \"text\",\n                              name: \"price\",\n                              placeholder: \"Enter Price of Variant\",\n                              getValue: formikProps.setFieldValue,\n                              defValue: formikProps.values.price,\n                              error: formikProps.errors.price\n                            })]\n                          })\n                        }) : /*#__PURE__*/_jsxs(_Fragment, {\n                          children: [/*#__PURE__*/_jsx(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxs(FormGroup, {\n                              children: [/*#__PURE__*/_jsxs(\"label\", {\n                                className: \"form-control-label\",\n                                children: [variantDapendancyDetails.dependent.title, \" Varient's\"]\n                              }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                                name: \"dependent_varient\",\n                                id: \"dependent_varient\",\n                                options: dependentList,\n                                isDefault: false,\n                                isMulti: true,\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps.values.dependent_varient,\n                                error: formikProps.errors.dependent_varient\n                              }) : \"\"]\n                            })\n                          }), /*#__PURE__*/_jsx(Col, {\n                            lg: \"12\",\n                            children: /*#__PURE__*/_jsx(Row, {\n                              children: /*#__PURE__*/_jsx(FieldArray, {\n                                name: \"dependent_price_temp\",\n                                render: () => depPrice.map(priceList => /*#__PURE__*/_jsx(Col, {\n                                  lg: \"6\",\n                                  children: /*#__PURE__*/_jsxs(FormGroup, {\n                                    children: [/*#__PURE__*/_jsxs(\"label\", {\n                                      className: \"form-control-label\",\n                                      children: [priceList.title, \" Varient Price\"]\n                                    }), /*#__PURE__*/_jsx(InputCom, {\n                                      type: \"text\",\n                                      name: `dependent_price_temp.${priceList.key}`,\n                                      placeholder: \"Enter Price\",\n                                      getValue: formikProps.setFieldValue,\n                                      defValue: formikProps.values.dependent_price_temp ? formikProps.values.dependent_price_temp[`${priceList.key}`] : '',\n                                      error: formikProps.errors.dependent_price_temp ? formikProps.errors.dependent_price_temp[`${priceList.key}`] : null\n                                    })]\n                                  })\n                                }, priceList.key))\n                              })\n                            })\n                          })]\n                        }) : '']\n                      }), /*#__PURE__*/_jsx(Row, {\n                        children: /*#__PURE__*/_jsxs(Col, {\n                          lg: \"12\",\n                          children: [/*#__PURE__*/_jsx(Button, {\n                            className: \"float-right\",\n                            color: \"primary\",\n                            type: \"submit\",\n                            children: \"Save\"\n                          }), /*#__PURE__*/_jsx(Button, {\n                            className: \"float-right mr-2\",\n                            color: \"secondary\",\n                            type: \"button\",\n                            onClick: e => {\n                              e.preventDefault();\n                              router.back();\n                            },\n                            children: \"Back\"\n                          })]\n                        })\n                      })]\n                    })\n                  });\n                }\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\n\nCreate.layout = Vendor;\nexport default Create;","map":null,"metadata":{},"sourceType":"module"}