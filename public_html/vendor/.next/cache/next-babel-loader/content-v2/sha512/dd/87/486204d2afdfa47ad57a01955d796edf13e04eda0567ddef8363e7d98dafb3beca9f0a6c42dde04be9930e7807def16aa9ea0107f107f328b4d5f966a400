{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport Router, { useRouter } from \"next/router\"; // reactstrap components\n\nimport { Container } from \"reactstrap\"; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\nimport { getAuthUser } from \"../reducers/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Vendor(props) {\n  // used for checking current route\n  const router = useRouter();\n  let mainContentRef = /*#__PURE__*/React.createRef();\n  React.useEffect(() => {\n    if (!localStorage.getItem('auth-vendor-token')) {\n      Router.push('/login');\n    }\n\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContentRef.current.scrollTop = 0;\n  }, []);\n  const userDetails = useSelector(state => state.authSlice.loggedInUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (userDetails.data._id == \"\" && localStorage.getItem('auth-vendor-token')) {\n      dispatch(getAuthUser());\n    } else {\n      props.socket.emit('connectUser', {\n        userId: userDetails.data._id\n      });\n    }\n  }, [userDetails]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Sidebar, _objectSpread(_objectSpread({}, props), {}, {\n      routes: routes,\n      logo: {\n        innerLink: \"/\",\n        imgSrc: require('assets/img/brand/logo_color.svg'),\n        imgAlt: \"...\"\n      }\n    })), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"main-content\",\n      ref: mainContentRef,\n      children: [/*#__PURE__*/_jsx(AdminNavbar, _objectSpread({}, props)), props.children, /*#__PURE__*/_jsx(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsx(AdminFooter, {})\n      })]\n    })]\n  });\n}\n\nexport default Vendor;","map":null,"metadata":{},"sourceType":"module"}