{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nimport Router from \"next/router\";\nconst authSlice = createSlice({\n  name: 'users',\n  initialState: {\n    loggedInUser: {\n      statusCode: \"\",\n      message: \"\",\n      data: {\n        _id: \"\",\n        name: \"\",\n        email: \"\",\n        phone_no: \"\",\n        pro_image: \"\",\n        role: []\n      }\n    },\n    profile: null\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      localStorage.setItem('auth-vendor-token', action.payload.data.token);\n      delete action.payload.data.token;\n      state.loggedInUser = action.payload;\n    },\n    authUser: (state, action) => {\n      state.loggedInUser = action.payload;\n    },\n    authProfile: (state, action) => {\n      state.profile = action.payload.data;\n    },\n    logoutSuccess: (state, action) => {\n      state.loggedInUser = {\n        statusCode: \"\",\n        message: \"\",\n        data: {\n          _id: \"\",\n          name: \"\",\n          email: \"\",\n          phone_no: \"\",\n          pro_image: \"\",\n          role: []\n        }\n      };\n    }\n  }\n});\nconst {\n  loginSuccess,\n  logoutSuccess,\n  authProfile,\n  authUser\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const login = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/login', values);\n    dispatch(loginSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('auth-vendor-token');\n  dispatch(logoutSuccess());\n  Router.push('/login');\n};\nexport const getAuthUser = () => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/getauthuser', {});\n    dispatch(authUser(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getProfile = () => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/getprofile', {});\n    dispatch(authProfile(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const updateProfile = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/updategeneral', values, {\n      'Content-Type': 'multipart/form-data'\n    });\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const updatePassword = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/updatepassword', values);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const updateTiming = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/updatevendortiming', values);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const forgetPassword = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/auth/forgetpassword', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const resetPassword = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/auth/resetpassword', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n}; // {type : \"posts/createPost\", payload : {id : 123, title : \"Hello World\"}}","map":null,"metadata":{},"sourceType":"module"}