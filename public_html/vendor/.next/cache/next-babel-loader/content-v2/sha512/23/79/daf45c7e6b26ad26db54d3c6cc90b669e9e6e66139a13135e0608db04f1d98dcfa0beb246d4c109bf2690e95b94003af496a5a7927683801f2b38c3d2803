{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nvar settingSlice = createSlice({\n  name: \"Setting\",\n  initialState: {\n    main: {\n      fixLimitDeliveryDistance: 0,\n      deliveryDistance: 0,\n      minDeliveryCharge: 0,\n      deliveryExtraFeeUnit: 0,\n      deliveryExtraFee: 0\n    },\n    storeDetail: {\n      data: null\n    }\n  },\n  reducers: {\n    setMainSetting: function setMainSetting(state, action) {\n      state.main = action.payload;\n    },\n    setStoreDetail: function setStoreDetail(state, action) {\n      state.storeDetail.data = action.payload.data;\n    }\n  }\n});\nexport default settingSlice.reducer;\nvar _settingSlice$actions = settingSlice.actions,\n    setMainSetting = _settingSlice$actions.setMainSetting,\n    setStoreDetail = _settingSlice$actions.setStoreDetail;\nexport var getMainSetting = function getMainSetting(value) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return callApi('post', '/setting/list', value);\n\n            case 3:\n              res = _context.sent;\n              dispatch(setMainSetting(res.data.data));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch(apiFail(_context.t0));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var updateMainSetting = function updateMainSetting(value) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return callApi('post', '/setting/update', value);\n\n            case 3:\n              res = _context2.sent;\n              dispatch(apiSuccess(res.data));\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch(apiFail(_context2.t0));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var getStoreDetail = function getStoreDetail() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return callApi('post', '/store/detail', {});\n\n            case 3:\n              res = _context3.sent;\n              dispatch(setStoreDetail(res.data));\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch(apiFail(_context3.t0));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/reducers/settingSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","settingSlice","name","initialState","main","fixLimitDeliveryDistance","deliveryDistance","minDeliveryCharge","deliveryExtraFeeUnit","deliveryExtraFee","storeDetail","data","reducers","setMainSetting","state","action","payload","setStoreDetail","reducer","actions","getMainSetting","value","dispatch","res","updateMainSetting","getStoreDetail"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst settingSlice = createSlice({\n    name:\"Setting\",\n    initialState:{\n        main:{\n            fixLimitDeliveryDistance:0,\n            deliveryDistance:0,\n            minDeliveryCharge:0,\n            deliveryExtraFeeUnit:0,\n            deliveryExtraFee:0,\n        },\n        storeDetail:{\n            data:null\n        },\n    },\n    reducers:{\n        setMainSetting:(state,action)=>{\n            state.main=action.payload\n        },\n        setStoreDetail:(state,action) => {\n            state.storeDetail.data=action.payload.data\n        },\n    }\n})\nexport default settingSlice.reducer\nconst {setMainSetting,setStoreDetail} = settingSlice.actions\nexport const getMainSetting = (value) => async dispatch =>{\n    try {\n        let res = await callApi('post','/setting/list',value)\n        dispatch(setMainSetting(res.data.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const updateMainSetting = (value) => async dispatch => {\n    try {\n        let res = await callApi('post','/setting/update',value)\n        dispatch(apiSuccess(res.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const getStoreDetail = () => async dispatch => {\n    try {\n        let res = await callApi('post','/store/detail',{})\n        dispatch(setStoreDetail(res.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}"]},"metadata":{},"sourceType":"module"}