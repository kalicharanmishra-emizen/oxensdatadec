{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { FormFeedback, Input } from \"reactstrap\";\nexport default function FormInputCom(props) {\n  var _useState = useState(''),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  var _useState2 = useState(''),\n      validation = _useState2[0],\n      setValidation = _useState2[1]; // const [submitValidate, setsubmitValidate] = useState(false)\n\n\n  var isDefault = false;\n\n  if ('isDefault' in props) {\n    isDefault = props.isDefault;\n  }\n\n  useEffect(function () {\n    setFormData(props.defValue);\n\n    if (props.defValue != '') {\n      validateData(props.defValue); // setValidation(null)\n    }\n  }, [props.defValue]);\n\n  var validateData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (props.validator.length == 0) {\n                setValidation(null);\n              } else {\n                props.validator.some(function (data) {\n                  var option = [];\n\n                  if ('valOption' in data) {\n                    option = data.valOption;\n                  }\n\n                  if ('isOptional' in data) {\n                    if (data.isNot) {\n                      if (value != '' && value != null && !data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    } else {\n                      if (value != '' && value != null && data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    }\n                  } else {\n                    if (data.isNot) {\n                      if (!data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    } else {\n                      if (data.property(value, option)) {\n                        setValidation(data.message);\n                        return true;\n                      } else {\n                        setValidation(null);\n                      }\n                    }\n                  }\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function validateData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setFormData(e.target.value);\n              _context2.next = 3;\n              return validateData(e.target.value);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChange(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (validation !== '') {\n      var rowReturnData = {\n        key: props.name,\n        error: validation,\n        data: formData\n      };\n      props.getValue(rowReturnData);\n    }\n  }, [validation, formData]);\n  useEffect(function () {\n    if (props.submitValidate) {\n      validateData(formData);\n    }\n  }, [props.submitValidate]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Input, {\n      className: \"form-control-alternative\",\n      type: props.type,\n      name: props.name,\n      placeholder: props.placeholder,\n      value: formData,\n      disabled: isDefault,\n      onChange: handleChange,\n      invalid: validation ? true : false\n    }), /*#__PURE__*/_jsx(FormFeedback, {\n      children: validation\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}