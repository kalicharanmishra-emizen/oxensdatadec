{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst orderSlice = createSlice({\n  name: \"Order\",\n  initialState: {\n    list: {\n      isLoading: true,\n      data: []\n    },\n    activeOrder: {\n      idLoading: true,\n      data: []\n    },\n    detail: null\n  },\n  reducers: {\n    listing: (state, action) => {\n      state.list = {\n        isLoading: false,\n        data: action.payload.data\n      };\n    },\n    setDetail: (state, action) => {\n      state.detail = action.payload.data;\n    },\n    unSetDetail: (state, action) => {\n      state.detail = null;\n    },\n    activeListing: (state, action) => {\n      state.activeOrder = {\n        isLoading: false,\n        data: action.payload.data\n      };\n    }\n  }\n});\nexport default orderSlice.reducer;\nconst {\n  listing,\n  setDetail,\n  unSetDetail,\n  activeListing\n} = orderSlice.actions;\nexport const getOrderList = page => async dispatch => {\n  try {\n    const res = await callApi('post', `/order/list?page=${page}`, {});\n    dispatch(listing(res.data));\n    dispatch(unSetDetail());\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getOrderDetail = value => async dispatch => {\n  try {\n    const res = await callApi('post', '/order/detail', value);\n    dispatch(setDetail(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getActiveOrder = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/order/activeOrder', {});\n    dispatch(activeListing(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/reducers/orderSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","orderSlice","name","initialState","list","isLoading","data","activeOrder","idLoading","detail","reducers","listing","state","action","payload","setDetail","unSetDetail","activeListing","reducer","actions","getOrderList","page","dispatch","res","e","getOrderDetail","value","getActiveOrder","error"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst orderSlice = createSlice({\n    name:\"Order\",\n    initialState:{\n        list:{\n            isLoading:true,\n            data:[]\n        },\n        activeOrder:{\n            idLoading:true,\n            data:[]\n        },\n        detail:null\n    },\n    reducers:{\n        listing:(state,action)=>{\n            state.list = {\n                isLoading:false,\n                data: action.payload.data\n            }\n        },\n        setDetail:(state,action) =>{\n            state.detail = action.payload.data\n        },\n        unSetDetail:(state,action)=>{\n            state.detail = null\n        },\n        activeListing:(state,action)=>{\n            state.activeOrder={\n                isLoading:false,\n                data:action.payload.data\n            }\n        }\n    }\n})\n\nexport default orderSlice.reducer\nconst { listing,setDetail,unSetDetail,activeListing } = orderSlice.actions\n\nexport const getOrderList = (page) => async dispatch =>{\n    try {\n        const res = await callApi('post',`/order/list?page=${page}`,{})\n        dispatch(listing(res.data))\n        dispatch(unSetDetail())\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const getOrderDetail = (value) => async dispatch =>{\n    try {\n        const res = await callApi('post','/order/detail',value)\n        dispatch(setDetail(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    } \n}\nexport const getActiveOrder = () => async dispatch =>{\n    try {\n        let res = await callApi('post','/order/activeOrder',{})\n        dispatch(activeListing(res.data))\n    } catch (error) {\n        dispatch(apiFail(error))   \n    }\n}"]},"metadata":{},"sourceType":"module"}