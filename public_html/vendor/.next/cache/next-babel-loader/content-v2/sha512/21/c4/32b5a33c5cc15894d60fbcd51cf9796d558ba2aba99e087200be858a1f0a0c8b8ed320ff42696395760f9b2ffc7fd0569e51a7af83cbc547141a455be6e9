{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/pages/settig/index.js\";\nimport Vendor from \"layouts/Vendor\";\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Row } from \"reactstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputCom from '../../components/Form/InputCom';\nimport { useEffect, useState } from \"react\";\nimport { unSetApiSucc, unSetApiFail } from \"reducers/mainSlice\";\nimport NProgress from 'nprogress';\nimport { toast } from \"react-toastify\";\nimport { getMainSetting, getStoreDetail, updateMainSetting } from \"../../reducers/settingSlice\";\n\nfunction Index() {\n  var _storeDetail$data2;\n\n  const dispatch = useDispatch();\n  const storeDetail = useSelector(state => state.settingSlice.storeDetail);\n  const setting = useSelector(state => state.settingSlice.main);\n  const apiError = useSelector(state => state.mainSlice.failed);\n  const apiSuccess = useSelector(state => state.mainSlice.success);\n  const {\n    0: alert,\n    1: setAlert\n  } = useState({\n    status: false,\n    message: '',\n    type: ''\n  });\n  useEffect(() => {\n    dispatch(getStoreDetail());\n  }, []);\n  useEffect(() => {\n    var _storeDetail$data;\n\n    dispatch(getMainSetting({\n      storeId: storeDetail === null || storeDetail === void 0 ? void 0 : (_storeDetail$data = storeDetail.data) === null || _storeDetail$data === void 0 ? void 0 : _storeDetail$data._id\n    }));\n  }, [storeDetail]);\n  console.log(\"setting\", setting);\n  const validationSchema = Yup.object().shape({\n    fixLimitDeliveryDistance: Yup.number().typeError('Min delivery distance must be a number').required('Min delivery distance is required').positive('Must be a positive number'),\n    deliveryDistance: Yup.number().typeError('Delivery distance must be a number').required('Delivery distance is required').min(1, 'Delivery distance must be greater than 1'),\n    minDeliveryCharge: Yup.number().typeError('Min delivery charge must be a number').required('Min delivery charge is required').positive('Must be a positive number'),\n    deliveryExtraFeeUnit: Yup.number().typeError('Delivery extra fee unit must be a number').required('Delivery extra fee unit is required').positive('Must be a positive number'),\n    deliveryExtraFee: Yup.number().typeError('Delivery extra fee must be a number').required('Delivery extra fee is required').positive('Must be a positive number')\n  });\n\n  const formSubmitHandal = formData => {\n    // console.log('final data',formData);\n    NProgress.start();\n    dispatch(updateMainSetting(formData));\n  };\n\n  useEffect(() => {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        setAlert({\n          status: true,\n          message: apiSuccess.message,\n          type: 'success'\n        });\n        NProgress.done();\n        dispatch(unSetApiSucc());\n        setTimeout(() => {\n          setAlert({\n            status: false,\n            message: '',\n            type: ''\n          }); //   dispatch(unSetApiSucc())\n        }, 3000);\n      }\n\n      if (apiError) {\n        if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n          setAlert({\n            status: true,\n            message: apiError.message,\n            type: 'error'\n          });\n          dispatch(unSetApiFail());\n          NProgress.done();\n          setTimeout(() => {\n            setAlert({\n              status: false,\n              message: '',\n              type: ''\n            });\n          }, 3000);\n        }\n      }\n    }\n  }, [apiSuccess, apiError]);\n\n  if (alert.status) {\n    toast(alert.message, {\n      type: alert.type\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Delivery Fee Setting\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: (storeDetail === null || storeDetail === void 0 ? void 0 : (_storeDetail$data2 = storeDetail.data) === null || _storeDetail$data2 === void 0 ? void 0 : _storeDetail$data2.deliveryType) === 0 ? /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"12\",\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"No data found\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n                enableReinitialize: true,\n                initialValues: setting,\n                validationSchema: validationSchema,\n                validateOnChange: false,\n                validateOnBlur: false,\n                onSubmit: values => formSubmitHandal(values),\n                children: formikProps => {\n                  var _formikProps$values, _formikProps$errors, _formikProps$values2, _formikProps$errors2, _formikProps$values3, _formikProps$errors3, _formikProps$values4, _formikProps$errors4, _formikProps$values5, _formikProps$errors5;\n\n                  return /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: formikProps.handleSubmit,\n                    children: /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Fix limit delivery distance (Miles) \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 141,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"fixLimitDeliveryDistance\",\n                                placeholder: \"Fix limit delivery distance\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$values = formikProps.values) === null || _formikProps$values === void 0 ? void 0 : _formikProps$values.fixLimitDeliveryDistance,\n                                error: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$errors = formikProps.errors) === null || _formikProps$errors === void 0 ? void 0 : _formikProps$errors.fixLimitDeliveryDistance\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 142,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 140,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 139,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"6\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Max Delivery Distance (Miles) \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 154,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryDistance\",\n                                placeholder: \"Delivery Distance\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$values2 = formikProps.values) === null || _formikProps$values2 === void 0 ? void 0 : _formikProps$values2.deliveryDistance,\n                                error: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$errors2 = formikProps.errors) === null || _formikProps$errors2 === void 0 ? void 0 : _formikProps$errors2.deliveryDistance\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 155,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 153,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 152,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Min Delivery Fee (\\xA3)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 167,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"minDeliveryCharge\",\n                                placeholder: \"Min Delivery Fee\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$values3 = formikProps.values) === null || _formikProps$values3 === void 0 ? void 0 : _formikProps$values3.minDeliveryCharge,\n                                error: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$errors3 = formikProps.errors) === null || _formikProps$errors3 === void 0 ? void 0 : _formikProps$errors3.minDeliveryCharge\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 168,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 166,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 165,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Extra Delivery Fee Unit (Miles)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 180,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryExtraFeeUnit\",\n                                placeholder: \"Extra Delivery Fee Unit\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$values4 = formikProps.values) === null || _formikProps$values4 === void 0 ? void 0 : _formikProps$values4.deliveryExtraFeeUnit,\n                                error: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$errors4 = formikProps.errors) === null || _formikProps$errors4 === void 0 ? void 0 : _formikProps$errors4.deliveryExtraFeeUnit\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 181,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 179,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 178,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            lg: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"form-control-label\",\n                                children: \"Extra Delivery Fee (\\xA3)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 193,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(InputCom, {\n                                type: \"text\",\n                                name: \"deliveryExtraFee\",\n                                placeholder: \"Extra Delivery Fee\",\n                                getValue: formikProps.setFieldValue,\n                                defValue: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$values5 = formikProps.values) === null || _formikProps$values5 === void 0 ? void 0 : _formikProps$values5.deliveryExtraFee,\n                                error: formikProps === null || formikProps === void 0 ? void 0 : (_formikProps$errors5 = formikProps.errors) === null || _formikProps$errors5 === void 0 ? void 0 : _formikProps$errors5.deliveryExtraFee\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 194,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 192,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"12\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          className: \"float-right\",\n                          color: \"primary\",\n                          type: \"submit\",\n                          children: \"Save\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nIndex.layout = Vendor;\nexport default Index;","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/pages/settig/index.js"],"names":["Vendor","UserHeader","Button","Card","CardBody","CardHeader","Col","Container","Form","FormGroup","Row","Formik","Yup","useDispatch","useSelector","InputCom","useEffect","useState","unSetApiSucc","unSetApiFail","NProgress","toast","getMainSetting","getStoreDetail","updateMainSetting","Index","dispatch","storeDetail","state","settingSlice","setting","main","apiError","mainSlice","failed","apiSuccess","success","alert","setAlert","status","message","type","storeId","data","_id","console","log","validationSchema","object","shape","fixLimitDeliveryDistance","number","typeError","required","positive","deliveryDistance","min","minDeliveryCharge","deliveryExtraFeeUnit","deliveryExtraFee","formSubmitHandal","formData","start","statusCode","done","setTimeout","deliveryType","textAlign","values","formikProps","handleSubmit","setFieldValue","errors","layout"],"mappings":"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","sourcesContent":["import Vendor from \"layouts/Vendor\";\nimport UserHeader from \"components/Headers/UserHeader\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Row } from \"reactstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputCom from '../../components/Form/InputCom'\nimport { useEffect, useState } from \"react\";\nimport { unSetApiSucc,unSetApiFail } from \"reducers/mainSlice\";\nimport NProgress from 'nprogress';\n\nimport { toast } from \"react-toastify\";\nimport { getMainSetting, getStoreDetail, updateMainSetting } from \"../../reducers/settingSlice\";\nfunction Index() {\n    const dispatch = useDispatch()\n    const storeDetail = useSelector(state => state.settingSlice.storeDetail)\n    const setting = useSelector(state=>state.settingSlice.main);\n    const apiError = useSelector(state=> state.mainSlice.failed)\n    const apiSuccess = useSelector(state=> state.mainSlice.success)\n    const [alert,setAlert]=useState({\n        status:false,\n        message:'',\n        type:''\n    })\n    useEffect(() => {\n        dispatch(getStoreDetail())\n    }, []);\n    useEffect(() => {\n        dispatch(getMainSetting({storeId:storeDetail?.data?._id}));  \n    }, [storeDetail])\n    \n    console.log(\"setting\", setting);\n    const validationSchema = Yup.object().shape({\n        fixLimitDeliveryDistance:Yup.number()\n            .typeError('Min delivery distance must be a number')\n            .required('Min delivery distance is required')\n            .positive('Must be a positive number'),\n        deliveryDistance:Yup.number()\n            .typeError('Delivery distance must be a number')\n            .required('Delivery distance is required')\n            .min(1,'Delivery distance must be greater than 1'),\n        minDeliveryCharge:Yup.number()\n            .typeError('Min delivery charge must be a number')\n            .required('Min delivery charge is required')\n            .positive('Must be a positive number'),\n        deliveryExtraFeeUnit:Yup.number()\n            .typeError('Delivery extra fee unit must be a number')\n            .required('Delivery extra fee unit is required')\n            .positive('Must be a positive number'),\n        deliveryExtraFee:Yup.number()\n            .typeError('Delivery extra fee must be a number')\n            .required('Delivery extra fee is required')\n            .positive('Must be a positive number'),\n    })\n    const formSubmitHandal = (formData) => {\n        // console.log('final data',formData);\n        NProgress.start()\n        dispatch(updateMainSetting(formData))\n    }\n    useEffect(() => {\n        if (apiSuccess) {\n            if(apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300){\n                setAlert({\n                    status:true,\n                    message:apiSuccess.message,\n                    type:'success'\n                })\n                NProgress.done()\n                dispatch(unSetApiSucc())\n                setTimeout(() => {\n                    setAlert({\n                        status:false,\n                        message:'',\n                        type:''\n                    })\n                //   dispatch(unSetApiSucc())\n                }, 3000);\n            }\n            if (apiError) {\n                if(apiError.statusCode >= 400 && apiError.statusCode <= 500){\n                    setAlert({\n                        status:true,\n                        message:apiError.message,\n                        type:'error'\n                    })\n                    dispatch(unSetApiFail())\n                    NProgress.done()\n                    setTimeout(() => {\n                        setAlert({\n                            status:false,\n                            message:'',\n                            type:''\n                        })\n                    }, 3000);\n                }\n            }\n        }\n    }, [apiSuccess,apiError])\n    if (alert.status) {\n        toast(alert.message,{\n          type:alert.type\n        });\n    }\n    return (\n        <>\n            <UserHeader/>\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <Col className=\"order-xl-1\" xl='12'>\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                <Col xs=\"8\">\n                                    <h3 className=\"mb-0\">Delivery Fee Setting</h3>\n                                </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                { storeDetail?.data?.deliveryType === 0 ? \n                                    <Row className=\"align-items-center\">\n                                        <Col xs=\"12\" style={{textAlign:\"center\"}}>\n                                            <p className=\"mb-0\">No data found</p>\n                                        </Col>\n                                    </Row>\n                                    : \n                                    <Formik\n                                        enableReinitialize\n                                        initialValues={setting}\n                                        validationSchema={validationSchema}\n                                        validateOnChange={false}\n                                        validateOnBlur={false}\n                                        onSubmit={ values =>formSubmitHandal(values)}\n                                    >\n                                    {(formikProps)=>(\n                                        <Form onSubmit={formikProps.handleSubmit}>\n                                            <Row>\n                                            <Col lg=\"12\">\n                                                <Row>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label className=\"form-control-label\">Fix limit delivery distance (Miles) </label>\n                                                            <InputCom\n                                                                type=\"text\"\n                                                                name=\"fixLimitDeliveryDistance\"\n                                                                placeholder=\"Fix limit delivery distance\"\n                                                                getValue={formikProps.setFieldValue}\n                                                                defValue={formikProps?.values?.fixLimitDeliveryDistance}\n                                                                error={formikProps?.errors?.fixLimitDeliveryDistance}\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"6\">\n                                                        <FormGroup>\n                                                            <label className=\"form-control-label\">Max Delivery Distance (Miles) </label>\n                                                            <InputCom\n                                                                type=\"text\"\n                                                                name=\"deliveryDistance\"\n                                                                placeholder=\"Delivery Distance\"\n                                                                getValue={formikProps.setFieldValue}\n                                                                defValue={formikProps?.values?.deliveryDistance}\n                                                                error={formikProps?.errors?.deliveryDistance}\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"4\">\n                                                        <FormGroup>\n                                                            <label className=\"form-control-label\">Min Delivery Fee (£)</label>\n                                                            <InputCom\n                                                                type=\"text\"\n                                                                name=\"minDeliveryCharge\"\n                                                                placeholder=\"Min Delivery Fee\"\n                                                                getValue={formikProps.setFieldValue}\n                                                                defValue={formikProps?.values?.minDeliveryCharge}\n                                                                error={formikProps?.errors?.minDeliveryCharge}\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"4\">\n                                                        <FormGroup>\n                                                            <label className=\"form-control-label\">Extra Delivery Fee Unit (Miles)</label>\n                                                            <InputCom\n                                                                type=\"text\"\n                                                                name=\"deliveryExtraFeeUnit\"\n                                                                placeholder=\"Extra Delivery Fee Unit\"\n                                                                getValue={formikProps.setFieldValue}\n                                                                defValue={formikProps?.values?.deliveryExtraFeeUnit}\n                                                                error={formikProps?.errors?.deliveryExtraFeeUnit}\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col lg=\"4\">\n                                                        <FormGroup>\n                                                            <label className=\"form-control-label\">Extra Delivery Fee (£)</label>\n                                                            <InputCom\n                                                                type=\"text\"\n                                                                name=\"deliveryExtraFee\"\n                                                                placeholder=\"Extra Delivery Fee\"\n                                                                getValue={formikProps.setFieldValue}\n                                                                defValue={formikProps?.values?.deliveryExtraFee}\n                                                                error={formikProps?.errors?.deliveryExtraFee}\n                                                            />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                            <Col lg=\"12\">\n                                                <Button\n                                                    className=\"float-right\"\n                                                    color=\"primary\"\n                                                    type=\"submit\"\n                                                >\n                                                    Save\n                                                </Button>\n                                            </Col>\n                                            </Row>\n                                        </Form>\n                                    )}\n                                </Formik>\n                                }\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\nIndex.layout = Vendor\nexport default Index"]},"metadata":{},"sourceType":"module"}