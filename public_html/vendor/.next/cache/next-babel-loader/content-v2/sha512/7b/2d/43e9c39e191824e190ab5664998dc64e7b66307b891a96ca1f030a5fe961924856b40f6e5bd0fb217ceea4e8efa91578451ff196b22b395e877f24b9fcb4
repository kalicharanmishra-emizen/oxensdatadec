{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nimport Router from \"next/router\";\nconst authSlice = createSlice({\n  name: 'users',\n  initialState: {\n    loggedInUser: {\n      statusCode: \"\",\n      message: \"\",\n      data: {\n        _id: \"\",\n        name: \"\",\n        email: \"\",\n        phone_no: \"\",\n        pro_image: \"\",\n        role: []\n      }\n    },\n    profile: null\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      localStorage.setItem('auth-vendor-token', action.payload.data.token);\n      delete action.payload.data.token;\n      state.loggedInUser = action.payload;\n    },\n    authUser: (state, action) => {\n      state.loggedInUser = action.payload;\n    },\n    authProfile: (state, action) => {\n      state.profile = action.payload.data;\n    },\n    logoutSuccess: (state, action) => {\n      state.loggedInUser = {\n        statusCode: \"\",\n        message: \"\",\n        data: {\n          _id: \"\",\n          name: \"\",\n          email: \"\",\n          phone_no: \"\",\n          pro_image: \"\",\n          role: []\n        }\n      };\n    }\n  }\n});\nconst {\n  loginSuccess,\n  logoutSuccess,\n  authProfile,\n  authUser\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const login = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/login', values);\n    dispatch(loginSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('auth-vendor-token');\n  dispatch(logoutSuccess());\n  Router.push('/login');\n};\nexport const getAuthUser = () => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/getauthuser', {});\n    dispatch(authUser(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const getProfile = () => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/getprofile', {});\n    dispatch(authProfile(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const updateProfile = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/updategeneral', values, {\n      'Content-Type': 'multipart/form-data'\n    });\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const updatePassword = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/updatepassword', values);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const updateTiming = values => async dispatch => {\n  try {\n    const res = await callApi('post', '/auth/updatevendortiming', values);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const forgetPassword = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/auth/forgetpassword', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n};\nexport const resetPassword = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/auth/resetpassword', value);\n    dispatch(apiSuccess(res.data));\n  } catch (e) {\n    dispatch(apiFail(e));\n  }\n}; // {type : \"posts/createPost\", payload : {id : 123, title : \"Hello World\"}}","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/reducers/authSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","Router","authSlice","name","initialState","loggedInUser","statusCode","message","data","_id","email","phone_no","pro_image","role","profile","reducers","loginSuccess","state","action","localStorage","setItem","payload","token","authUser","authProfile","logoutSuccess","actions","reducer","login","values","dispatch","res","e","logout","removeItem","push","getAuthUser","getProfile","updateProfile","updatePassword","updateTiming","forgetPassword","value","resetPassword"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nimport Router from \"next/router\";\n\nconst authSlice = createSlice({\n    name: 'users',\n    initialState: {\n        loggedInUser : {\n            statusCode: \"\",\n            message: \"\",\n            data: {\n                _id: \"\",\n                name: \"\",\n                email: \"\",\n                phone_no: \"\",\n                pro_image: \"\",\n                role: []\n            }\n        },\n        profile:null\n    },\n    reducers: {\n        loginSuccess : (state,action)=>{\n            localStorage.setItem('auth-vendor-token',action.payload.data.token)\n            delete action.payload.data.token\n            state.loggedInUser = action.payload\n        },\n        authUser:(state,action)=>{\n            state.loggedInUser = action.payload\n        },\n        authProfile:(state,action)=>{\n            state.profile = action.payload.data\n        },\n        logoutSuccess:(state,action)=>{\n            state.loggedInUser={\n                    statusCode: \"\",\n                    message: \"\",\n                    data: {\n                        _id: \"\",\n                        name: \"\",\n                        email: \"\",\n                        phone_no: \"\",\n                        pro_image: \"\",\n                        role: []\n                    }\n                }\n            \n        },\n    },\n  })\n  \nconst { loginSuccess,logoutSuccess,authProfile,authUser } = authSlice.actions\nexport default authSlice.reducer\nexport const login = (values) => async dispatch => {\n    try {\n        const res = await callApi('post','/auth/login',values)\n        dispatch(loginSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const logout= () => async dispatch =>{\n    localStorage.removeItem('auth-vendor-token')\n    dispatch(logoutSuccess());\n    Router.push('/login')\n\n}\nexport const getAuthUser = () => async dispatch =>{\n    try {\n        const res = await callApi('post','/auth/getauthuser',{});\n        dispatch(authUser(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const getProfile = () => async dispatch => {\n    try {\n        const res = await callApi('post','/auth/getprofile',{});\n        dispatch(authProfile(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\n\nexport const updateProfile=(values)=>async dispatch =>{\n    try {\n        const res = await callApi('post','/auth/updategeneral',values,{'Content-Type': 'multipart/form-data'})\n        dispatch(apiSuccess(res.data));\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n    \n}\nexport const updatePassword=(values)=>async dispatch=>{\n    try {\n        const res = await callApi('post','/auth/updatepassword',values);\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const updateTiming=(values)=>async dispatch=>{\n    try {\n        const res = await callApi('post','/auth/updatevendortiming',values);\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const forgetPassword = (value) => async dispatch => {\n    try {\n        let res = await callApi('post','/auth/forgetpassword',value)\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\nexport const resetPassword = (value) => async dispatch => {\n    try {\n        let res = await callApi('post','/auth/resetpassword',value)\n        dispatch(apiSuccess(res.data))\n    } catch (e) {\n        dispatch(apiFail(e))\n    }\n}\n\n  // {type : \"posts/createPost\", payload : {id : 123, title : \"Hello World\"}}"]},"metadata":{},"sourceType":"module"}