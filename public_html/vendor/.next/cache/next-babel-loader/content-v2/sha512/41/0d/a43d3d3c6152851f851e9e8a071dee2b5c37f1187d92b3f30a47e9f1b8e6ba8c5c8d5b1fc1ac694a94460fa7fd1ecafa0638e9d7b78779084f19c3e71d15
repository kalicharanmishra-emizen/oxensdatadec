{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Col, Form, FormGroup, Input, Row } from 'reactstrap';\nimport { updateProfile } from \"reducers/authSlice\";\nimport { useDispatch } from 'react-redux';\nimport NProgress from 'nprogress';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport LocationCom from \"../../components/Form/LocationCom\";\nexport default function General(props) {\n  const dispatch = useDispatch();\n  const {\n    0: profileData,\n    1: setProfileData\n  } = useState(null);\n  const {\n    0: vendorTypesList,\n    1: setVendorTypesList\n  } = useState([]);\n  const {\n    0: categoryList,\n    1: setCategoryList\n  } = useState([]);\n  const {\n    0: logo,\n    1: setLogo\n  } = useState(null);\n  const {\n    0: temp,\n    1: setTemp\n  } = useState(null);\n  let formSubmit = {\n    typeOf: profileData ? profileData.profile_data.typeOf : '',\n    category: profileData ? profileData.profile_data.category : [],\n    commission: profileData ? profileData.profile_data.commission : '',\n    name: profileData ? profileData.name : '',\n    email: profileData ? profileData.email : '',\n    phone_no: profileData ? profileData.phone_no : '',\n    preparation_time: profileData ? profileData.profile_data.preparation_time : '',\n    minimum_amount: profileData ? profileData.profile_data.minimum_amount : '',\n    contact_person_name: profileData ? profileData.profile_data.contactPerson.name : '',\n    contact_person_email: profileData ? profileData.profile_data.contactPerson.email : '',\n    contact_person_phone_no: profileData ? profileData.profile_data.contactPerson.phone_no : '',\n    location: {\n      address: profileData ? profileData.profile_data.location.address : '',\n      lat: profileData ? profileData.profile_data.location.late : '',\n      lng: profileData ? profileData.profile_data.location.lng : ''\n    }\n  };\n  const validationSchema = Yup.object().shape({\n    typeOf: Yup.string().required('Vendor type is required!'),\n    category: Yup.array().min(1, 'Vendor category required'),\n    name: Yup.string().required('Store name required'),\n    phone_no: Yup.string().required('Store phone no. required').matches(/^[1-9][0-9]{9,13}$/g, 'Phone number is not valid'),\n    preparation_time: Yup.number().typeError('Must be a number').required('Preparation time is required').min(1, 'Preparation time must be greater than 1'),\n    minimum_amount: Yup.number().typeError('Must be a number').required('Minimum amount is required').min(1, 'Minimum amount must be greater than 1'),\n    contact_person_name: Yup.string().required('Contact person name required'),\n    contact_person_email: Yup.string().required('Contact person email required').email('Email must be a valid email address'),\n    contact_person_phone_no: Yup.string().required('Contact person phone no. required').matches(/^[1-9][0-9]{9,13}$/g, 'Phone number is not valid'),\n    location: Yup.object().shape({\n      address: Yup.string().required('Location is required')\n    })\n  });\n  useEffect(() => {\n    setProfileData(props.details);\n    setVendorTypesList(props.typeList);\n    setCategoryList(props.categoryList);\n    setTemp(props.details.logo);\n  }, [props.details]);\n\n  const imgUpload = e => {\n    // console.log('image',e.target.files);\n    setLogo(e.target.files[0]);\n    setTemp(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const formSubmitHandal = async formData => {\n    // console.log('final data',formData);\n    let convertFormData = new FormData();\n\n    for (const [key, value] of Object.entries(formData)) {\n      if (key != 'location') {\n        convertFormData.append(key, value);\n      }\n    }\n\n    if (logo) {\n      convertFormData.append('logo', logo);\n    }\n\n    convertFormData.append('address', formData.location.address);\n    convertFormData.append('lat', formData.location.lat);\n    convertFormData.append('lng', formData.location.lng); // console.log('final data',convertFormData);\n\n    NProgress.start();\n    dispatch(updateProfile(convertFormData));\n  };\n\n  console.log(\"profileData--\", profileData);\n  return /*#__PURE__*/_jsx(Formik, {\n    enableReinitialize: true,\n    initialValues: formSubmit,\n    validationSchema: validationSchema,\n    validateOnChange: false,\n    validateOnBlur: false,\n    onSubmit: values => formSubmitHandal(values),\n    children: formikProps => /*#__PURE__*/_jsxs(Form, {\n      onSubmit: formikProps.handleSubmit,\n      children: [/*#__PURE__*/_jsx(\"h6\", {\n        className: \"heading-small text-muted mb-4\",\n        children: \"User information\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"pl-lg-4\",\n        children: /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsx(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-email\",\n                children: \"Vendor Type\"\n              }), !props.isLoading ? /*#__PURE__*/_jsx(FromSelect, {\n                name: \"typeOf\",\n                id: \"typeOf\",\n                options: vendorTypesList,\n                isDefault: true,\n                isMulti: false,\n                defValue: formikProps.values.typeOf,\n                getValue: formikProps.setFieldValue,\n                error: formikProps.errors.typeOf\n              }) : \"\"]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-email\",\n                children: \"Vendor Category\"\n              }), !props.isLoading ? /*#__PURE__*/_jsx(FromSelect, {\n                name: \"category\",\n                id: \"category\",\n                options: categoryList,\n                isDefault: false,\n                isMulti: true,\n                defValue: formikProps.values.category,\n                getValue: formikProps.setFieldValue,\n                error: formikProps.errors.category\n              }) : \"\"]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-email\",\n                children: \"Email address\"\n              }), /*#__PURE__*/_jsx(InputCom, {\n                type: \"text\",\n                name: \"email\",\n                placeholder: \"Enter Store Email\",\n                isDefault: false,\n                getValue: formikProps.setFieldValue,\n                defValue: formikProps.values.email,\n                error: formikProps.errors.email\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-phone-no\",\n                children: \"Commission\"\n              }), /*#__PURE__*/_jsx(InputCom, {\n                type: \"text\",\n                name: \"commission\",\n                placeholder: \"Enter Store Email\",\n                isDefault: true,\n                getValue: formikProps.setFieldValue,\n                defValue: formikProps.values.commission,\n                error: formikProps.errors.commission\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-name\",\n                children: \"Name\"\n              }), /*#__PURE__*/_jsx(InputCom, {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Enter Store Name\",\n                isDefault: false,\n                getValue: formikProps.setFieldValue,\n                defValue: formikProps.values.name,\n                error: formikProps.errors.name\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-phone-no\",\n                children: \"Phone No\"\n              }), /*#__PURE__*/_jsx(InputCom, {\n                type: \"text\",\n                name: \"phone_no\",\n                placeholder: \"Enter Store phone no.\",\n                isDefault: false,\n                getValue: formikProps.setFieldValue,\n                defValue: formikProps.values.phone_no,\n                error: formikProps.errors.phone_no\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"3\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-phone-no\",\n                children: \"Order Preparation Time (Min.)\"\n              }), /*#__PURE__*/_jsx(InputCom, {\n                type: \"text\",\n                name: \"preparation_time\",\n                placeholder: \"Enter Store preparation time.\",\n                isDefault: false,\n                getValue: formikProps.setFieldValue,\n                defValue: formikProps.values.preparation_time,\n                error: formikProps.errors.preparation_time\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"3\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"input-phone-no\",\n                children: \"Minimum Order Amount (\\xA3)\"\n              }), /*#__PURE__*/_jsx(InputCom, {\n                type: \"text\",\n                name: \"minimum_amount\",\n                placeholder: \"Enter Store minimum amount.\",\n                isDefault: false,\n                getValue: formikProps.setFieldValue,\n                defValue: formikProps.values.minimum_amount,\n                error: formikProps.errors.minimum_amount\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"2\",\n            children: /*#__PURE__*/_jsxs(FormGroup, {\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                className: \"form-control-label\",\n                htmlFor: \"profile-image\",\n                children: \"Logo\"\n              }), /*#__PURE__*/_jsx(Input, {\n                className: \"form-control-alternative\",\n                id: \"profile-image\",\n                type: \"file\",\n                name: \"logo\",\n                onChange: imgUpload\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"2\",\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: temp,\n              className: \"m-2\",\n              width: \"100\",\n              height: \"80\"\n            })\n          }), /*#__PURE__*/_jsxs(Col, {\n            lg: \"12\",\n            children: [/*#__PURE__*/_jsx(\"h6\", {\n              className: \"heading-small text-muted mb-4\",\n              children: \"Contact Person information\"\n            }), /*#__PURE__*/_jsxs(Row, {\n              children: [/*#__PURE__*/_jsx(Col, {\n                lg: \"4\",\n                children: /*#__PURE__*/_jsxs(FormGroup, {\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    className: \"form-control-label\",\n                    htmlFor: \"profile-image\",\n                    children: \"Name\"\n                  }), /*#__PURE__*/_jsx(InputCom, {\n                    type: \"text\",\n                    name: \"contact_person_name\",\n                    placeholder: \"Enter contact person name.\",\n                    isDefault: false,\n                    getValue: formikProps.setFieldValue,\n                    defValue: formikProps.values.contact_person_name,\n                    error: formikProps.errors.contact_person_name\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Col, {\n                lg: \"4\",\n                children: /*#__PURE__*/_jsxs(FormGroup, {\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    className: \"form-control-label\",\n                    htmlFor: \"profile-image\",\n                    children: \"Email\"\n                  }), /*#__PURE__*/_jsx(InputCom, {\n                    type: \"text\",\n                    name: \"contact_person_email\",\n                    placeholder: \"Enter contact person email.\",\n                    isDefault: false,\n                    getValue: formikProps.setFieldValue,\n                    defValue: formikProps.values.contact_person_email,\n                    error: formikProps.errors.contact_person_email\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Col, {\n                lg: \"4\",\n                children: /*#__PURE__*/_jsxs(FormGroup, {\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    className: \"form-control-label\",\n                    htmlFor: \"profile-image\",\n                    children: \"Phone No\"\n                  }), /*#__PURE__*/_jsx(InputCom, {\n                    type: \"text\",\n                    name: \"contact_person_phone_no\",\n                    placeholder: \"Enter contact person phone no.\",\n                    isDefault: false,\n                    getValue: formikProps.setFieldValue,\n                    defValue: formikProps.values.contact_person_phone_no,\n                    error: formikProps.errors.contact_person_phone_no\n                  })]\n                })\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(Col, {\n            lg: \"12\",\n            children: [/*#__PURE__*/_jsx(\"h6\", {\n              className: \"heading-small text-muted mb-4\",\n              children: \"Location\"\n            }), /*#__PURE__*/_jsx(Row, {\n              children: /*#__PURE__*/_jsx(Col, {\n                lg: \"12\",\n                children: /*#__PURE__*/_jsxs(FormGroup, {\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    className: \"form-control-label\",\n                    htmlFor: \"profile-image\",\n                    children: \"Location *\"\n                  }), /*#__PURE__*/_jsx(LocationCom, {\n                    getValue: formikProps.setFieldValue,\n                    defValue: formikProps.values.location,\n                    error: formikProps.errors.location\n                  })]\n                })\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Col, {\n            lg: \"12\",\n            children: /*#__PURE__*/_jsx(Button, {\n              className: \"float-right\",\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Update\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}