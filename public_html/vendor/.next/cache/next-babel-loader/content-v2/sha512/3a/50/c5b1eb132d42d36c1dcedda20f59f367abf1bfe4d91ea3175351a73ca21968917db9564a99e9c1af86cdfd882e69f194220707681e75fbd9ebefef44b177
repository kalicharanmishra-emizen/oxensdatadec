{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Vendor from 'layouts/Vendor';\nimport UserHeader from 'components/Headers/UserHeader';\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormGroup, Input, Row } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport InputCom from \"components/Form/InputCom\";\nimport FromSelect from \"components/Form/FromSelect\";\nimport StatusChnage from \"components/Form/StatusChnage\";\nimport { createItems, getCategoryList } from \"reducers/menuSlice\";\nimport { unSetApiSucc, unSetApiFail } from \"reducers/mainSlice\";\nimport nProgress from \"nprogress\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\n\nfunction Create() {\n  const router = useRouter();\n  const {\n    item\n  } = router.query;\n  const dispatch = useDispatch();\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(true);\n  const {\n    0: categoryListState,\n    1: setcategoryListState\n  } = useState(null);\n  const apiError = useSelector(state => state.mainSlice.failed);\n  const apiSuccess = useSelector(state => state.mainSlice.success);\n  const categoryList = useSelector(state => state.menuSlice.categoryList);\n  const {\n    0: itemImg,\n    1: setItemImg\n  } = useState(null);\n  /* form submit handel start */\n\n  const formSubmitHandal = async value => {\n    nProgress.start();\n    let convertFormData = new FormData();\n    Object.keys(value).forEach(key => {\n      convertFormData.append(key, value[key]);\n    });\n\n    if (itemImg) {\n      convertFormData.append('item_img', itemImg);\n    }\n\n    dispatch(createItems(convertFormData));\n  };\n  /* form submit handel end */\n\n\n  const validationSchema = Yup.object().shape({\n    category: Yup.string().required('Category is required!'),\n    age_res: Yup.string().required('Age restriction is required!'),\n    is_customize: Yup.string().required('Customize is required!'),\n    title: Yup.string().required('Item title required'),\n    price: Yup.number().when(\"is_customize\", {\n      is: \"0\",\n      then: Yup.number().typeError('Must be number').required(\"Price is required!\").positive('Price must be a positive number')\n    }),\n    status: Yup.boolean().required(\"Status is required\")\n  });\n\n  const imgUpload = e => {\n    // console.log('image',e.target.files);\n    setItemImg(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    dispatch(getCategoryList());\n    setLoader(false);\n  }, []);\n  useEffect(() => {\n    let rowCategory = [];\n    categoryList.map(data => {\n      rowCategory.push({\n        value: data._id,\n        label: data.title\n      });\n    });\n    setcategoryListState(rowCategory);\n  }, [categoryList]);\n  useEffect(() => {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode >= 200 && apiSuccess.statusCode < 300) {\n        toast(apiSuccess.message, {\n          type: 'success',\n          toastId: 12\n        });\n        dispatch(unSetApiSucc());\n        router.push(`/menu/${item}`);\n        nProgress.done();\n      }\n    }\n\n    if (apiError) {\n      if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n        toast(apiError.message, {\n          type: 'error',\n          toastId: 12\n        });\n        dispatch(unSetApiFail());\n        nProgress.done();\n      }\n    }\n  }, [apiSuccess, apiError]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(UserHeader, {}), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"order-xl-1\",\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"bg-secondary shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-white border-0\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(Col, {\n                  xs: \"8\",\n                  children: /*#__PURE__*/_jsx(\"h3\", {\n                    className: \"mb-0\",\n                    children: \"Create Item\"\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(Formik, {\n                validateOnChange: false,\n                validateOnBlur: false,\n                initialValues: {\n                  category: \"\",\n                  age_res: '0',\n                  is_customize: '0',\n                  title: '',\n                  price: \"\",\n                  description: \"\",\n                  badge: \"0\",\n                  status: true\n                },\n                validationSchema: validationSchema,\n                onSubmit: formSubmitHandal,\n                children: formProps => /*#__PURE__*/_jsx(Form, {\n                  onSubmit: formProps.handleSubmit,\n                  children: /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"pl-lg-4\",\n                    children: [/*#__PURE__*/_jsxs(Row, {\n                      className: \"align-items-center\",\n                      children: [/*#__PURE__*/_jsx(Col, {\n                        lg: \"6\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Category *\"\n                          }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                            name: \"category\",\n                            id: \"category\",\n                            options: categoryListState ? categoryListState : [{\n                              value: 'empty',\n                              label: \"Select Category\"\n                            }],\n                            isDefault: false,\n                            isMulti: false,\n                            defValue: formProps.values.category,\n                            getValue: formProps.setFieldValue,\n                            error: formProps.errors.category\n                          }) : \"\"]\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"6\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Age Restrictions *\"\n                          }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                            name: \"age_res\",\n                            id: \"age_res\",\n                            options: [{\n                              value: \"0\",\n                              label: \"No\"\n                            }, {\n                              value: \"1\",\n                              label: \"Yes\"\n                            }],\n                            isDefault: false,\n                            isMulti: false,\n                            defValue: formProps.values.age_res,\n                            getValue: formProps.setFieldValue,\n                            error: formProps.errors.age_res\n                          }) : \"\"]\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"3\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Customize *\"\n                          }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                            name: \"is_customize\",\n                            id: \"is_customize\",\n                            options: [{\n                              value: \"0\",\n                              label: \"No\"\n                            }, {\n                              value: \"1\",\n                              label: \"Yes\"\n                            }],\n                            isDefault: false,\n                            isMulti: false,\n                            defValue: formProps.values.is_customize,\n                            getValue: formProps.setFieldValue,\n                            error: formProps.errors.is_customize\n                          }) : \"\"]\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"3\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Badge\"\n                          }), !loader ? /*#__PURE__*/_jsx(FromSelect, {\n                            name: \"badge\" // id=\"is_customize\" new, Bestseller, trending, New Arrival, Popular, Featured\n                            ,\n                            options: [{\n                              value: \"0\",\n                              label: \"Select badge\"\n                            }, {\n                              value: \"1\",\n                              label: \"New Arrival\"\n                            }, {\n                              value: \"2\",\n                              label: \"Bestseller\"\n                            }, {\n                              value: \"3\",\n                              label: \"Featured\"\n                            }, {\n                              value: \"4\",\n                              label: \"Popular\"\n                            }, {\n                              value: \"5\",\n                              label: \"Trending\"\n                            }],\n                            isDefault: false,\n                            isMulti: false,\n                            defValue: formProps.values.badge,\n                            getValue: formProps.setFieldValue,\n                            error: formProps.errors.badge\n                          }) : \"\"]\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"6\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Title *\"\n                          }), /*#__PURE__*/_jsx(InputCom, {\n                            type: \"text\",\n                            name: \"title\",\n                            placeholder: \"Enter Title\",\n                            getValue: formProps.setFieldValue,\n                            defValue: formProps.values.title,\n                            error: formProps.errors.title\n                          })]\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"6\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Price (* when customize is no)\"\n                          }), /*#__PURE__*/_jsx(InputCom, {\n                            type: \"text\",\n                            name: \"price\",\n                            placeholder: \"Enter Price\",\n                            getValue: formProps.setFieldValue,\n                            defValue: formProps.values.price,\n                            error: formProps.errors.price\n                          })]\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"4\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label d-block w-100\",\n                            children: \"Item Image *\"\n                          }), /*#__PURE__*/_jsx(Input, {\n                            type: \"file\",\n                            className: \"form-control-alternative\",\n                            name: \"item_img\",\n                            id: \"item_img\",\n                            onChange: imgUpload\n                          })]\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"2\",\n                        children: /*#__PURE__*/_jsx(FormGroup, {\n                          children: /*#__PURE__*/_jsx(\"img\", {\n                            src: itemImg ? URL.createObjectURL(itemImg) : require('assets/img/theme/img01.jpg'),\n                            className: \"m-2\",\n                            alt: \"preview image\",\n                            width: \"100\",\n                            height: \"80\"\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: \"12\",\n                        children: /*#__PURE__*/_jsxs(FormGroup, {\n                          children: [/*#__PURE__*/_jsx(\"label\", {\n                            className: \"form-control-label\",\n                            children: \"Description *\"\n                          }), /*#__PURE__*/_jsx(InputCom, {\n                            type: \"textarea\",\n                            name: \"description\",\n                            placeholder: \"Enter description\",\n                            getValue: formProps.setFieldValue,\n                            defValue: formProps.values.description,\n                            error: formProps.errors.description\n                          })]\n                        })\n                      })]\n                    }), /*#__PURE__*/_jsx(Row, {\n                      children: /*#__PURE__*/_jsxs(Col, {\n                        lg: \"12\",\n                        children: [/*#__PURE__*/_jsx(Button, {\n                          className: \"float-right\",\n                          color: \"primary\",\n                          type: \"submit\",\n                          children: \"Save\"\n                        }), /*#__PURE__*/_jsx(Button, {\n                          className: \"float-right mr-2\",\n                          color: \"secondary\",\n                          type: \"button\",\n                          onClick: e => {\n                            e.preventDefault();\n                            router.back();\n                          },\n                          children: \"Back\"\n                        })]\n                      })\n                    })]\n                  })\n                })\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\n\nCreate.layout = Vendor;\nexport default Create;","map":null,"metadata":{},"sourceType":"module"}