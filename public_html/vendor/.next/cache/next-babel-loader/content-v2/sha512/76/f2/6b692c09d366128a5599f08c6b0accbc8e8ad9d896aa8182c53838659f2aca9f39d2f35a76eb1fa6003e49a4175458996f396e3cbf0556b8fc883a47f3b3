{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/domains/oxens.ezxdemo.com/public_html/vendor/components/quantityBtn.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from 'next/image';\nimport minus from '../public/images/minus-icon.svg';\nimport pluse from '../public/images/pluse-icon.svg';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from 'lodash';\nimport { manageCartData } from \"../reducers/mainSlice\";\nimport \"../styles/store-detail.css\";\nexport default function QuantityBtn(props) {\n  const cartData = useSelector(state => state.mainSlice.cart);\n  const dispatch = useDispatch();\n  const {\n    0: countValue,\n    1: setCountValue\n  } = useState(0);\n  let item = cartData.orderItems[props.itemId];\n  useEffect(() => {\n    if (props) {\n      setCountValue(props.defvalue);\n    }\n  }, [props.defvalue]);\n\n  const getCustomeTypeToString = data => {\n    let returnString = '';\n    data.map(cus => {\n      returnString += cus.title + ' | ';\n      cus.variants.map(vare => {\n        returnString += vare.title + ', ';\n      });\n    });\n    return returnString;\n  };\n\n  const incriment = () => {\n    if ('askCus' in props && props.askCus) {\n      Swal.fire({\n        title: 'Repeat last used customisation',\n        html: `<h4>${item.menuitem.title}</h4><p>${getCustomeTypeToString(item.latestGroup)}</p>`,\n        showCancelButton: false,\n        showDenyButton: true,\n        denyButtonText: 'Repeat Last',\n        confirmButtonText: 'Add New',\n        scrollbarPadding: false,\n        customClass: {\n          actions: 'cartConfirmAction',\n          confirmButton: 'cartAddNewBtn',\n          denyButton: 'cartRepeatLastBtn',\n          htmlContainer: 'cartHtmlContainer',\n          title: \"cartConfirnHeader\"\n        }\n      }).then(result => {\n        /* Confirm button is use for add new Varient's */\n        if (result.isConfirmed) {\n          props.getQuantity({\n            newPopUp: true,\n            itemId: props.itemId\n          });\n        }\n        /* Deny button is use for repeat last Varient */\n\n\n        if (result.isDenied) {\n          let cartData = JSON.parse(localStorage.getItem('cart'));\n          let selectedGroupkey = Object.keys(cartData.orderItems[props.itemId].selectedGroup).find(tempList => {\n            return _.isEqual(cartData.orderItems[props.itemId].selectedGroup[tempList].group, cartData.orderItems[props.itemId].latestGroup);\n          });\n          let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\n          cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice => {\n            itPrice.variants.map(temp => {\n              lastGroupPrice += Number(temp.price);\n            });\n          });\n          cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity += 1;\n          cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price += lastGroupPrice;\n          cartData.orderItems[props.itemId].itemQuantity += 1;\n          cartData.orderItems[props.itemId].itemPrice += lastGroupPrice;\n          cartData.totalQuantity += 1;\n          cartData.totalAmount += lastGroupPrice;\n          localStorage.setItem('cart', JSON.stringify(cartData));\n          dispatch(manageCartData());\n        }\n      });\n    } else if ('grpCus' in props && props.grpCus) {\n      let selectedGroupkey = props.groupId;\n      let cartData = JSON.parse(localStorage.getItem('cart'));\n      let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice => {\n        itPrice.variants.map(temp => {\n          lastGroupPrice += Number(temp.price);\n        });\n      });\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity += 1;\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price += lastGroupPrice;\n      cartData.orderItems[props.itemId].itemQuantity += 1;\n      cartData.orderItems[props.itemId].itemPrice += lastGroupPrice;\n      cartData.totalQuantity += 1;\n      cartData.totalAmount += lastGroupPrice;\n      localStorage.setItem('cart', JSON.stringify(cartData));\n      dispatch(manageCartData());\n    } else {\n      if (countValue < 99) {\n        setCountValue(countValue + 1);\n      }\n    }\n  };\n\n  const decriment = () => {\n    if ('askCus' in props && props.askCus) {\n      if (Object.keys(item.selectedGroup).length == 1) {\n        let selectedGroupkey = Object.keys(item.selectedGroup)[0];\n        let cartData = JSON.parse(localStorage.getItem('cart'));\n        let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\n        cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice => {\n          itPrice.variants.map(temp => {\n            lastGroupPrice += Number(temp.price);\n          });\n        });\n        cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity -= 1;\n        cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price -= lastGroupPrice;\n        cartData.orderItems[props.itemId].itemQuantity -= 1;\n        cartData.orderItems[props.itemId].itemPrice -= lastGroupPrice;\n        /* remove Item Group if group quantity hit 0 */\n\n        if (cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price < 0 || cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity == 0) {\n          delete cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey];\n        }\n        /* remove Item if item quantity hit 0 */\n\n\n        if (cartData.orderItems[props.itemId].itemPrice < 0 || cartData.orderItems[props.itemId].itemQuantity == 0) {\n          delete cartData.orderItems[props.itemId];\n        }\n\n        cartData.totalQuantity -= 1;\n        cartData.totalAmount -= lastGroupPrice;\n\n        if (cartData.totalAmount < 0) {\n          cartData.totalAmount = 0;\n        }\n\n        if (cartData.totalQuantity == 0) {\n          cartData.storeId = null;\n        }\n\n        localStorage.setItem('cart', JSON.stringify(cartData));\n        dispatch(manageCartData());\n      } else {\n        props.getQuantity({\n          removePopUp: true,\n          itemId: props.itemId\n        });\n      }\n    } else if ('grpCus' in props && props.grpCus) {\n      let selectedGroupkey = props.groupId;\n      let cartData = JSON.parse(localStorage.getItem('cart'));\n      let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice => {\n        itPrice.variants.map(temp => {\n          lastGroupPrice += Number(temp.price);\n        });\n      });\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity -= 1;\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price -= lastGroupPrice;\n      cartData.orderItems[props.itemId].itemQuantity -= 1;\n      cartData.orderItems[props.itemId].itemPrice -= lastGroupPrice;\n      /* remove Item Group if group quantity hit 0 */\n\n      if (cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price < 0 || cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity == 0) {\n        delete cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey];\n      }\n      /* remove Item if item quantity hit 0 */\n\n\n      if (cartData.orderItems[props.itemId].itemPrice < 0 || cartData.orderItems[props.itemId].itemQuantity == 0) {\n        delete cartData.orderItems[props.itemId];\n      }\n\n      cartData.totalQuantity -= 1;\n      cartData.totalAmount -= lastGroupPrice;\n\n      if (cartData.totalAmount < 0) {\n        cartData.totalAmount = 0;\n      }\n\n      if (cartData.totalQuantity == 0) {\n        cartData.storeId = null;\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cartData));\n      dispatch(manageCartData());\n    } else {\n      let minValue = 0;\n\n      if ('minValue' in props) {\n        minValue = props.minValue;\n      }\n\n      if (countValue > minValue) {\n        setCountValue(countValue - 1);\n      }\n    }\n  };\n\n  useEffect(() => {\n    props.getQuantity(countValue);\n  }, [countValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `QuantityBlock`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `minus`,\n        onClick: decriment,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `countAll`,\n        children: countValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `pluse`,\n        onClick: incriment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/components/quantityBtn.js"],"names":["React","useEffect","useState","Image","minus","pluse","useDispatch","useSelector","_","manageCartData","QuantityBtn","props","cartData","state","mainSlice","cart","dispatch","countValue","setCountValue","item","orderItems","itemId","defvalue","getCustomeTypeToString","data","returnString","map","cus","title","variants","vare","incriment","askCus","Swal","fire","html","menuitem","latestGroup","showCancelButton","showDenyButton","denyButtonText","confirmButtonText","scrollbarPadding","customClass","actions","confirmButton","denyButton","htmlContainer","then","result","isConfirmed","getQuantity","newPopUp","isDenied","JSON","parse","localStorage","getItem","selectedGroupkey","Object","keys","selectedGroup","find","tempList","isEqual","group","lastGroupPrice","Number","price","itPrice","temp","quantity","itemQuantity","itemPrice","totalQuantity","totalAmount","setItem","stringify","grpCus","groupId","decriment","length","storeId","removePopUp","minValue"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Image from 'next/image'\r\nimport minus from '../public/images/minus-icon.svg';\r\nimport pluse from '../public/images/pluse-icon.svg';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from 'lodash'\r\nimport { manageCartData } from \"../reducers/mainSlice\";\r\nimport \"../styles/store-detail.css\"\r\n\r\nexport default function QuantityBtn(props) {\r\n  const cartData = useSelector(state => state.mainSlice.cart)\r\n  const dispatch = useDispatch()\r\n  const [countValue,setCountValue]=useState(0);\r\n  let item = cartData.orderItems[props.itemId]\r\n\r\n  useEffect(() => {\r\n    if(props){\r\n      setCountValue(props.defvalue)\r\n    }\r\n  }, [props.defvalue])\r\n\r\n  const getCustomeTypeToString = (data) => {\r\n    let returnString =''\r\n    data.map(cus=>{\r\n        returnString+=cus.title+' | '\r\n        cus.variants.map(vare=>{\r\n            returnString+= vare.title+', '\r\n        })\r\n    })\r\n    return returnString\r\n  } \r\n\r\n  const incriment = () => {\r\n    if ('askCus' in props && props.askCus) {\r\n      Swal.fire({\r\n        title: 'Repeat last used customisation',\r\n        html:`<h4>${item.menuitem.title}</h4><p>${getCustomeTypeToString(item.latestGroup)}</p>`,\r\n        showCancelButton: false,\r\n        showDenyButton: true,\r\n        denyButtonText:'Repeat Last',\r\n        confirmButtonText: 'Add New',\r\n        scrollbarPadding:false,\r\n        customClass:{\r\n          actions:'cartConfirmAction',\r\n          confirmButton: 'cartAddNewBtn',\r\n          denyButton: 'cartRepeatLastBtn',\r\n          htmlContainer:'cartHtmlContainer',\r\n          title:\"cartConfirnHeader\"\r\n        }\r\n      }).then((result) => {\r\n        /* Confirm button is use for add new Varient's */\r\n        if (result.isConfirmed) {\r\n            props.getQuantity({\r\n              newPopUp:true,\r\n              itemId:props.itemId\r\n            })\r\n        }\r\n        /* Deny button is use for repeat last Varient */\r\n        if (result.isDenied) {\r\n          let cartData = JSON.parse(localStorage.getItem('cart'))\r\n          let selectedGroupkey = Object.keys(cartData.orderItems[props.itemId].selectedGroup).find(tempList=>{\r\n            return _.isEqual(cartData.orderItems[props.itemId].selectedGroup[tempList].group,cartData.orderItems[props.itemId].latestGroup) \r\n          })\r\n          let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\r\n          cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice=>{\r\n            itPrice.variants.map(temp=>{\r\n              lastGroupPrice+=Number(temp.price);\r\n            })\r\n          })\r\n          cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity+=1 \r\n          cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price+=lastGroupPrice\r\n          cartData.orderItems[props.itemId].itemQuantity+=1\r\n          cartData.orderItems[props.itemId].itemPrice+=lastGroupPrice\r\n          cartData.totalQuantity+=1\r\n          cartData.totalAmount+=lastGroupPrice\r\n          localStorage.setItem('cart',JSON.stringify(cartData))\r\n          dispatch(manageCartData())\r\n        }\r\n      })\r\n    } else if('grpCus' in props && props.grpCus){\r\n      let selectedGroupkey = props.groupId\r\n      let cartData = JSON.parse(localStorage.getItem('cart'))\r\n      let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\r\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice=>{\r\n        itPrice.variants.map(temp=>{\r\n          lastGroupPrice+=Number(temp.price);\r\n        })\r\n      })\r\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity+=1 \r\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price+=lastGroupPrice\r\n      cartData.orderItems[props.itemId].itemQuantity+=1\r\n      cartData.orderItems[props.itemId].itemPrice+=lastGroupPrice\r\n      cartData.totalQuantity+=1\r\n      cartData.totalAmount+=lastGroupPrice\r\n      localStorage.setItem('cart',JSON.stringify(cartData))\r\n      dispatch(manageCartData())\r\n    } else{\r\n      if (countValue < 99) {\r\n        setCountValue(countValue+1);    \r\n      } \r\n    }\r\n  }\r\n  const decriment = () => {\r\n    if ('askCus' in props && props.askCus) {\r\n      if (Object.keys(item.selectedGroup).length==1) {\r\n        let selectedGroupkey = Object.keys(item.selectedGroup)[0]\r\n        let cartData = JSON.parse(localStorage.getItem('cart'))\r\n        let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\r\n        cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice=>{\r\n          itPrice.variants.map(temp=>{\r\n            lastGroupPrice+=Number(temp.price);\r\n          })\r\n        })\r\n        cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity-=1 \r\n        cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price-=lastGroupPrice\r\n        cartData.orderItems[props.itemId].itemQuantity-=1\r\n        cartData.orderItems[props.itemId].itemPrice-=lastGroupPrice\r\n        /* remove Item Group if group quantity hit 0 */\r\n        if (cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price < 0 || cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity == 0) {\r\n          delete cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey]\r\n        } \r\n        /* remove Item if item quantity hit 0 */\r\n        if (cartData.orderItems[props.itemId].itemPrice < 0 || cartData.orderItems[props.itemId].itemQuantity == 0) {\r\n          delete cartData.orderItems[props.itemId]\r\n        }\r\n        cartData.totalQuantity-=1\r\n        cartData.totalAmount-=lastGroupPrice\r\n        if(cartData.totalAmount < 0){\r\n          cartData.totalAmount=0\r\n        }\r\n        if (cartData.totalQuantity == 0) {\r\n          cartData.storeId=null\r\n        }\r\n        localStorage.setItem('cart',JSON.stringify(cartData))\r\n        dispatch(manageCartData())\r\n      }else{\r\n        props.getQuantity({\r\n          removePopUp:true,\r\n          itemId:props.itemId\r\n        })\r\n      }\r\n    } else if('grpCus' in props && props.grpCus){\r\n\r\n      let selectedGroupkey = props.groupId\r\n      let cartData = JSON.parse(localStorage.getItem('cart'))\r\n      let lastGroupPrice = Number(cartData.orderItems[props.itemId].menuitem.price);\r\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].group.map(itPrice=>{\r\n        itPrice.variants.map(temp=>{\r\n          lastGroupPrice+=Number(temp.price);\r\n        })\r\n      })\r\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity-=1 \r\n      cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price-=lastGroupPrice\r\n      cartData.orderItems[props.itemId].itemQuantity-=1\r\n      cartData.orderItems[props.itemId].itemPrice-=lastGroupPrice\r\n      /* remove Item Group if group quantity hit 0 */\r\n      if (cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].price < 0 || cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey].quantity == 0) {\r\n        delete cartData.orderItems[props.itemId].selectedGroup[selectedGroupkey]\r\n      } \r\n      /* remove Item if item quantity hit 0 */\r\n      if (cartData.orderItems[props.itemId].itemPrice < 0 || cartData.orderItems[props.itemId].itemQuantity == 0) {\r\n\r\n        delete cartData.orderItems[props.itemId]\r\n      }\r\n      cartData.totalQuantity-=1\r\n      cartData.totalAmount-=lastGroupPrice\r\n      if(cartData.totalAmount < 0){\r\n        cartData.totalAmount=0\r\n      }\r\n      if (cartData.totalQuantity == 0) {\r\n        cartData.storeId=null\r\n      }\r\n      localStorage.setItem('cart',JSON.stringify(cartData))\r\n      dispatch(manageCartData())\r\n    } else {\r\n\r\n      let minValue=0\r\n      if ('minValue' in props) {\r\n        minValue = props.minValue\r\n      }\r\n      if (countValue > minValue) {\r\n        setCountValue(countValue-1);    \r\n      } \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getQuantity(countValue)\r\n  }, [countValue])\r\n\r\n  return (  \r\n    <>     \r\n      <div className={`QuantityBlock`}>\r\n        <span className={`minus`} onClick={decriment}>\r\n          {/* <Image\r\n              src={minus}\r\n              alt=\"Picture of the author\"\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n              layout=\"responsive\" \r\n          /> */}\r\n          -\r\n        </span>\r\n        <span className={`countAll`}>{countValue}</span>\r\n        <span className={`pluse`} onClick={incriment}>\r\n          {/* <Image\r\n              src={pluse}\r\n              alt=\"Picture of the author\"\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n              layout=\"responsive\" \r\n          /> */}\r\n          +\r\n        </span>\r\n      </div> \r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}