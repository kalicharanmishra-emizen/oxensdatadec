{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from 'next/router'; // reactstrap components\n\nimport { Button, Card, Alert, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Label } from \"reactstrap\"; // layout for this page\n\nimport Auth from \"layouts/Auth.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPassword } from \"reducers/authSlice\";\nimport { unSetApiSucc, unSetApiFail } from \"reducers/mainSlice\";\nimport Loader from \"components/ApiLoader/loader\";\n\nfunction ResetPassword() {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: newPassword,\n    1: setNewPassword\n  } = useState('');\n  const {\n    0: conPassword,\n    1: setConPassword\n  } = useState('');\n  const {\n    0: alertStaus,\n    1: setalertStatus\n  } = useState(false);\n  const {\n    0: alertMessage,\n    1: setalertMessage\n  } = useState('');\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    token\n  } = router.query;\n  const apiError = useSelector(state => state.mainSlice.failed);\n  const apiSuccess = useSelector(state => state.mainSlice.success);\n\n  const handleChange = e => {\n    if (e.target.name === 'new_password') {\n      setNewPassword(e.target.value);\n    }\n\n    if (e.target.name === 'con_password') {\n      setConPassword(e.target.value);\n    }\n  };\n\n  const formSubmit = () => {\n    const payload = {\n      \"token\": token,\n      \"new_pass\": newPassword,\n      \"con_pass\": conPassword\n    };\n    dispatch(resetPassword(payload));\n    setLoader(true);\n  }; // use effect for api error \n\n\n  useEffect(() => {\n    if (apiSuccess) {\n      if (apiSuccess.statusCode == 200) {\n        dispatch(unSetApiSucc());\n        setLoader(false);\n        router.push('/login');\n      }\n    }\n  }, [apiSuccess]);\n  useEffect(() => {\n    if (apiError) {\n      if (apiError.statusCode >= 400 && apiError.statusCode <= 500) {\n        setLoader(false);\n        setalertStatus(true);\n        setalertMessage(apiError.message);\n        dispatch(unSetApiFail());\n        setTimeout(() => {\n          setalertStatus(false);\n          setalertMessage('');\n        }, 3000);\n      }\n    }\n  }, [apiError]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [loader ? /*#__PURE__*/_jsx(Loader, {}) : '', /*#__PURE__*/_jsx(Card, {\n      className: \"border-0\",\n      children: /*#__PURE__*/_jsxs(CardBody, {\n        className: \"px-lg-5 py-lg-5\",\n        children: [/*#__PURE__*/_jsx(Alert, {\n          isOpen: alertStaus,\n          color: \"danger\",\n          children: alertMessage\n        }), /*#__PURE__*/_jsxs(Form, {\n          role: \"form\",\n          children: [/*#__PURE__*/_jsxs(FormGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsx(Label, {\n              for: \"new_password\",\n              children: \"New Password\"\n            }), /*#__PURE__*/_jsxs(InputGroup, {\n              className: \"input-group-alternative\",\n              children: [/*#__PURE__*/_jsx(InputGroupAddon, {\n                addonType: \"prepend\",\n                children: /*#__PURE__*/_jsx(InputGroupText, {\n                  children: /*#__PURE__*/_jsx(\"i\", {\n                    className: \"ni ni-lock-circle-open\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Input, {\n                id: \"new_password\",\n                placeholder: \"New Password\",\n                type: \"password\",\n                name: \"new_password\",\n                onChange: handleChange\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(Label, {\n              for: \"con_password\",\n              children: \"Confirm Password\"\n            }), /*#__PURE__*/_jsxs(InputGroup, {\n              className: \"input-group-alternative\",\n              children: [/*#__PURE__*/_jsx(InputGroupAddon, {\n                addonType: \"prepend\",\n                children: /*#__PURE__*/_jsx(InputGroupText, {\n                  children: /*#__PURE__*/_jsx(\"i\", {\n                    className: \"ni ni-lock-circle-open\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Input, {\n                id: \"con_password\",\n                placeholder: \"Confirm Password\",\n                type: \"password\",\n                name: \"con_password\",\n                onChange: handleChange\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"d-flex align-items-center justify-content-between\",\n            children: /*#__PURE__*/_jsx(Button, {\n              className: \"\",\n              color: \"theame-btn\",\n              type: \"button\",\n              onClick: formSubmit,\n              children: \"Reset Password\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n}\n\nResetPassword.layout = Auth;\nexport default ResetPassword;","map":null,"metadata":{},"sourceType":"module"}