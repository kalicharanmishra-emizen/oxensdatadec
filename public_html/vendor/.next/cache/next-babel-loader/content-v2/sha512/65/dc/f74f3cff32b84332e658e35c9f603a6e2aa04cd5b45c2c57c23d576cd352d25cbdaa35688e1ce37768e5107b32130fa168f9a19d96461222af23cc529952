{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { callApi } from '../Helper/helper';\nimport { apiFail, apiSuccess } from 'reducers/mainSlice';\nconst settingSlice = createSlice({\n  name: \"Setting\",\n  initialState: {\n    main: {\n      fixLimitDeliveryDistance: 0,\n      deliveryDistance: 0,\n      minDeliveryCharge: 0,\n      deliveryExtraFeeUnit: 0,\n      deliveryExtraFee: 0\n    },\n    storeDetail: {\n      data: null\n    }\n  },\n  reducers: {\n    setMainSetting: (state, action) => {\n      state.main = action.payload;\n    },\n    setStoreDetail: (state, action) => {\n      state.storeDetail.data = action.payload.data;\n    }\n  }\n});\nexport default settingSlice.reducer;\nconst {\n  setMainSetting,\n  setStoreDetail\n} = settingSlice.actions;\nexport const getMainSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/list', value);\n    dispatch(setMainSetting(res.data.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const updateMainSetting = value => async dispatch => {\n  try {\n    let res = await callApi('post', '/setting/update', value);\n    dispatch(apiSuccess(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};\nexport const getStoreDetail = () => async dispatch => {\n  try {\n    let res = await callApi('post', '/store/detail', {});\n    dispatch(setStoreDetail(res.data));\n  } catch (error) {\n    dispatch(apiFail(error));\n  }\n};","map":{"version":3,"sources":["/var/www/domains/oxens.ezxdemo.com/public_html/vendor/reducers/settingSlice.js"],"names":["createSlice","callApi","apiFail","apiSuccess","settingSlice","name","initialState","main","fixLimitDeliveryDistance","deliveryDistance","minDeliveryCharge","deliveryExtraFeeUnit","deliveryExtraFee","storeDetail","data","reducers","setMainSetting","state","action","payload","setStoreDetail","reducer","actions","getMainSetting","value","dispatch","res","error","updateMainSetting","getStoreDetail"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAASC,OAAT,EAAiBC,UAAjB,QAAmC,oBAAnC;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,IAAI,EAAC;AACDC,MAAAA,wBAAwB,EAAC,CADxB;AAEDC,MAAAA,gBAAgB,EAAC,CAFhB;AAGDC,MAAAA,iBAAiB,EAAC,CAHjB;AAIDC,MAAAA,oBAAoB,EAAC,CAJpB;AAKDC,MAAAA,gBAAgB,EAAC;AALhB,KADI;AAQTC,IAAAA,WAAW,EAAC;AACRC,MAAAA,IAAI,EAAC;AADG;AARH,GAFgB;AAc7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,cAAc,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC3BD,MAAAA,KAAK,CAACV,IAAN,GAAWW,MAAM,CAACC,OAAlB;AACH,KAHI;AAILC,IAAAA,cAAc,EAAC,CAACH,KAAD,EAAOC,MAAP,KAAkB;AAC7BD,MAAAA,KAAK,CAACJ,WAAN,CAAkBC,IAAlB,GAAuBI,MAAM,CAACC,OAAP,CAAeL,IAAtC;AACH;AANI;AAdoB,CAAD,CAAhC;AAuBA,eAAeV,YAAY,CAACiB,OAA5B;AACA,MAAM;AAACL,EAAAA,cAAD;AAAgBI,EAAAA;AAAhB,IAAkChB,YAAY,CAACkB,OAArD;AACA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW,MAAMC,QAAN,IAAiB;AACtD,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzB,OAAO,CAAC,MAAD,EAAQ,eAAR,EAAwBuB,KAAxB,CAAvB;AACAC,IAAAA,QAAQ,CAACT,cAAc,CAACU,GAAG,CAACZ,IAAJ,CAASA,IAAV,CAAf,CAAR;AACH,GAHD,CAGE,OAAOa,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvB,OAAO,CAACyB,KAAD,CAAR,CAAR;AACH;AACJ,CAPM;AAQP,OAAO,MAAMC,iBAAiB,GAAIJ,KAAD,IAAW,MAAMC,QAAN,IAAkB;AAC1D,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzB,OAAO,CAAC,MAAD,EAAQ,iBAAR,EAA0BuB,KAA1B,CAAvB;AACAC,IAAAA,QAAQ,CAACtB,UAAU,CAACuB,GAAG,CAACZ,IAAL,CAAX,CAAR;AACH,GAHD,CAGE,OAAOa,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvB,OAAO,CAACyB,KAAD,CAAR,CAAR;AACH;AACJ,CAPM;AAQP,OAAO,MAAME,cAAc,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAClD,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMzB,OAAO,CAAC,MAAD,EAAQ,eAAR,EAAwB,EAAxB,CAAvB;AACAwB,IAAAA,QAAQ,CAACL,cAAc,CAACM,GAAG,CAACZ,IAAL,CAAf,CAAR;AACH,GAHD,CAGE,OAAOa,KAAP,EAAc;AACZF,IAAAA,QAAQ,CAACvB,OAAO,CAACyB,KAAD,CAAR,CAAR;AACH;AACJ,CAPM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {callApi} from '../Helper/helper'\nimport { apiFail,apiSuccess } from 'reducers/mainSlice'\nconst settingSlice = createSlice({\n    name:\"Setting\",\n    initialState:{\n        main:{\n            fixLimitDeliveryDistance:0,\n            deliveryDistance:0,\n            minDeliveryCharge:0,\n            deliveryExtraFeeUnit:0,\n            deliveryExtraFee:0,\n        },\n        storeDetail:{\n            data:null\n        },\n    },\n    reducers:{\n        setMainSetting:(state,action)=>{\n            state.main=action.payload\n        },\n        setStoreDetail:(state,action) => {\n            state.storeDetail.data=action.payload.data\n        },\n    }\n})\nexport default settingSlice.reducer\nconst {setMainSetting,setStoreDetail} = settingSlice.actions\nexport const getMainSetting = (value) => async dispatch =>{\n    try {\n        let res = await callApi('post','/setting/list',value)\n        dispatch(setMainSetting(res.data.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const updateMainSetting = (value) => async dispatch => {\n    try {\n        let res = await callApi('post','/setting/update',value)\n        dispatch(apiSuccess(res.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}\nexport const getStoreDetail = () => async dispatch => {\n    try {\n        let res = await callApi('post','/store/detail',{})\n        dispatch(setStoreDetail(res.data))\n    } catch (error) {\n        dispatch(apiFail(error))\n    }\n}"]},"metadata":{},"sourceType":"module"}